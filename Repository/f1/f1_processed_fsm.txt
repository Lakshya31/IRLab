article published  automaton animation  pc technique vol aprmay page appears original manuscript submitted jeff duntemann change published version due jeffs expert editing modeling sprite animation using finite state automaton copyright diana gruber finite state automaton also known finite state machine fsms thereotical device used describe evolution object based current state outside influence present state object history force acting upon analyzed determine future state object usually finite state machine represented term state transition table theoretically interesting general seem many real world application take advantage property finite state automaton article talk finite state machine associated diagram term used model sprite animation computer game fsm model give u method designing code control sprite animation question concern u given position sprite game force acting upon sprite happens next exactly sort question finite state automaton well suited answering see shortly basic sprite animation first though let review basic technique sprite animation visited topic junejuly issue pc technique breathing life arcade game sprite page article looked simple sprite airplane move horizontally scrolling background occasionally change speed spin horizontal axis simplistic sprite would interesting modern computer game modern game want look sprite wider range motion hero sprite example run jump kick shoot enemy robot sprite roll bump wall emits electrical charge order game competitive current market sprite animation need creative sophisticated maintaining control sophisticated sprite action challenge favorite technique controlling sprite animation combination data structure action function data structure define nature sprite image position game let take quick look data structure focus attention action function real work sprite animation take place basic building block sprite sprite structure defined like  sprite structure  typedef struct sprite char bitmap int width int height int xoffset int yoffset sprite structure hold information necessary display sprite including width height bitmap defines image offset value offset used adjust position sprite useful thing like explosion must centered around midpoint rather displayed corner sprite structure member object structure defined like  forward declaration  struct objstruct typedef struct objstruct obj near objp  pointer object action function  typedef void near action objp objp typedef action actionp  data structure object  typedef struct objstruct objp next objp prev int x int int xspeed int maxxspeed int yspeed int direction int frame int tilexmin int tilexmax int tileymin int tileymax sprite image actionp action data structure contains information particular object game including position x coordinate vertical horizontal speed direction facing frame animation example stage sixstage walk tile extent close sprite may approach edge screen pointer sprite image defined earlier sprite image change sprite move may represent sprite walking running shooting example defining action function last member object structure pointer action function interesting work take place action function function executed frame sprite performs several task cause sprite move changing object x coordinate check collision may spawn new object kill old one importantly action function determines object next frame specifying next action function example action function simplest form void near spritestand objp objp fgkbtest leftarrow objp action spritewalk action function sprite standing still see sprite nothing x coordinate change sprite image change also long key pressed sprite action function change long sprite continues stand still action function continue called frame state sprite change standing walking left arrow key pressed happens spritestand function abandoned spritewalk function take transition happens simply pointer object structure reassigned point new action function difficult part programming sprite animation deciding go action function since sprite one thing time shooting jumping example programmer must make decision action function called choice would calling spriteshoot function jumping action incidental action happening within shooting function calling spritejump function shooting action incidentally happening within jumping function action function finite state machine mentioned beginning article finite state machine defined object whose past history affect future behavior finite number way exactly happening action function current state object combined force environmental variable acting upon determines future state object summarized formula shown current state input environment action future state usually finite state machine represented transition state diagram simple little diagram helpful making decision go action function suppose example simple sprite four thing stand still move forward jump fall action depend keyboard input input cause sprite stand still arrow key pressed cause sprite move laterally ctrl key cause sprite jump sprite stop jumping fall transition state diagram look like input none arrow key ctrl key state standing state walking state jumping state falling state transition table easily categorizes sprite motion simple sprite looking table easy see action function constructed action function simply ifelse construction based row table example code spritestand function would look like void near spritestand objp objp fgkbtest leftarrow  fgkbtest rightarrow objp action spritewalk else fgkbtest ctrl objp action spritejump else objp action spritestand function spritewalk spritejump spritefall would similarly coded consulting entry corresponding row state transition table state transition table easily categorizes sprite motion simple sprite unfortunately tell whole story look state example appears sprite start falling continues indefinitely good sprite would fall right floor need include information environment finite state machine would quite simple could simply put environmental factor another table would perhaps look something like environmental factor floor ceiling wall none state standing state walking state jumping state falling table clear falling hit floor must stop falling similarly walking floor must prepared begin falling table still tell whole story however contains information keyboard input completely tell story sprite animation need add another dimension state transition table done allowing different table state compare environmental variable input generate new state follows state standing input key arrow key ctrl key environment variable none floor ceiling wall way chart sprite action based environmental factor keyboard input typical game perhaps dozen action function one requiring state transition table time consuming chart table simpler case unnecessary exercise convoluted difficult action function taking time build state transition table greatly aid coding work also eliminate bug caused  forgotten  input environment variable possible sprite state accounted 
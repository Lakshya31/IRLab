nintendo entertainment system architecture version   marat fayzullin fm freeflightcom www http wwwfreeflightcomfms irc rsth following document describes working nintendo entertainment system videogame console also known famicom east korea japan dandy europe russia etc note document way based official nintendo information may incomplete incorrect many place  nintendo entertainment system   famicom  registered trademark nintendo would like thank following people help obtaining information writing ne emulator well moral support sorted alphabetically pascal felber pan anthrox john stile kawasedo patrick lesaard tink marcel de kogel paul robson ba vijfwinkel alex krasivsky serge skorobogatov current version file missing information sound hardware add part later release information ne manual feel free write fm freeflightcom help appreciated  content  general architecture interrupt io port ppu memory hitvblank bit joystick sprite memory mapper sequential b konami c vrom switch chip e others sound written  general architecture  ne based cpu custom video controller known ppu picture processing unit ppu video memory separated main cpu memory readwritten via special port cartridge may contain rom appearing main cpu address space  ffff vrom vram appearing ppu address space  fff containing pattern table aka tile table smaller cartridge kb rom take place c ffff leaving  bfff area unused internal ne vram located address  fff ppu memory cartridge also ram  fff may may batterybacked cpu memory map                    upper bank cartridge rom                    c lower bank cartridge rom                    cartridge ram may batterybacked                    expansion module                    inputoutput                    kb internal ram mirrored time                     interrupt  ne us nonmaskable interrupt nmis generated ppu end frame socalled vblank interrupt maskable interrupt irqs also generated circuitry cart cart generate vblank interrupt enableddisabled writing  th bit vblank interrupt occur cpu push return address status register stack jump address stored location fffa rom ne interrupt handler supposed finish execution rti command return cpu main program execution information interrupt handling found decent book cpu  io port  ne internal io port mapped area   port usage unknown unclear information appreciated io port map                                      rw ppu control register  name table show             c                         remember though mirroring real name table vertical write ppu memory address increment name table vw name table vw                   write write v sprite pattern table address screen pattern table address sprite size x x hit switch generate interrupt hit incorrect vblank switch generate interrupt vblank                                      rw ppu control register unknown image mask nt show left column screen sprite mask nt show sprite left column screen switch show picture blank screen sprite switch show sprite hide sprite  unknown                                      r ppu status register  unknown hit flag ppu refresh hit sprite flag reset vblank start cpu read see  hitvblank bit  vblank flag ppu generating vertical blanking impulse flag reset vblank end cpu read see  hitvblank bit                                       w sprite memory address used set address byte sprite memory accessed via address increment access sprite memory contains coordinate color attribute sprite see  sprite                                       rw sprite memory data used readwrite sprite memory address set via increment access sprite memory contains coordinate color attribute sprite see  sprite                                       w background scroll two scroll register vertical horizontal written via port first value written go vertical scroll register unless ignored second value appear horizontal scroll register name table assumed arranged following way             c                         scrolled picture may span several name table remember though mirroring real name table                                      ppu memory address see  ppu memory                                       ppu memory data see  ppu memory                                        sound register see  sound                                       w dma access sprite memory writing value n port cause area cpu memory address n transferred sprite memory                                      w sound switch channel enable sound channel enable sound channel enable sound channel enable sound channel enable sound  unused                                      rw joystick strobe joystick data joystick presence connected  unused set  unknown set see  joystick                                       r joystick joystick data joystick presence connected  unused set  unknown set see  joystick                                        ppu memory  real ne readingwriting ppu memory attempted vblank period many smaller rom readonly memory vrom pattern table case wo nt able write memory f f location vram mirror ie memory cell define background color picture writing ppu memory write upper address byte b write lower address byte c write data write address increment either bit bit reading ppu memory write upper address byte b write lower address byte c read data first byte read invalid address increment read name table contains tile number organized row byte tile x pixel therefore whole name table x tile x pixel ntsc version ne upper lower pixel shown thus screen becomes x pixel pal version ne upper lower pixel show thus screen becomes x pixel pattern table contains tile image following format character color content pattern table    oo      ooooooo fe            note two bit pixel character stored pattern table two taken attribute table thus total number simultaneous color ne screen byte attribute table represents x group tile screen make x attribute table x tile group subdivided four x square follows                                  attribute byte contains upper two bit color number x square lower two bit stored pattern table bit function tile                                 upper color bit square      upper color bit square      upper color bit square      upper color bit square     two byte palette table one f used picture another one f containing sprite palette f f location vram mirror ie memory cell define background color picture enough vram name table attribute table two others going mirror first two ie exact copy page mirrored depends cartridge circuitry vertical mirroring table mirror page appropriately horizontal mirroring page mirror page appropriately ppu memory map                    empty                    f sprite palette                    f image palette                    f empty                    attribute table                    fc name table x tile                    c attribute table                    bc name table x tile                    attribute table                    c name table x tile                    attribute table                    c name table x tile                    pattern table xx may vrom                    pattern table xx may vrom                     hitvblank bit  vblank flag contained th bit readonly location indicates whether ppu scanning screen generating vertical blanking impulse set end frame scanline stay next screen refresh start scanline program reset bit prematurely reading hit flag contained th bit readonly location go ppu start refreshing first scanline sprite located example sprite coordinate hit flag set scanline hit flag reset vertical blanking impulse start program reset bit prematurely reading  joystick  two joystick accessed via location reset joystick write first way generate strobe joystick circuitry read either joystick joystick read give status single button th bit pressed otherwise read                                 button b select start left right bit indicates whether joystick connected port set joystick connected otherwise bit  also seem significance clear yet rest bit set zero game expect get exactly  button pressed taken account  sprite  sprite either x x pixel sprite pattern stored pattern table ppu memory sprite attribute stored sprite memory byte part neither cpu ppu address space entire content sprite memory written via dma transfer using location see sprite memory also accessed bytebybyte putting starting address writingreading address incremented access format sprite attribute follows sprite attribute ram sprite sprite  sprite sprite   byte position lefttop corner sprite pattern number color attribute bit  two upper bit color bit  unknown bit display sprite behind background bit flip sprite horizontally bit flip sprite vertically x position lefttop corner sprite pattern fetched exactly way tile pattern background picture difference occurs x sprite top half sprite taken sprite pattern table set port bottom part taken location alternative pattern table therefore ppu displaying x sprite sprite pattern table set bottom half sprite taken pattern table vice versa  memory mapper  many diffirent memory mapper aka mmcs used ne cartridge used switch rom vrom page task describe mmcs familiar new information mmcs highly appreciated mmc number given term ne file field  mapper type  mapper sequential sequential mapper used many kb cartridge bomberman destiny emperor megaman airwolf operation wolf castlevania silk worm yoshi break thru may used switch rom vrom vrom kb vram present case mostly rpg game cartridge also contain batterybacked ram  fff mapper four bit register accessed via following address register address range function                                       fff mirroring vrom page size select th bit register selects mirroring type horizontal vertical th bit selects size vrom page two kb vrom page switched independently otherwise single kb vrom page bfff vrom page select register set either kb kb vrom page depending page size selected via register c dfff second vrom page select kb page kb vrom page selected via register register set vrom page otherwise value ignored e ffff rom page select register set kb rom page page c always hardwired last rom page cartridge cartridge start page                                      order write mapper register write location first reset mapper write value bit bit appropriate address range example following assembly code write c register lda resetting mapper sta lda c value sta efd writing bit lsr shifting sta efd writing bit lsr shifting sta efd writing bit lsr shifting sta efd writing bit lsr shifting sta efd writing bit mapper konami quite simple mapper used konami life force castlevania metal gear cartridge switch rom cartridge mapper kb vram ie vrom mapper single bit register written via location  ffff contains number kb rom page page c always hardwired last rom page cartridge cartridge start page one thing note mapper although address  ffff range used access mapper game prefer use address last digit equal value write thus written ff ff forth reason unknown mapper vrom switch mapper also known vrom switch used goony series many japaneseonly game allows switch kb page vrom rom either kb kb paged mapper single bit register written via location  ffff contains number kb vrom page mapper many game use location last digit equal value written know mapper chip mapper say expansion chip used many recent cartridge batman return super contra vindicator silver surfer etc extremely complicated device able generate interrupt via irq line set command switch rom vrom vrom page kb rom page appear kb completely understand mapper work information appreciated chip controlled via following location address function                                      command number  written also write register appears reset change made write e value command written th bit control mirroring horizontal mirroring c unknown c unknown e th bit appears swap memory  fff afff set e unknown                                      order use mapper first write command number value page number following command exist cmd function                                      select consequent kb vrom page th bit value written matter ie always select page select consequent kb vrom page th bit value written matter ie always select page select kb vrom page select kb vrom page select kb vrom page select kb vrom page c select kb rom page initial value seems select kb rom page initial value seems                                      note rom page c e hardwired last page rom switched swapped via e though mapper several mapper sophisticated ines partially support support either nt work correctly mapper uncommon cartridge mapper nt cover  sound  written           marat fayzullin 
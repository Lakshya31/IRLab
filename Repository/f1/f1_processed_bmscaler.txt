trainer tumblin body motion hello doc file intended trainer scaled bitmap routine accompanying file meant fast possible clear easy learn going effect mind let put thinking cap get hand dirty okay first little bit background theory basic algorithm implementation scaled bitmap based infamous bresenham algorithm favoured technique drawing line quickly scaled bitmap modify little take column pixel stretch squash let go example could use draw scaled bitmap form vertical column pixel screen taking pixel color one dimensional array following pseudo code example stretch source bitmap larger destination bitmap pixel bitmap pixel bitmap                                       sourceheight starty endy destinationheight endy starty errorterm sourceindex screenx screeny starty colorbitmap sourceindex drawpixel screenx screeny errorterm errorterm sourceheight errorterm destinationheight errorterm errorterm destinationheight sourceindex sourceindex endif screeny screeny screeny endy                                       explanation loop start grabbing color source bitmap want scale onto screen draw color screen current screen coordinate errorterm thingy used help u decide time change index source bitmap pull next color add height source bitmap error term test see error term exceeded size destination bitmap subtract size destination bitmap error term also increase index source bitmap decision done increase screen coordinate keep repeating loop screen coordinate equal ending coordinate specified beginning whole gist scaling small source bitmap larger destination bitmap always increment screen coordinate time loop increment index source bitmap necessary every pixel source bitmap drawn least even repeated need think mind  stretching  bitmap pretty simple really would look like wanted shrink source bitmap smaller destination bitmap pixel bitmap pixel bitmap                                       sourceheight starty endy destinationheight endy starty errorterm sourceindex screenx screeny starty colorbitmap sourceindex drawpixel screenx screeny errorterm errorterm destinationheight errorterm sourceheight errorterm errorterm sourceheight screeny screeny endif sourceindex sourceindex screeny endy                                       idea change one grab color source bitmap draw screen like previous example add size destination bitmap error term error term exceeds size source bitmap subtract size source bitmap error term also increment screen coordinate statement manditorialy increment index source bitmap gist scaling larger source bitmap smaller destination bitmap always increment index source bitmap drawing pixel necessary mean pixel source bitmap skipped scale whole rectangular source bitmap rectangular destination bitmap well combine technique take care case drawing vertically stretched single column pixel okay take care drawing scaled vertical line horizontal dimension basically use routine explained switch x use index source bitmap select column source bitmap want work use routine used actually scaled bitmap nested bresenham loop remember routine make sure cover two type vertical scaling large smaller small larger two type horizontal scaling large smaller small larger oops actually one additional case forgot mention case source destination bitmap equal size easily accounted let one four case also include equality size dimension source destination bitmap another thing remember done vertical line reset index source bitmap back zero reset screen coordinate top clear see complete source code  tip getting code compiled system consists dx mhz trident svga mb mb hard drive sound blaster pro use turbo c  first need copy xlibzip unzip file directory edit makefile change line say model modell used large memory model compile demo might caused people confusion tried compile previous release vectballzip included vectballprj file memmory model large setting xlib released memory model set small please make sure memory model match might also mention also change line say ccbcc cctcc compiled turbo c  worked fine next type make watch xlib get compiled eye noticed strange warning fly screen nt hurt anything one bit guess one demo program nt get compiled important thing xlibllib file got compiled okay create project file typing bc bmscalerprj borland c  compiler tc bmscalerprj turbo c  compiler next add bmscalercpp xlibllib file project use optionscode generation option select large memory model done ready compile bmscalercpp using complilemake compile run ide compilerun play around call bmscaler function use strange coordinate combination make pretty interesting visual effect  guess wrap discussion scaled bitmap question comment email use code demo write greet send cool post card country tumblin body motion 
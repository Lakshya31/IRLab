securedrive vc documentation edgar swank edgar spectrxsbayorg maintenance release securedrive mainly fix reported problem minimal new function see file bugsdoc bugsadoc prototype securedrive version b sent people testing avoid confusion skipping b  official  release visible functional change  appearance msg check byte disk x boot sector need updating  proceed issued login cryptdsk attempt verify passphrase hard disk diskette encrypted version  cryptdsk operating version  compatability mode corrects error computing check byte used verify passphrase update check byte correct  value writes back boot sector note update taken place disk decrypted release  anymore major change c change location securedrive cryptflag boot record addition parameter ucfo rcf release  c secure drive based release   mostly written mike ingle mikeingle delphicom version  significant new code code wrote copyrighted program contains gnu copylefted code therefore may freely distributed term gnu general public licence see file copying legalese securedrive v change v twodrives bug fixed v would get drive order two physical hard drive v fix problem onestep passphrase change instead decrypting reencrypting change passphrase one step cryptdsk improved hashing algorithm v used simple md passphrase produce encryption key allowed attacker test possible passphrases quickly v iterates hash time slow passphrase search new passphrase hashing algorithm v user need decrypt disk v reencrypt v upgrade new algorithm produce different idea key passphrase may unclear previous version v v encrypt one hard drive partition time login protect one partition log second partition first one accessible protected writes reference md refer rsa data security inc md messagedigest algorithm c rsa data security idea tm block cipher covered patent held eth swiss company called ascomtech ag swiss patent number pctch international patent pending idea tm trademark ascomtech ag license fee required noncommercial use commercial user may obtain licensing detail dieter profos ascom tech ag solothurn lab postfach solothurn switzerland tel  fax  ascom idea patent u patent  granted may ep patent ep b granted june jp patent pending use software risk send comment bug report edgar spectrxsaigoncom change version  highlighted   right margin change version  highlighted   right margin many people sensitive confidential data personal computer controlling access data problem pc laptop particular highly vulnerable theft unauthorized use encryption secure mean protection often cumbersome use user must decrypt file work encrypt wipe plaintext encryption easy many people would use securedrive step direction securedrive automatically store sensitive data doswindows system encrypted form securedrive v allows create four encrypted partition hard drive also allows encrypt floppy disk encrypted partition disk become fully accessible tsr loaded proper passphrase entered tsr take k ram loaded high encryption performed sector level completely transparent application program everything disk partition except boot sector encrypted encrypted floppy disk freely interchanged unencrypted one disk partition decrypted returned normal time securedrive us idea cipher cfb mode maximum data security md hash function used convert user passphrase bit idea key disk serial number track sector number used part initialization make sector unique securedrive made four program file sectsr memoryresident driver cryptdsk used encrypt decrypt floppy disk hard drive partition login used unlock encrypted disk partition loading passphrase disk parameter resident module fpart utility finding starting cylinder head number partition getting started instruction one hard drive partition c repartition hard drive want encrypted partition use encrypted floppy without changing hard drive create partition large enough hold sensitive data example assume partition put sectsr cryptdsk login fpart directory path soontobe encrypted drive course normally repartitioning hard drive fdisk destroys data would back data beforehand one partition utility fipszip  nondestructive hard disk partition split util available simtel archive possibly elsewhere claim able split first partition without data loss put autoexecbat loading disk cache sectsr login assuming drive login e tobeencrypted partition four load tsr put encrypted disk partition  safe mode  preventing accidental access damage partition encrypted reboot system make change take effect also use form login login drive cylinder head case login ca nt find partition do disk letter happen configuration two physical disk special disk driver used use fpart utility scan physical drive  drive  number starting zero locate proper number  cylinder   head  actually partition encrypted cryptdsk login return warning message partition encrypted version  cryptdsk us sectsr protect drive encrypted next boot change previous version v v would operate hard disk partition sectsr memory one purpose multiple encrypted hard disk partition four user perhaps member family encrypted partition unique passphrase allows four user privacy even use pc physical hard disk partition data empty run cryptdsk select drive letter enter passphrase cryptdsk encrypt partition skip bad sector repeat hard disk partition different user assigned different partition let run cryptdsk enter unique passphrase type login assuming drive enter passphrase encrypted drive accessible use encrypted floppy use cryptdsk encrypt floppy run login f enter passphrase encrypted floppy accessible entered wrong passphrase access fail drive ready error v login ask verify floppy disk passphrase inserting encrypted floppy disk either b drive given option bypass verification version login always verify passphrases hard disk partition version  may use operand pgp login either either operand login pgp prompt passphrase set pgppass environment variable whatever entered version  use form erase pgppass pressing enter entering null passphrase prompt accomplishes thing login c pgp described without clearing securedrive key sectsr also login pgp run without sectsr memory good way set pgppass echo even useing encrypted disk pgppass already set login pgp login f pgp use whatever pgppass set passphrase hard disk partition optionally floppy login test pgppass passphrase incorrect prompt another passphrase pgppass set form login used passphrase prompted pgppass set passphrase purpose change allow enter single passphrase per boot choose use passphrase pgp secret key securedrive encrypted hard disk partition securedrive encrypted floppy compatability previous version read due use complex hashing algorithm passphrases entered version  compatible entered version   vice versa passphrases produce different bit idea key mike ingle made change slow brute force  dictionary  attack read switch version   decrypt hard disk partition encrypted floppy maybe hundred cryptdsk  reencrypt cryptdsk  also version  noticeable delay second normally quick sx enter andor verify passphrase edgar swank respectfully disagree mike value  feature  opinion may disagree good passphrase change necessary insufficient protect poor passphrase security  exposure  version   relative  made adding one word randomly selected list two random upper lower case alpha character passphrase think greater security exposure plaintext data laying around conversion version  given choice convert  passphrases stay compatible one make selection environment variable set sdcmpy x   denotes selection either x   yes mean cryptdsk always encrypt version  cryptdsk login decrypt disk encrypted version note doublecompatibility feature work diskette let login f verify passphrase encrypted diskette want access  x  exclusive mean cryptdsk login always encrypt decrypt version compatible passphrases generally able access disk encrypted version  version  compatibility mode reason provided exclusive mode know dealing version compatible disk avoid delay checking compatible disk inadvertantly enter incorrect passphrase sdcmp set anything else set cryptdsk always encrypt compatible mode login cryptdsk decrypt disk encrypted either mode take insignificant amount additional time check  passphrase key taken sectsr verified decryption could generated either  compatible mode key internal sectsr already digested passphrase used login cryptdsk encrypt decrypt original passphrase recovered internal key converted one compatibility another flag kept sectsr indicating mode used convert passphrase key though cryptdsk allow internal key used encrypt wrong mode version   c hange passphrase  feature used convert disk encrypted one compatibility disk encrypted specified sdcmp even convert one compatibility retain passphrase different key note ca nt convert compatibiities sdcmpx prevent cryptdsk decrypting first half converting compatible disk also cryptdsk  check allow wasted pas decrypting reencrypting key passphrase compatibility mode version  added lot user message keep informed compatibility used passphrases coming etc detailed instruction creating encrypted floppy disk insert dosformatted floppy disk disk may contain data may empty run cryptdsk select floppy drive enter passphrase required enter passphrase twice confirm cryptdsk encrypt disk version  pgppass set run cryptdsk cryptdsk ask use value pgppass passphrase prompting obviously encrypt lot diskette feature save lot typing version  cryptdsk run sectsr resident may asked want use hard disk floppy password previously entered currently use encrypt another floppy accessing encrypted floppy disk load sectsr already loaded run login f enter passphrase used encrypt disk disk accessible swap disk time long disk encrypted passphrase also access unencrypted disk sectsr switch automatically want access disk encrypted different passphrase type login f enter new passphrase passphrase applies floppy drive version  login f try let read encrypted diskette currently active hard disk passphrase one exists bypass verification step asked want use hard disk passphrase without verification decrypting floppy disk run cryptdsk select floppy drive cryptdsk detect disk encrypted prompt decrypt enter passphrase cryptdsk decrypt disk version  pgppass set run cryptdsk cryptdsk try value pgppass passphrase prompting version  cryptdsk also try active hard disk floppy passphrases sectsr prompting creating encrypted hard drive partition must one partition one hard drive encrypt c drive able boot happens decrypt restore create small partition large enough store much sensitive information plan keep hard drive also run application secure partition speed loss back hard drive installing use fdisk repartition drive set small drive become secure partition copy data encryption run cryptdsk select letter partition want encrypt cryptdsk display physical drive head cylinder boot sector partition verify number enter passphrase encrypt partition take minute depending size partition cpu also describe partition cryptdsk drive cylinder head case cryptdsk ca nt find partition do disk letter happen configuration two physical disk special disk driver used cryptdsk prompt parameter enter  x  prompt do disk letter use fpart utility scan physical drive  drive  number starting zero locate proper number  cylinder   head  note comma   must used separate parameter cryptdsk blank used login version  pgppass set run cryptdsk cryptdsk ask use value pgppass passphrase prompting preventing damage secure partition could caused writing withot first logging load sectsr run login put drive safe mode done autoexecbat writes locked drive ready error occur attempt access encrypted drive prevent do program reading drive window behaves rather pathologically retries attempt dozen time display garbage happens close window log try drive still protected writes window version  add login statement autoexecbat load sectsr encrypting hard disk partition cryptdsk set partition safe mode beginning encrypt cryptdsk bypass sectsr accessing encrypted hard drive partition load sectsr already loaded run login replaced letter encrypted partition type passphrase secure partition accessible note one secure partition accessible time encrypted floppy secure partition active simultaneously ca nt two secure partition active time tsr store two cryptographic key one secure partition one encrypted floppy although v still allows one secure partition active four may placed safe mode partition may encrypted different passphrase allowing four different user group keep data private decrypting hard drive partition version  longer necessary desireable reboot clear sectsr memory run cryptdsk select drive letter enter passphrase cryptdsk decrypt partition version  pgppass set run cryptdsk cryptdsk try value pgppass passphrase prompting changing passphrase version   allow one step select drive cryptdsk prompt change passphrase enter old new passphrases prompted decrypt disk old passphrase reencrypt new passphrase secure decryption encryption separately decryption reencryption done track time intermediate plaintext exists memory never disk version  includes additional testing pgppass sectsr internal passphrases decryption additional prompting new passphrases discussed clearing key typing login c erase cryptographic key memory disable encryption may run login restore access note erase plaintext memory turn computer version  typing login c pgp clear securedrive crypto key memory clear pgppass environment variable done manner le likely leave passphrase memory using do set command addition version  clear free memory find likely include plaintext however want absolutely sure trace sensitive data erased memory turning computer still recommended using disk cache use disk cache smartdrvexe ncache speed access cache must loaded sectsr loaded sys cache work loaded tsr cache loaded first cache ciphertext provide little speedup cache loaded sectsr cache plaintext speed access hazard avoid writing encrypted partition encrypted floppy without logging load tsr put safe mode writes locked however access encrypted disk without loading tsr disk destroyed happened one beta tester use safe mode load tsr autoexec prevent forgetting passphrase lock hazard losing key cryptography special case locksmith save forget passphrase luck data gone using program without backup access disk low level bios program bug unfriendly interaction tsr application could scramble hard drive permanently exporting program cryptography export controlled sending program outside country may illegal nt  author  version   edgar swank say export ban prevent placing program public bb anonymous ftp site u canada individual outside uscanada use internet international long distance obtain copy program may breaking u law foreign individual aware u law enforcement may legally u law apprehend individual break u law even individual even never u soil apprehension may remove individual directly u jurisdiction without benefit extradition proceeding individual home country y actually happened least two case mexico  suspect murder u drug agent panama  noriega  indicted absencia drug smuggling well known small war panama noriega brought usa tried convicted guest u government florida prison potential security problem data leak swapfiles temporary file many application program create swapfiles temporary file time file written nonencrypted disk expose data avoided putting swapfiles temporary file encrypted disk slow best solution use ram disk cache encrypted disk also program norton wipeinfo wipe empty space trojan virus someone could replace login hacked version install specially written trojan system capture passphrase key since key remains memory tsr program could potentially swipe sure way prevent make sure nobody opportunity install trojan pgp verify version c executable module cryptdskexe loginexe sectsrcom fpartexe modified since compiled checking detached signature included first add edgar swank public key public keyring pgp ka keyasc issue command pgp cryptdsksig cryptdskexe pgp loginsig loginexe pgp sectsrsig sectsrcom pgp fpartsig fpartcom integrity check depends upon public key genuine satisfy signature key also public key available independently various public keyservers passphrase guessing passphrase weak single word monocase punctuation weak attacker could try guess proven highly effective unix login password best passphrase phrase four word appear text literature many passphrases addition version  make easier use single passphrase pgp secret key securedrive hard floppy disk obviously putting egg one basket one school thought say better use several basket one break loose egg school say may better use one basket make best damn basket put best effort protecting use single passphrase everything make best passphrase think remember without writing anywhere good passphrase least four five word easiest remember hardest guess  outrageous  use word normally nt go together eg  red grass yellow sky  nt use example use profanity foreign word creative spelling punctuation long remember also make passphrase harder guess backup must encrypted use encrypted disk use encrypting compression program hpack write encrypted file onto backup tape leave unencrypted disk printout lying around alternative hpack combination compression program eg pkzip pgp nt rely  builtin  encryption compression program hpack checkword offset version securedrive version  used byte system id offset boot record encrypted disk store  cryptflag  first four byte contain  cryp  denote encrypted disk last four character offset store byte checkword used verify correct passphrase entered checkword md digest idea key version  passphrase bit idea key md digest iterated version  passphrase checkword calculated stored boot sector disk partition diskette first encrypted whevever enter passphrase decrypt activate disk key checkword generated checkword compared one stored boot record check passphrase entered decryption encryption note boot sector never encrypted also note since md  cryptographicly strong  oneway digest function computationally feasible find idea key much le original passphrase checkword hindsight best choice place flag apparently version msdos especially included laptop pc clone insist system id field boot sector ascii character checkword also new diskette formatting utility spain mmf us system id field purpose reason location cryptflag move system id offset offset boot record securedrive release c release c upward compatible previous release release c activate login decrypt change passphrases cryptdsk disk encrypted securedrive release use previous release securedrive disk encrypted c convert disk encrypted previous version securedrive new standard cryptflag offset using ucfo update cryptflag offset function login either hard disk partition diskette note ucfo overlay system id old cryptflag  msdos  mean disk longer activated decrypted previous version securedrive ucfo nt work combined safe mode parameter changing disk password cryptdsk also update cryptflag offset attention version b user see file bugsadoc instruction reconstructing checkword using disk repair utility login cryptdsk may always say entered incorrect passphrase encrypted disk even sure used right passphrase login cryptdsk may say disk unencrypted obviously encrypted mike report user used disk utility rewrote boot record overlaying checkword apparently  crypt  flag probably different manifestation problem described diskfixing utility want see allascii system id set ascii nt find fix using rcf recover cryptflag parameter login allow activate disk even  cryp  flag overwritten checkword nt match asked enter passphrase twice new checkword written new standard offset hopefully avoid repetition problem next time use utility allowed recover checkword sdcmpx since setting allow login compute check version  compatible checkwords also enter checkword get garbage trying read disk change sdcmp n vice versa try login xxx rcf rcf also nt work combined safe mode parameter note extreme caution required using parameter force activation disk wrong passphrase effectively accessing disk without sectsr loaded write disk would likely make data disk partition diskette unreadable placement sectsr encounter problem cryptdsk fpart nt work sectsr installed try reordering device driver tsr might effect diskette access note cryptdskfpart reach sectsr sector disk io tsr loaded sectsr also bypassed cryptdskfpart general tsr assist reading nonstandard formatted diskette fdreadexe mcom loaded sectsr cryptdsk fpart may used without sectsr loaded necessary running window able get login activate disk window do window however login pgp variant set pgppass set nt work either probably better call login autoexec window possible get disk logged loading window able start cryptdsk do window ran fine switched another window crashed middle dont see anything window problem since crashing cryptdsk middle essentially destroys data disk nt recommend trying run cryptdsk window course sectsr must loaded window nt load sectsr do window using securedrive nonstandard diskette formatting program course securedrive work diskette formatted do format many pc user use nonstandard formatting program supporting tsr store data diskette allowed standard format program one program fdformat tsr fdreadexe originated germany last version fdformzip released fdformat allows example storage kilobyte data cheap dsdd diskette kilobyte do format release securedrive compatible fdformat provided sectsrcom loaded fdreadexe another program mf tsr mcom recently released spain mzip program claim either provide higher storage capacity kilobyte improved access time relative fdformat however recognizes diskette formatted mf via system id field diskette boot record release c securedrive also used system id field test encrypted diskette check valid passphrase mf used securedrive release c encrypted diskette want switch fdformat diskette must load fdreadexe mcom sectsrcom fortunately fdread load high sectsr loaded high loadhi source code modification sectsrasm selfcontained source sectsr use tasm tlink assemble cryptdsk us sdcommon cryptobj generated cryptasm also us mdc pgpa source code login us sdcommon mdc version  login also us setenvobj generated setenvasm code used setclear pgppass environment variable code set enviornment variable copy environment find may work situation do set command hand early version do may find master environment area experiment version  add rldbiosasm module replaces c library subroutine biosdisk allows login cryptdsk fpart access  real  bios without going sectsr program compiled turbo c compile large model version  b makefile provided make interesting modification improvement send u edgar mike mail copy new code hope program become popular modified improved net miscellaneous version  cryptdsk exit gracefully attempt made write writeprotected diskette version  sectsr modified align internal stack data field may marginally improve performance bit pc note version c cryptdsk login fpart require use version c sectsr mix module different version cryptdsk fpart may run without sectsr loaded 
chapter associated tool xref crossreference symbol listing facility xref tool creates crossreferenced symbol table listing program invoke xref must provide program invocation line either typed console do command prompt appears included batch file program invocation line consists program name xref followed name sym symbol table file produced assembled program need give sym extension note follow normal methodology name symbol table file name program xref obtain list source file symbol file read source file create listing file name sym file xrf extension prior v xref required list source file explicitly given allowed specify name output file retain compatibility batch file invoking old xref current version ignores anything command tail symbol file name mean longer specify different output file name sorry  could nt think way compatible without overwriting somebody source file xref output always rename file xref completed example type xref myprog obtain cross reference assembly produced myprogsym output file myprogxrf output xref alphabetical listing nonlocal symbol program symbol xref give type file defined value list procedure file used print file typically use tcols tool obtain multicolumn listing xref singlecolumn output note use procedure name identify reference  unique package make crossreference listing truly readable crossreference listing give either line number meaningless unless go find associated line file name nt give much useful information detailed description various piece information provided symbol type label indicated colon immediately following symbol name special symbol macro name denoted appropriate word  macro  place value following line symbol type described one two character following symbol name possibility first character  simple memory variable index memory quantity c constant interruptequate structure second letter size attribute b byte w word f far doubleword file symbol defined name stripped extension presumably source file name preceded period denotes definition reference symbol value given hex digit line following symbol memory variable location variable indexed quantity constantdisplacement part quantity structure size structure interrupt equates number interrupt reference given indented line following symbol name occurrence symbol program produce reference symbol first thing line considered  definition  symbol reference listed source file name name preceded period definition via colon ie label preceded equal sign otherwise symbol first thing line definition reference listing consists name last definition xref scanned program organized standard way name procedure reference occurred observe must use locallabel facility make work nt use local label  placemarker  symbol symbol xref give often name last  placemarker  symbol name last procedure save space duplicate reference entry denoted single entry followed  n  n decimal number occurrence entry exmac macro expansion tool tool called exmac help troubleshoot program line call macro sure code generated macro call exmac tell use tool must first assemble macro definition produce symbol table file produce sym file even error error nt catastrophic sym file good enough enable exmac job  exmac used two different way first used interactive program invoke program way typing  exmac myprog  myprogsym name symbol file type number macrocall line line program display expanded program text produce program think line macro call simply echo line back mode exit program typing controlz beginning line terminating line enter return computer key ibmcompatible computer controlz code also generated f key convenience second way using exmac feed source file output equivalent source file macro expanded may wish rename new file original source file assemble new file method useful get error macro expansion line nt know error came use exmac second way simply redirect standard input output  exmac myprog infile outfile  redirection exmac take input file  infile  instead keyboard send output file  outfile  instead screen familiar redirection standard input output might want read chapter  standard input standard output  msdos reference manual alib source file library tool tool alibcom available registered let build library source file use alib must first code debug source file wish include library issue command alib followed name source file wildcards accepted typically want gather source file single directory use wildcard specification example use filename extension  source file issue command alib  create library library created consists catalog file always named alib together source file fed alib create catalog following observation alib order unlike objectcode library alib contains symbol name file name contain code must retain source file used create alib read file need consulting alib read name  alib record nonlocal symbol start line followed colon equ recall local symbol name consisting single letter followed one decimal digit alib also record symbol appearing line starting word public symbol appears one library source file logged first file alib see subsequent one error reported unless try assemble file one assembly see conflict alib simpleminded alib recognize expand macro recognize conditionalassembly directive library file stand macro conditionalassembly variable used might well defined main program program accessing library file may update alib running alib either new file previouslyrecorded one alib given file already read previous run alib mark symbol logged file deleted rereading file symbol still file  unmarked  thus symbol deleted file disappear functionally alib still occupy space within alib getting alib tolerate alteration library file quite nicely optimum storage efficiency delete alib rebuild scratch time delete anything library alib fast never painful using alib assembly created library alib access simply calling procedure program finish assembly see undefined symbol program automatically look copy alib current directory directory described next section undefined symbol found alib catalog file containing assembled see list file output console subroutine library library effectively permanent part language called effortlessly program time build impressive arsenal library module making easy program highlevel language  environment variable alib set environment variable alib specify drive subdirectory contain alib file variable consists sequence path name separated semicolon like path variable used operating system example include autoexecbat file line set alibc binlib toolsalib look alib current directory look c binlibalib toolsalibalib keep looking three catalog file assembling appropriate source file undefined symbol source file assemble every symbol alib catalog recorded name library file containing symbol library file assumed directory alib file unless complete path name starting drive specifier fed alib alib created forcing library search may force assemble library file moving program source file placing hash sign hex code file name invocation line example suppose program two module first last first call subroutine library need library file assembled last assembled might want last allocates memory space beyond end program would end last truly last module accomplish invocation line first last note never need force library search end program module always make library search undefined symbol listing produce lst file anything similar pause allow traditionalist recover swooning shock ok everybody back consciousness good let try strip away preconception look thing fresh viewpoint particular let consider use listing file see meet need programming year generated literally ton listing historically used listing  find error message early day intel text editor bad actually faster march across building physically print list file use editor find error message even fast editor pain go list file enduring column wide format column screen copy error paper go back source file find error nt assembler stick message directly source file view edit source simultaneously want see code generated hexadecimal byte left listing real necessity back day hexadecimal debugger furiously patching hex object byte needed listing find way around program debugging today symbolic disassembling debugger power today debugger mean seldom need look hex object byte debugger show get symboltable listing necessity diminishes great deal symbolic debugger still like listing time time devised separate program xref go another pas source file creates useful crossreference listing may ask  forced essentially reassemble code get symbol table assembler give original assembly  nt fooled assembler go source file twice even three time behind back every time want assembly one reason assembler much faster everyone else look code often past needed see program spread paper get handle program needed le le lately two reason first text editor improved much much easier cruise file screen second program adapted screenviewing methodology almost subconsciously started making conceptual  chunk  code fit line screen rather line page course make better modular program spaghetti tends untangle chop gotten point develop developed line application fully debugged without ever making listing  archival purpose still never put trust magnetic medium stripped away reason anything source code symbol table copy source file crossreference listing printer nt looked listing much nt bothered pagination control want insert form feed source ignore write simple listing tool recognizes page directive ignores directive also partial remedy convinced argument command sends disassembly file disassembly formatted style assembler listing file location hex code left see manual detail mimicking tool fakeexe writing turbo c aware existence microsoft masm assembling source file generates hope persuade borland provide switch turbo c cause invoke directly happens offer tool fakeexe convinces turbo c really masm use fakeexe must renamed masmexe disk system would named masm except bill gate would probably get mad need decide real masm installing fake could either place fake named masmexe individual directory containing turbo c program rename masm something like msmexe realmasmexe renamed fakeexe masmexe may use turbo c switch b allows place statement c program nt need worry gory detail fake like gory detail fake filter command line handed replacing switch becomes ml becomes c mx becomes c e becomes f fake also eliminates semicolon appends asm source file name turn switch feed resulting filtered command line assembly 
 following text file captured result call jim davis retreat  houston texas went board download gtctl gtlog two utility used gt powercomm jim came line assist experienced transmission problem took opportunity ask question gt powercomm pc communication jims response presented aid neophyte  pc communication raymond wood  vernacular communication industry concept need understood understanding accomplished example word baud essentially mean bit per second fact mean something little different opener let say mean whenever two machine going try communicate couple thing done must set send receive frequency example often used frequency today baud mean bit per second said well user idea bit involved file transfer message transfer let look another standard word byte bit information contained byte byte merely set bit within set bit permutation available zero one letter alphabet digit special character represented predetermined set pattern bit capital j different pattern lower case j example given true easy see total possible pattern would necessary represent text thus another may used special purpose example get sending bit high low word binary information definition binary process computer need recognize one two state telephone hand carry information binary faithfully represent different tone pitch volume called analog rather binary almost sole purpose modem translate binary signal analog vice versa going send set bit across telephone convert binary state form sound telphone designed best carry modulating signal binary analog mo modem demodulating analog signal back binary reverse dem  modem want transmission highly reliable must simply send binary information modulated heard noise telephone line without demodulating bit receiver doubt virtually impossible time able tell sound bit plain noise application nt really care much example include transmission plain text file recall necessary send letter many special symbol digit capability required different combination bit bit sufficient represent permutation bit byte bit long could contain many different set bit however byte bit long definition called ascii american standard code information interchange transmission use first bit represent data th bit represent form insurance integrity check first received sent called using parity establish convention sender receiver every byte even number bit odd use th bit sending end receiving end ever get byte odd parity know received byte error bit bit either added lost parity checking ascii transmission good sufficient text program file data file even text file compressed archived way use bit every byte represent information lost ability use parity integrity check vehicle instead every protocol ascii add either one two full byte end block byte block fixed length usually byte purpose one two byte contain called cyclic redundance check crc character word like parity crc constructed sending end create pattern bit demonstrates preceeding entire block byte received integrity receiving end dynamically creates crc information received compare byte byte received end block nt match block must rebroadcast requested sending sender signal say  negative acknowledge  nak ok sends ack meaning  acknowledge  next block sent let go back idea baud baud modem able send receive  bit per second many bit per byte yes telephone line using modem instead bracket byte sending called start bit bit data ending call stop bit sometimes baud every byte requires bit thus baud maximum possible data transfer rate character byte per second ok know send many bit required something called response receiver called either ack nak nt get byte per second transfer using baud modem well already saw every byte data protocol send additional one two byte crc count crc byte data yet take time transmit also take time protocol turnaround react ack nak example assuming well sender hundred block upload receiver first block sent convention must wait receiver analyse crc decide going respond ack nak take moment send sender turn receive verify got properly noise decide whether send next block resend last one improperly received receiver take time time used described called overhead overhead include transmission data control bit time thus impossible get effective data transmission rate even character per second let alone crc etc know telephone capable carrying sound direction simultaneously sender wait receiver ack nak mode operation often called  duplex way answer course convention newer protocol wait assume transmission successful result getting ack go immediately task sending next block always listening course ack nak received ack well gained performance software decide block block rebroadcast order obvious ack nak simply single byte rather includes byte called packet number possibly information ack received recipient know series block packet referring similarly would know nak yep bit overhead well let see get contemporary term information practical know time example almost nobody us ascii transfer poorly controlled realize uncompressed raw text sent still great many first time communication user try transmission appear work resulting file garbage course bit transmitted byte many comm program allow use ascii even know result unsatisfactory example filename end com exe convention file executable program program use bit every byte could therefore transmitted via ascii comm program let try something stupid course knowledgeable user protocol currently exist wide spread usage across country frequently seen called xmodem protocol quite reliable us block byte plus one crc character end every block us one crc character reliability another called xmodemcrc exactly xmodem us two crc character result effective performance reduced insignificantly th reliability increased  case choice two would course opt xmodemcrc particulary true environment one computer involved either mini mainframe protocol called kermit believe us byte block overhead header block block zero provides control information also reliable  believe slow used protocol available called ymodem protocol differs earlier one sends byte block together super block sends two byte crc word result fastest protocol ever seen micro computer use dumb modem ie non self correcting one two time one use protocol choice line noise great telephone retransmission block failed involves  byte even one bit gained lost lot overhead environment like pcpursuit involves long duration hand shaking turnaround delay another protocol called telink telink us byte block advantage one result file exactly size date time stamp one sent ymodem example add pad block exactly byte last record even record contains byte data gt powercomm unique protocol called ktelink telink except us byte block therefore efficient like ymodem ktelink used clean phone line performance unlike ymodem used even short file efficiency case gt communicating gt gt either ymodem ktelink experience set error transmission single file automatically fallback byte block greatly increase odds transmission completed greatly increase efficiency presumed noisy line neat best protocol time use pcpursuit environment called wxmodem stand windowing xmodem us byte block wait block response always listening acks naks course extremely high performance result relative xmodem  duplex protocol wxmodem try stay block ahead receiver time receiver try get caught difference block sent currently received ack nak called window number two odd protocol become relatively visible late called zmodem batchyam zmodem designed use pcpursuit like environment like wxmodem best protocol use environment zmodem wait acks naks unlike wxmodem zmodem relatively slow one reason us buffering thus every byte data must make another disk access batchyam much like ymodem except allows specify set file name batch slower ymodem except possibly pcpursuit must user know file transfer protocol available end transmission file name file end file name end receiveing end transmission already file name file want send naturally call new file something else thus every comm program allows specification file name end name end irritant already typed necessary said must make exception telink ktelink protocol allow batch name like batchyam receiving end transmitting end file name wood question ok davis sure wood four exact  mention datetime stamp one protocol description define use prior used pcdos msdos mark every file date time file created last modified let say want send copy transmission log dated  do use protocol telink resulting file end dated date time created system today telink creates file leaf system date time stamp still intact receive arced file timedate stamp exe module somewhere davis several place example directory record disk formal residence stamp case arc file date time stamp additionally within arc file record merely another way saying file within arc file date time file directory record arced arc file unarc resulting file today date time stamp one recorded within arc file wood good understand perfectly relate sometimes mainframe mentioned padding ymodem receiving end recognize padding discard automatically davis let say file want send exactly byte long block transmitted ymodem contains byte date plus byte crc therefore take two block send file second block contain byte data plus padded  blank  actually end file mark ymodem sends byte every time receiver automatically strip padded byte indeed pass resulting file always even multiple thus sent byte file becomes byte file wood ok   came conclusion without thought necessary support said   thus byte result disk access zmodem   follow conclusion help davis sure discussed tutorial talked buffer buffer fixed length amount memory sufficient contain number block data case zmodem block byte way protocol used buffer could large multiple block memory awaiting transmission instead zmodem use buffer thus must memory one sector data time pc world sector byte two block data far zmodem concerned since case two block byte zmodem must go back disk get data transmit wood one first thing learned programming school  year ago could thing lot faster one buffer typically system use least two would zmodem use memory problem davis ca nt speak author zmodem say typically protocol written program like gt powercomm xmodem wxmodem etc instead come rather conveniently form exe program run independantly comm package simple shell comm package latter case way know much memory might available majority system program could course simply find recall end transmission highly dependant upon compatible software might author zmodem simply took easy way nt know wood lead nicely final question deal today comm package first bought pc necessary research reading review magazine like software digest rejected xtalk settled hyperaccess started using discovered shareware come conclusion two class product micro world today commercially developed company us xtalk corporate environment order comm package get corporate guru decide best like procommm like feel ripped buying hyperaccess feel uninformed time area procomm seems reign king majority pc user  advantage gt procomm davis excellent question let try deal professionally instead bias would naturally gt powercomm wrote documentation gt twice called procomm embarrassing would released without edit let go back little time era pc virtually micro computer bit design rather time undisputed king area comm package crosstalk enjoyed excellent reputation well supported terribly expensive one comm package supported become whole set protocol transfer method xmodem protocol well day comm package nt work reliably sure hardware problem software problem simply put crosstalk worked conclusion problem software reliable along came pc crosstalk ported bit world way made little progress term adapting capability pc day believe impossible change directory crosstalk though could wrong essence crosstalk continues available though run reliably bit environment run like cpm environment do one leading contender shareware world called qmodem enjoyed excellent following remarkably efficient comparison crosstalk much faster fact couple contemporary protocol available crosstalk took successful product ever since opinion would still champion product save author problem great program nonetheless time hayes modem manufacturer introduced smartcomm ii commercial product shipped many modem brand identification accepted despite clumsiest comm package ever seen furthermore efficient comparison qmodem essentially unchanged since introduction sound like crosstalk new comm package hit scene called procomm program author spent great deal attention image used imaginative idea like whistle announced opening closing window window innovative etc near efficient qmodem captured imagination user like qmodem price right try decided sent small check shareware procomm advanced far faster qmodem term incorporating different protocol incorporation called host mode unattended mode operation autoanswer modem etc became king call innovative current efficient though quite respectable gt powercomm formally announced shareware world st last month  includes protocol including also present ascii course baud routinely establish data transfer rate  character per second best ever got qmodem procomm actually get qmodem term performance nothing come close fast gt powercomm saw procomm user looking incorporated extremely rich function called log log recorded connects disconnect messges host password used gain access bad password tried even interesting name time trasmit every file go gt another computer along total bye involved name protocol used transmission finally manually created note message might ask would answer sysop board corporate system must able determine sent file messgage yes date time stamp included entry log example would reaction found program disk trojan horse could determine came say created proforma department downloaded different executive discover major error would nt want able determine received file kind question automaticlly answered via gt log gtlog main reason feeling substantial difference gt procomm user area support take occurred talking three hour already nt even know registered user gt well one two u exactly thing author gt powercomm paul meiners provides hour day access system author companion software provided many new version gt powercomm past year provide release  two week announcing  st constantly enhancing product user want u several major client already including one major oil company one major airline one country largest school district finally nobody better host mode gt powercomm run bb using nothing else power function try love wood ca nt wait put system together rest assured register program exprogrammer know involved wish product much luck say hour davis believe nt remember reset hour time limit gave twice possibly three time way favor exchange time would mind terribly arcing capture file sending copy make available tutorial others make available others well possible come know gt powercomm well wood problem able couple day however modem blink waiting replacement upload gt log ctl file bulletin board normally deal already uploaded corporate bb expect get healthy ribbing procomm lover asked question though would like get log file davis thanks opportunity help must get work take chat mode nt forget close capture file minute left jim davis retreat voice  data  xx another file downloaded nirvananet tm temple screaming electron jeff hunter  rat head ratsnatcher  burn flag zardoz  realitycheck poindexter fortran  lie unlimited mick freen  specializing conversation obscure information high explosive arcane knowledge political extremism diversive sexuality insane speculation wild rumour alltext bb system full access firsttime caller nt want know live phone number big brother  raw data raw nerve  xx 
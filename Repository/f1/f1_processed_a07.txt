chapter floatingpoint processor chapter refer various central processing unit cpu   thus   refers either etc refer various coprocessors   thus   refers either special iitc processor coprocessors ibmpc clone contain socket floating point coprocessor shell plug appropriate chip socket host floating point instruction added assembly language instruction set original ibmpc xt accept original floating point chip accepts later update programming standpoint two chip nearly identical add instruction fsetpm fstsw ax ignores instruction feni fdisi however rather nasty design flaw corrected understand flaw must understand work coprocessors whenever see floating point instruction communicates instruction associated memory operand go next instruction operating parallel ok long following instruction nt one following execute another floating point instruction try read result stillexecuting floating point instruction must provide instruction called wait synonymously fwait halt finished almost floating point instruction necessary provide explicit fwait ought know wait necessary give explicit fwait floating point instruction flaw flaw assembler supporting silently insert fwait code hex b instruction except fn instruction fnop requiring fwait provides switch f f must capitalized signal target processor also provides directive    compatible microsoft assembler insert program accomplish thing f however action taken microsoft seeing  completely disjoint wit  cease outputting fwait directive unnecessary reason beyond comprehension microsoft continues put someone enlighten microsoft putting code ignores instruction feni fdisi fneni fndisi see  directive microsoft continues assemble instruction microsoft recognizes new instruction see  directive recognizes even  given general nt attempt police instruction usage  use instruction available limited number processor trust programming one processor summary program running machine give    directive program significantly shorter assembled microsoft want program run machine containing floating point chip refrain specifying  warning common mistake programmer make try read result operation memory result ready least system often crash program run correctly single stepped crash set loose chance need extra explicit fwait somewhere extra coprocessor support support two additional coprocessors available pccompatibles available based machine iitc plugcompatible chip add couple unique instruction iitc two extra bank onchip number stack switched fbank instruction matrix multiply instrction us three bank input detail contact specialty software development corp wild basin road austin tx chip incorporate correction fwait design flaw assemble  directive extra instruction chip marked    iit  chart end chapter emulating software software package provided many compiler borland turbo c microsoft compiler example emulates instruction set emulator cleverly implemented programmer need know whether floating point chip available whether emulation necessary done linker replace floating point machine instruction int call certain interrupt dedicated emulation interrupt handler interpret operand instruction emulate  tell emulator might used providing f switch invocation line environment variable make sure f lower case since program linked emulator must producing obj file com file emulation support take effect whenever floating point instruction assembled generate external reference opcode instruction emulation package linked program opcodes replaced int call special nonemulation module linked opcodes left alone floating point instruction executed directly floating point stack register set floating point number occupying byte plus byte status control information many instruction cause number act like stack much like hewlettpackard calculator reason number called floating point stack standard name top element floating point stack either st st others named st st thus example instruction add stack element number top stack element usually coded fadd st st find notation painfully verbose especially bad parenthesis hard type add visual clutter program alleviate problem retaining language compatibility name stack element simply recognize st synonym allow expression element concatenated concatenation addition thus see st computes  code old way fadd st st code concise way fadd  simply fadd floating point initialization general use loading number memory stack using fld instruction calculating stack storing result back memory using fst fstp instruction seven constant number built instruction set zero one pi four logarithmic conversion constant loaded using fld fld fldpi fldlt fldle fldlg fldln instruction constant must declared loaded memory integer constant word doublewords loaded via fild noninteger constant doubleword quadwords tenbyte number loaded via fld  allows declare constant loaded via fld floating point number using scientific notation like exclusive feature allows use arithmetic function expression involving floating point number even type conversion one two operand given integer though clarity recommend always give floating point constant decimal point builtin constant name offer another exclusive feature builtin symbol pi ratio circumference diameter circle lt log base le log base calculus constant e   lg log base ln natural log base e use symbol expression declare useful constant example declare degreestoradians conversion constant degtorad dt pi special immediate fld form yet another exclusive feature instruction form fld constant form intended primarily facilitate  fooling around  using also useful quickanddirty program example instruction fld  generates following sequence code byte without explicitly using local label given c fld jmp dt  obviously form terrifically efficient always save jmp placing constant outside instruction stream c override might needed form convenient note preceding section imply get careless code example fld pi intended fldpi though two functionally equivalent first form take whopping byte second byte careful  floating point operand type list floating point instruction contains variety operand type brief explanation type stand top element floating point stack synonym st st stand element number floating point stack range synonym st memr byte memory quantity typically declared dt directive containing full precision floating point number intel recommends store number full precision use following double precision format instead full precision number intended storage intermediate result stack exist insure maximum accuracy calculation double precision number official external format number memr byte memory quantity typically declared dq directive containing double precision floating point number best format floating point number take amount time double precision calculation single precision extra time memory access byte negligible comparison calculation time memr byte quantity typically defined dd directive containing single precision floating point number memd byte quantity also defined via dt containing special binary coded decimal format recognized fbld fbstp instruction format useful input output floating point number memi byte quantity representing signed integer twoscomplement notation memi byte quantity representing signed integer twoscomplement notation mem mem  byte buffer containing machine state  operand choice  standard  assembly language choice operand floating point instruction seems inconsistent example subtract stack must provide two operand equivalent comparison must provide one operand smooth inconsistency allowing choice operand fadd equivalent fadd fcom equivalent fcom hold main arithmetic instruction fxch fxch allowed wish retain compatibility assembler use restrictive instruction list following one instruction set following instruction set  w  opcode field fwait opcode hex b suppressed  selected       stand associated floating point stack register constant number constant number description given decimal point     opcode instruction description w f fxm    w db f fx iit matrix multiply w e fabs  w de c fadd pop w ci fadd w dc ci fadd w ci fadd w  fadd memr memr w dc  fadd memr memr w de ci faddp pop w db e fbank iit set bank pointer default w db eb fbank iit set bank pointer bank w db ea fbank iit set bank pointer bank w df  fbld memd push memd w df  fbstp memd memd pop  w e fchs  b db e fclex clear exception w fcom compare w di fcom compare w di fcom compare w  fcom memr compare memr w dc  fcom memr compare memr w fcomp compare pop w di fcomp compare pop w di fcomp compare pop w  fcomp memr compare memr pop w dc  fcomp memr compare memr pop w de fcompp compare pop w ff fcos push  cosine old w f fdecstp decrement stack pointer w db e fdisi disable interrupt  ignore w de f fdiv pop w fi fdiv w dc fi fdiv w fi fdiv w  fdiv memr memr w dc  fdiv memr memr w de fi fdivp pop w de f fdivr pop w fi fdivr w dc fi fdivr w fi fdivr w  fdivr memr memr w dc  fdivr memr memr w de fi fdivrp pop w db e feni enable interrupt  ignore w dd ci ffree empty w de  fiadd memi memi w da  fiadd memi memi w de  ficom memi compare memi w da  ficom memi compare memi w de  ficomp memi compare memi pop w da  ficomp memi compare memi pop w de  fidiv memi memi w da  fidiv memi memi w de  fidivr memi memi w da  fidivr memi memi w df  fild memi push memi w db  fild memi push memi w df  fild memi push memi  w de  fimul memi memi w da  fimul memi memi w f fincstp increment stack pointer b db e finit initialize w df  fist memi memi w db  fist memi memi w df  fistp memi memi pop w db  fistp memi memi pop w df  fistp memi memi pop w de  fisub memi memi w da  fisub memi memi w de  fisubr memi memi w da  fisubr memi memi w ci fld push old w db  fld memr push memr w  fld memr push memr w dd  fld memr push memr w e fld push  w  fldcw memi control word memi w  fldenv mem environment mem w ea fldle push log base  e w e fldlt push log base   w ec fldlg push log base   w ed fldln push log base e  w eb fldpi push pi w ee fldz push  w de c fmul pop w ci fmul w dc ci fmul w ci fmul w  fmul memr memr w dc  fmul memr memr w de ci fmulp pop db e fnclex nowait clear exception db e fndisi disable interrupt  ignore db e fneni enable interrupt  ignore db e fninit nowait initialize w fnop operation dd  fnsave mem mem state  fnstcw memi memi control word  fnstenv mem mem environment df e fnstsw ax ax status word dd  fnstsw memi memi status word w f fpatan arctan  pop w f fprem repeat w f fprem repeat ieee compat w f fptan push  tan old  w fc frndint round w dd  frstor mem state mem w dd  fsave mem mem state w fd fscale   b db e fsetpm set protection mode w fe fsin push  sine old w fb fsincos push sine co old w fa fsqrt square root w dd di fst w  fst memr memr w dd  fst memr memr w  fstcw memi memi control word w  fstenv mem mem environment w dd di fstp pop w db  fstp memr memr pop w  fstp memr memr pop w dd  fstp memr memr pop w df e fstsw ax ax status word w dd  fstsw memi memi status word w de e fsub pop w ei fsub w dc ei fsub w ei fsub w  fsub memr memr w dc  fsub memr memr w de ei fsubp pop w de e fsubr pop w ei fsubr w dc ei fsubr w ei fsubr w  fsubr memr memr w dc  fsubr memr memr w de ei fsubrp pop w e ftst compare  w dd ei fucom unordered compare w dd e fucom unordered compare w dd ei fucomp unordered compare pop w dd e fucomp unordered compare pop w da e fucompp unordered compare pop b fwait wait ready w e fxam c  c type w c fxch exchange w ci fxch exchange w ci fxch exchange w ci fxch exchange w f fxtract push expo sig w f fylx log base  pop w f fylxp log base   pop 
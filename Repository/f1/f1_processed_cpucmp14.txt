performance comparison intel dx intel rapidcad c dx cyrix dlc document containing description benchmark comparison intel dx intel rapidcad c dx cyrix dlc put together benefit netcommunity believe guarantee data given herein correct would like report error document suggestion enhancement feel free contact following email address juffa iraukade also write snail mail address norbert juffa wielandtstr karlsruhe germany correction pertaining spelling grammatical error also encouraged especially netusers native speaker american english third version document thanks people helped improve comment previous version alex martelli martelli cadlabsublinkorg fred dunlap fred cyrixcom antony suter antony werpleapanaorgau special thanks editing article go david ruggiero osiris halcyonhalcyoncom previous version article also appeared print check juffa n  performance comparison intel dx intel rapidcad c dx cyrix dlc  association francaise de utilisateurs dunix et de systemes ouverts ed  dossier special benchmark  march pp  document released june                                      three new cpu introduced pc marketplace capability replace standard intel dx cpu provide higher performance existing system new chip intel rapidcad chip technology c super dx cyrix dlc chip initially released mhz version least cyrix dlc available mhz version intel rapidcad marketed enduser product mean pc manufacturer ship system rapidcad already installed c sell product directly end user well pc motherboard manufacturer cyrix currently sell oems original equipment manufacturer motherboard manufacturer cyrix also manufacture slc replacement intelamd sx cpu c announced sx chip ship sometime intel rapidcad          intel rapidcad rough term intel dx kb onchip cache removed pinout software appears dx math coprocessor specific instruction removed instruction set marketed intel  ultimate coprocessor  name implies main purpose replace dx existing system thereby boost performance floatingpoint intensive application cad software spreadsheet math package eg spss mathematica rapidcad delivered set two chip rapidcad pin pga pin grid array chip go cpu socket replaces dx contains cpu fpu floatingpoint unit rapidcad pin pga chip go coprocessor emc socket contains simple pla whose purpose generate ferr signal motherboard logic provides full pccompatible handling floatingpoint exception many cpu instruction execute one clock cycle rapidcad intel rapidcad constrained however use standard dx bus interface since every bus cycle take two cpu clock cycle mean instruction may executed rapidcad faster fetched memory fpu instruction take longer execute cpu instruction greatly slowed slow bus interface execute time intel dx therefore intel rapidcad provides higher overall floatingpoint performance  combination result spec benchmark common workstation unix benchmark suite show rapidcad provides floatingpoint integer performance intel dxdx combination clock frequency power consumption rapidcad typically mw mhz current street price mhz version  u c dx        chip technology dx designed compatible intel dx cpu unlike amd cpu use microcode identical intel dx microcode c dx us new microcode developed within c using  cleanroom  technique c even included dxs  undocumented  loadall instruction instruction set provide full compatibility intel chip instruction execute faster dx dx c also produce dx cpu includes byte instruction cache provides performance increase intel part dx need bigger socket pin pga therefore pincompatible dx test found dx severe problem cpu coprocessor communication cause floatingpoint performance drop level provided intel dxintel dx program problem exists available compatible coprocessors ulsi c iit c cyrix emc cyrix cyrix  c intel dx netacquaintance also test dx arrived similar result contacted c said aware problem typical power consumption mhz dx mw le typical power consumption intel dx mhz mw dx currently sell u mhz version cyrix dlc         cyrix dlc latest entry market dx replacement feature sx compatible instruction set kb onchip cache x bit hardware multiplier risclike execution unit dlc executes many instruction single clock cycle hardware multiplier multiplies bit quantity clock cycle compared  cycle standard intel dx especially useful address calculation code non optimizing compiler may contain many mul instruction array access software floatingpoint arithmetic eg coprocessor emulator kb cache help dlc overcome limitation bus interface although hit rate average normal program condition existing system dma transfer performed scsi controller sound board may force internal cache dlc flushed mean available system enforce consistency content onchip cache external memory stem fact bus interface designed without provision onchip cache problem reduce performance dlc system sizeable amount bus master dma cyrix however defined additional cache control signal dlc line used improve communication onchip cache larger external cache main memory prevent problem current system ignore signal since defined intel dx however motherboards designed use cyrix chip able take advantage thereby gain increased performance cyrix cache unified datainstruction writethrough type configured either directmapped way set associative cache permit definition four noncacheable region particularly useful system memory mapped peripheral eg weitek math coprocessor compatibility reason cache disabled processor reset must enabled help small program provided cyrix prevents problem bioses  dlc aware  motherboards come dlc installed usually feature bios support cache switch machine selftest machine additional software required take advantage cache cache control program cyrix do program antony suter antony werpleapanaorgau informs public domain driver o bsd linux enable cache available various ftp server dlcs work correctly math coprocessors circumstance protected mode multitasked environment eg mswindows enhanced mode especially critical using dlc cyrix emc cyrix chip produced prior november iit c able completely lock machine due synchronization problem cpu coprocessor executing fsave frstor instruction used save restore coprocessor status task switch according cyrix problem occurred first revision dlc like sample chip fixed newer one safe side dlc best used cyrix   europeonly  name identical cyrix usbound chip manufactured october highest performing coprocessors market also work properly even first generation dlc already cyrix coprocessor want know whether old new type recommend use comptest program available ctestzip via anonymous ftp garbouwasafi fine ftp server comptest report  either  identical newer version installed use version cyrix dlc without problem believe may problem dlc combination suggest contact cyrix technical support fasmath u power consumption mhz dlc typically mw cyrix ca nt fill demand dlcslc chip currently sell chip oems two million slcdlc cpu sold far slc especially popular notebook manufacturer chip sold retailer seem  surplus  chip sold oems premium price price dlc u bought oem sell u  open market test benchmark           hw configuration  mhz motherboard forex chip set ami bios kb zero waitstate direct mapped writethrough cpu cache one write buffer byte per cache line clock cycle penalty cache line miss mb main memory average access time  wait state cyrix emc compatibility mode math coprocessor cyrix  fastest coprocessors available use dxdlcdx conner f hard disk mb capacity ide interface coretest throughput kb seek time m diamond speedstar hicolor isa bus svga card using tseng et chip mb dram frame buffer accelerator switch card set fastest reliable operation vidspeed throughput bytesms mhz bytesms  mhz sw configuration msdos  m window  hyperdisk  disk cache program writeback mode using mb extended memory max  used memory manager dpmi provider benchmark latest tseng colorview driver window  xx using font whetstone dhrystone wintach doduc linpack lll savage benchmark higher number indicate faster performance make rtl make tranck stringtest benchmark lower number indicate faster performance intel c intel cyrix cyrix  mhz dx dx rapidcad dlc dlc cache cache integer whetstone kwhetss dhrystone c dhrys dhrystone pa dhrys stringtest m make rtl      make tranck      wintach overall rpm      float doduc rapidity index      linpack mflop      lll mflop      whetstone kwhetss savage function evals intel c intel cyrix cyrix  mhz dx dx rapidcad dlc dlc cache cache integer whetstone kwhetss dhrystone c dhrys dhrystone pa dhrys stringtest m make rtl      make tranck      wintach overall rpm      float doduc rapidity index      linpack mflop      lll mflop      whetstone kwhetss savage function evals complete picture ran cpufpu standard benchmark intel dx running  mhz since machine configured different hard disk system compiler tool installed machine present make benchmark could unfortunately included test dx kbytes cpu cache writethrough mb ram amibios diamond speedstar hicolor vidspeed throughput bytesms mhz bytesms  mhz msdos  mswindows  integer  mhz mhz whetstone kwhetss dhrystone c dhrys dhrystone pa dhrys stringtest m wintach   float doduc rapidity index   linpack mflop   lll mflop   whetstone kwhetss savage function evals conclusion      cyrix dlc dx replacement highest integer performance internal cache enabled integer performance dlc higher compared intel dx clock frequency average speed gain integer application enabling internal cache provides  performance cache disabled integer floatingpoint application floatingpoint application accelerated  cyrix dlc cache enabled used instead intel dx compared intel dx cyrix dlc provides integer performance floating point performance clock frequency intel rapidcad dx replacement provides highest floating point performance speed floatingpoint intensive program  compared fastest intel dxmath coprocessor combination provides nearly floatingpoint performance intel dx clock frequency integer performance increase average using rapidcad instead standard intel dx maximum performance gain chip technology dx slightly higher integer performance intel dx speedup ranging  average speedup order description benchmark             dhrystone synthetic benchmark developed r weicker siemens frequency operation data type used dhrystone modeled statistic collected typical program written hll high level language c pascal use floatingpoint arithmetic thus certain distribution global local variable used procedure certain percentage use record structs string total number variable accessed certain percentage procedure call ifstatements total line code executed percentage match statistic used development dhrystone quite closely preserve typical distribution measurement rule dhrystone forbid function inlining frequently used optimization technique optionally performed optimizing compiler current version dhrystone  version used test version  differs previous version contains additional code prevents optimizing compiler throwing code dead code elimination since dhrystone input file many expression computed compile time thus artificially inflating performance number dhrystone benchmark exists equivalent ada pascal c version available netlib ornlgov dhrystone measure time execute main loop set time relation fixed reference time result performance index given  dhrystones per second  used two dhrystone executables one compiled using nonoptimizing turbo pascal  compiler one compiled msc  compiler using large memory model maximum optimization without use function inlining turbo pascal executable us memory operand msc executable us registertoregister operation speedup executables different cpu noticeably different wintach public domain benchmark program texas instrument measure speed graphic output four typical mswindows application word processor spreadsheet cad program paint program ti collected profile class application typical user load four part wintach benchmark modeled profile percentage certain gdi graphic device interface call found profile also present benchmark wintach determines performance program part relative performance standard vga card mhz dx machine also combine four value overall relative performance index reported table using single number represent graphic performance justified case since four partial result deviate much average svga tested diamond speedstar hicolor used frame buffer card test graphic card type graphic performance depends solely performance cpu handle access display memory accelerated card lowlevel operation delegated accelerator chip influence cpu speed graphic performance seen clearly test used latest tseng window  driver colorview resolution xx large font wintach code c make rtl single program rather build complete project runtime library turbo pascal  project consists source file total size  kbyte source file assembly language asm file also pascal pa file building complete project using make binary file obj tpu produced combined size  kb program used build make  tpc  tasm  borland inc file read written hard disk using mb write back disk cache provided hyperdisk  program eliminates io overhead memory manager installed test time reported time starting make utility reappearance do prompt make rtl thought typical application operate lot small file use integer instruction make tranck project build project consisting two assembly language module two c module one fortran module combined size source file approximately kbytes module compiled assembled combined single program linking c fortran library program used make  borland masm  msc  msfortran  link  microsoft inc c compiler linker run protected mode require dpmi host present max  qualitas installed purpose minimize io overhead hyperdisk  disk caching program installed mbyte extended memory allocated cache module compiled compiler switch set maximum optimization time project build spent optimizing stage compiler stringtest simple benchmark test string handling function built turbo pascal language nearly execution time spent repeated execution stos cmps scas movs instruction data code fit five kbytes memory cached system almost memory access cache hit program written compiled turbo pascal  linked runtime library provides much faster string function runtime library delivered borland compiler switch set fastest execution time reported time complete whole benchmark millisecond accuracy  millisecond lll short lawrence livermore loop set kernel taken real floatingpoint extensive program loop vectorizable since nt deal vector processor nt matter test lll adapted fortran original turbo pascal variable overlaying similar fortran equivalence statement memory allocation data reduced kb data fit single kb segment older version lll used contains loop also exists newer elaborate version consisting kernel kernel lll exercise multiplication addition mflop rate reported average mflop rate kernel reported lll program floatingpoint variable program type double lll whetstone result see reported returned comptest test program included measure coprocessorfpu performance comptest compiled turbo pascal  optimization using runtime library give higher performance one included tp  library available tplnzip garbouwasafi ftpsites mirror site linpack well known floatingpoint benchmark also heavily exercise memory system linpack operates large matrix take kb version used test largest program size pure do system accommodate linpack originally designed estimate performance blas library fortran subroutine handle various vector matrix operation note vendor free supply optimized eg assembly language version blas linpack us two routine blas thought typical matrix operation used blas routine use additionsubtraction multiplication fortran source code linpack obtained automated mail server netlib ornlgov linpack compiled using m fortran  huge memory model handle data structure larger kb compiler switch set maximum optimization floatingpoint variable program double type linpack performs test repeatedly number reported maximum mflop rate returned linpack linpack mflop rating great number machine contained postscript document also available netlib ornlgov whetstone  synthetic benchmark based statistic collected use certain control data structure program written high level language based statistic whetstone try mirror typical hll program whetstone performance expressed many hypothetical whetstone instruction executed per second originally implemented algol unlike lll linpack whetstone us addition multiplication exercise basic arithmetic operation well transcendental function whetstone performance depends speed coprocessor well speed cpu lll linpack place heavier burden coprocessorfpu exist old new version whetstone note result two version differ much test configuration test new version pascal used compiled turbo pascal  library see optimization integer test software floatingpoint arithmetic using real type utilized using software arithmetic exercise cpu particular execution mov shl shr rcr add sub mul div instruction floatingpoint test hardware floatingpoint arithmetic coprocessor used computation performed using double type savage test performance transcendental function evaluation basically small loop sin co arctan ln exp sqrt function combined single expression sin co arctan sqrt evaluated directly single coprocessor instruction ln exp need additional preprocessing argument reduction result conversion according savage benchmark devised bill savage distributed wohl engine company ltd shore front parkway rockaway beach ny usa usually savage programmed make  pass though loop  loop executed total  transcendental function evaluation result expressed function evaluation per second savage source code taken compiled turbo pascal  runtime library see doduc modified application program nhuan doduc also part spec benchmark suite nuclear safety analysis code simulates time evolution thermohydraulic modelization nuclear reactor component benchmark created computational kernel original application benchmark consists fortran statement line executable size kbytes almost processing done using double precision floatingpoint value much array processing instead program iterative structure abundance short branch small loop version used test compiled highly optimizing ndp fortran v compiler microway generates bit mode executable run protected mode using protected mode loader provided microway execution time doduc program set relation fixed reference time result scaled give  rapidity index  reference      curnow hj wichmann ba synthetic benchmark computer journal vol pp  wichmann ba validation code whetstone benchmark npl report ditc  national physic laboratory uk march curnow hj wither whetstone synthetic benchmark year aad van der steen ed evaluating supercomputer london chapman hall dongarra jj linpack benchmark explanation aad van der steen ed evaluating supercomputer london chapman hall dongarra jj performance various computer using standard linear equation software report c computer science department university tennessee march huth n dichtung und wahrheit oder datenblatt und test design elektronik heft seiten  esser r kremer f schmidt wg testrechnungen auf der ibm e mit vektoreinrichtung arbeitsbericht rrzk regionales rechenzentrum der universit  zu k  oln februar mcmahon hh livermore fortran kernel test numerical performance range technical report ucrl lawrence livermore national laboratory usa december weicker rp dhrystone synthetic system programming benchmark communication acm vol october pp  weicker rp dhrystone benchmark rationale version measurement rule sigplan notice vol august pp  fasmath benchmark report cyrix corporation june order b doduc nhuan fortran execution time benchmark unpublished manuscript version available ndoduc framentecfr  
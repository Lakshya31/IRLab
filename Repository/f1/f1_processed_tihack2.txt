path linear mv newssprintlinknet howlandrestonansnet spoolmuedu uwmedu caen linuxreshalluichedu notformail john linuxreshallumichedu john gotts newsgroups alt subject ti calculator hack long messageid ao eav srvrenginumichedu date nov  gmt organization linux bait residence hall university michigan line nntppostinghost linuxreshallumichedu xnewsreader tin unix  beta pl thought guy would interested article reposted althackers author david boozer posted sat nov  gmt several people asking document referring previous message decided post whole thing althackers david boozer adby virginiaedu obhack following document  hacking ti calculator david boozer adby virginiaedu september  document explains various spiffy thing ti dumping ti rom programming ti machine language included several program wrote useful ti hacking b file containing first knowledge machine language program ever written ti well except rom course information provided obtained diddling around b produced using link package basic method make backup calculator study backup patch backup send back calculator much information learned ti made document tried include essential working comprehensive version ready week class started figured write something still lot free time hand well fun tinkering around send questionscomments adby virginiaedu number hexadecimal unless otherwise stated  procedure outlined could cause ti crash happens remove one battery hold key second replace battery also remember turn contrast nd uparrow time turn calculator squeamish crashing ti nt try procedure still might like read                                       structure b file                                       b file following format file offset content header size word number data byte xxxx data byte obtained ti xxxx xxxx checksum word header contains string  ti  file comment see using link size word offset number byte contain data obtained ti equal size b file byte byte header byte size word byte checksum                data byte thus data byte size b file byte checksum word calculated adding together data byte byte header size word checksum word mod wrote little assembly program called fixcom automagically adjust checksum word b file correct value begin fixcom mox  b r e xh  tt  dn ni v  z  ov  bptsp bf qv  xh bld qr  bx sr r k bpz hq lta vt  h ltam nn g oq mno g                                                       r f r enf l gmfr f f c g n hdvaevmst ex  de  x  b end use program simply type fix filename fix also work file etc first byte typical b file shown aa c b ti  backu c  f p file dated  f c  e    u f ae  b      f b b  c           f f  b  cmw  c fc      see data byte size b file note data byte offset checksum word memory image ti ram well entire ram byte offset xxxx b file corresponds byte memory address c xxxx ti example byte offset b b file corresponds byte address cb ti hex dump byte offset b file shown b  b c   dblet fc  ch     fc  c p   hctelb c e f f c c  oof   c e  b fb  sna  tat b f  b f bc  tatsx   backup made calculator two variable defined  foo  bletch notice variable appear ram image variable entry symbol table entry  foo  variable mean  number character variable name   address variable memory c f f c  type variable real    name variable backwards foo note address variable memory stored high order byte first thus symbol table hex dump give u following information variable name address variable type variable xstat bf list ystat bf list an bfb real foo c real bletch ce real variable  xstat   ystat   an  created automatically calculator byte different type variable given type byte variable type real cmplx vectr vectr list list matrx matrx con con equ b blank c strng gdb e gdb f gdb gdb pic prgm remember byte offset xxxx b file corresponds byte address c xxxx ti ram thus since variable  foo  located address c ram must located offset c c b file look ten byte hex dump see following fc mean  range one byte        number bcd byte fc   exponent hex byte thus variable  foo  range fc exponent number  value variable given value number e exponent range fc  foo  value  e fc fc  e note number le one may represented using range le fc seen data b file corresponds data ti key point edit b file data b file put ram b file loaded hence editing b file diddle around byte ti ram particular edit memory address variable make point something data given created brings u                                        dumping ti rom                                       method developed dump ti rom following clear calculator use stpic make pic file let call  pic  back calculator get file  backupb  edit  backupb  change memory address  pic  point rom location fix checksum  backupb  transfer hacked version  backupb  ti use rcpic load  pic  graphic screen stuff see screen rom data use stpic store rom data new pic file let call  dump  transfer  dump  ti computer strip header junk  dump  f byte core dump ti rom wrote assembly program called dumpcom automate begin dumpcom mm fz    ox  b tr z p  n  tddp  gp  pp ct x c b ktd z pb  mndt   az bp    ba pnyosd xd psr kl ta av ndn h r k kw k mbm  ltaec e p  g gz ec  ztlchx px mzoan hyo    n  r f r h b mk fel   n  e eyg r  muo gd f r v ten h dup z h  hd gf ae uc ub r dm   b  r r r u np yd e  q   e   rysfr  b r wr u r hdbi ubh uo gd mm   k          l p l     p  p           v w bxa       p      p      mhp  q fdxf  p             l  ei e            p                p     w     q      q           q lr  mp           p                p                 p           l         qb qa q   pbbx      p               p          l         qb qa q   pbb mx      p               p           q      p             l  ei e            p                p       sz  swpqgb                                                                              f  q  dv    f mpxh p                                                                                                       vh wt z  md cz   z        xqte q c e q c p gnp  pfnp  end use program type dump address hex create file called  backupb  necessary modification already made ie effect performs step send ti outlined step list end file called dumpi byte dumpi header ignored byte onward contain rom data dump made memory address e f e  v e e eb f e ccd ac cd ac     f b cd ac  cd ac  c  cd ac cd ac cd ac c eg    cd ac cd ac cd ac    b cd ac fd cd ac h   r cd ac cd ac cd ac f tt  yw  b cd ac cd ac cd ac k    u  f cd ac v  w ran z disassembler get following code e ex sp hl da f push af db push de dc e ld e hl dd inc hl de ld hl df inc hl e e ld hl e porth e eb ex de hl e pop de e f pop af e e ex sp hl e c ret e cd ac call lac eb jr c la ed cd ld b ef ac xor h f inc sp f b ld e f ld l f cd ld b f ac xor h f inc sp f add c f ld b e etc                                       technical tidbit ti                                       next section discus write machine language program need fact ti first need information video display mode address dimension size byte text dd x  byte graphic x   byte next need understand custom menu offset b b file see sequence c byte shown b c  c  pair byte word corresponds menu item custom menu example item name word item  ab  c item blank item   item blank item blank word associated menu item memory address point data structure c f actually several possible data structure useful data structure mean following       idea time explain      name menu item edit c f  zero termination byte   memory address f select menu item code  memory address  executed case code ad f executed using dump program able dump memory location find f c zspeak c call information move                                        writing machine language program                                       basic idea edit backupb file item custom menu point first byte graphic display editing pic file drawing bit manually diddle around byte video memory put following byte video memory c note memory address also video memory put machine language program address select item custom menu program executed demonstration created following file loaded video memory aa c ti  pictu c  file dated f f c   u f ae fe  f    dum f f c p   pe                                      b       c             e       f c f  f     zero first byte header info ignore stuff offset menu data structure c   point three byte f represent jp jump instruction z c f jp f address f code  edit matrix  menu item zero c f well nop z nothing sequence event follows user selects item custom menu ti look memory location first byte video memory remember changed custom menu item would point ti find byte c cleverly placed graphic display hence memory address thus calculator executes instruction encounter string nops zero leading c f jp f ti take jump lead matrix editor backup ti set demonstrate program begin backupb mbi ubh  k fel de  ppy  p dzd ki l x l   p  r          v wa bxa       p      p      hp  q fdxf  p             l  ei e            p                p     w     q      q           q lr  p           p                p                 p           l         qb qa q   pbbx      p              p          l        qb qa q   pbbx      p              p           q      p             l  ei e            p                p        sz swp                                                          pu                                                                                                               ptqgb    c    p mc                                                               f q dcr    fpxh p                                                                e                                     wuwz  e ywc z   z              u        p ppu                                                                                                               ptp cd p b c vy xo oy x ow end transfer ti go custom menu select menu item marked  e  might also want take look graphic display transfer computer play interesting memory location jump eqn solver f draw program f program editor f well three byte program c f admittedly impressive demonstrate programming ti machine language possible advanced program work  continued  john gotts jgotts enginumichedu www http wwwenginumichedujgotts student employee computer aided engineering network caen sun support ge h g  p au  w v c ul p  l  e  n k w  v  po  j r g tv b b e u  h f r n linux rule xx another file downloaded nirvananet tm totse  walnut creek ca taipan enigma burn flag  san jose ca zardoz realitycheck  san francisco ca poindexter fortran phallicide  monterey ca reclinerhead governed anarchy  fremont ca eightball new dork sublime  tehachapi ca biffnix ether room  martinez ca tiny little super guy lie unlimited  salt lake city ut mick freen shrine  monroe wa rif raf atomic book  baltimore md baywolf sea noise  norwich ct mr noise floating pancreas  ft lauderdale fl majestic cockster dojo  pearland tx yojimbo frayed end sanity  cloverdale flatline  raw data raw nerve  xx 
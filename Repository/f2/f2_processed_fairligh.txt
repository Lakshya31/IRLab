fine text file came                                       sp            shq far multi node system node  node  node  want read download free loader      smashing super nintendo system                                                     sysop syklone cosysop hitman      corsair present example drive hardware basically used intro co everyone know look thus seemed good bit code comment outside hardware stuff bit sparse teaching fairlight write code use hardware question usual leave graveyard treasure island oasis start intro fairlight                         e sei disable irq ints e f lda f e sta screenfader turn screen full brightness e c stz e c c stz startdmahi disable dma channel ec c b stz startdmalo ef clc e fb xce place native bit mode e c rep set x bit e lda e b tcd set direct register bank zero e stz clear memory loc e lda ec b sta b set bw ee e sep set accum bit e lda e sta videoportcontrol initialise video port controller e ldx e e stx videoportaddress point vram pointer eb b lda b ed sta copy bx byte char ef ldx data video ram via port outerloop thus giving e ldy innerloop e bd e lda charset x character set intro e sta videoportlo flt logo eb c stz videoporthi ee e inx ef dey e f bne innerloop e c dec e ec bne outerloop e c stz clear video reg unknown e lda set playfield x char eb sta playfieldaddr ee lda set playfield x char e sta playfieldaddr e lda set playfield  tile addr e b sta tilevramaddr e ldx eb e stz planescrollx x clear scroll pointer ee e stz planescrollx x e ca dex e f bpl eb e ldx e e stz x clear video register  ea ca dex eb fa bpl e ed lda ef c sta playfieldenable enable playfields e ldx e e stz x clear video register e ca dex e fa bpl e eb c stz interlaceflags disable interlace mode ee lda e c stz videoportaddress set video port address e sta videoportaddress e lda e sta videoportcontroller initialise video controller eb ldx ee c stz videoportdata clear byte vram upwards e ca dex e fa bne ee e ab e ldx eab display text eab e e e jsr dotext ea lda ec c stz videoportaddress set video port address ef sta videoportaddress ea c stz videoportcontroller clear video port controller ea ldx ea bd e lda e x copy byte vram location eab sta videoportdata onwards eae e inx eaf e cpx eb f bne ea eb lda eb sta videoportdata fill one screen worth vram eb e inx space eba e cpx ebd f bne eb ebf lda ec c sta c c ec sta ec lda ec ldx set c c ecc c sta c x ecf e inx ie set color pointer table ed e cpx ed f bne ecc ed f lda f ed f sed set decimal flag ed c sta c x eda lda set low memory edc c sta c x edf e inx ee e cpx color palette setup ee f bne edc ee e c stz c x ee b lda b eea ldx set even low memory eed sta x seems set b clear ef e inx ef e stz x ef inc pallete data set ef e inx ef e cpx ef f bne eed efb sta x efe e inx eff e stz x e dec irelevant low mem stuff e e inx e e cpx palette data setup e f bne efb e f lda f eb sta x ee ff lda ff irelevant low mem stuff e sta x e e inx palette data setup e e cpx e f bne e e e stz x ec c c stz dmaenable disable dma channel ef c stz dmacontrol e lda set control regs channel  e sta dmacontrol e lda select pallete pointer color e sta dmadestination dma dump destination ec inc ed sta dmadestination e c ldx c e e stx dmasourceaddr palette number c e ldx e e stx dmasourceaddr palette data ec c stz dmasourcebank ef c stz dmasourcebank e lda turn dma channel  e c sta dmaenable e f lda f turn screen e sta screenfader ec lda ee sta errmm e c e jsr padpollhi wait poll hi e c stz palettecolorpointer e c stz palettecolordata set background black ea c stz palettecolordata ed c e jmp e                         e c e jsr padpollhi wait poll hi e e jsr procb e ad lda padpoll wait button e lsr pressed ea b fa bcs e ec cd e jsr proca ef f lda f e e f beq ebb e c jmp game run game                         e lda eb ldx ee c e jsr padpollhi e sta pixelation e c e jsr padpolllo e ca dex e f bpl ee ea clc eb adc ed c cmp ef ea bne eb e e jsr e e c e jsr padpolllo e c e jsr padpollhi wait b padpoll go hi ea e jsr procb ed f lda f ef ldx reverse pixelate text vision ea c e jsr padpollhi ea sta pixelation ea c e jsr padpolllo eab ca dex eac f bpl ea eae sec eaf e sbc eb c f cmp f eb ea bne ef eb c e jsr padpollhi eb c stz pixelation set pixel normal ebb c e jsr padpolllo ebe c e jmp e jump main loop                         ec c padpollhi bit padpoll wait bit padready go hi ec fb bpl padpollhi ec rts                         ec c padpolllo bit padpoll eca fb bmi padpolllo wait bit padready go lo ecc rts                         ecd c proca rep bit accum ecf ldx ed ff f lda fff ed e b cpx b ed f beq ee set table fff memory ed b sta db x edc e inx edd e inx ede f bra ed ee ldy follow table zero ee b c e lda ec ee b sta db x ee c iny eea c iny eeb e inx eec e inx eed c cpy ef f bne ee ef ff f lda fff x add fffs ef e cpx ef f beq e efa b sta db x efd e inx efe e inx eff f bra ef                         e ldx preserve old pad data e ad lda paddatalo get new data e sta store old e txa wop accum e ff ff eor ffff old data ec use mask new data ee sta store e e sep back bit accum e rts back                         e c procb stz videoportcontrol reset video port e lda e c stz videoportaddr set video ram pointer eb sta videoportaddrhi ee c stz videoportdatahi e c stz dmacontrol reset dma controller e lda e sta dmadestination point dma vram e ldx ec e stx dmasourceaddr copy address vram ef c stz dmasourcebank e ldx copy byte vram e e stx dmasize e lda enable dma ea b sta dmaenable ed rts                         ee dotext stx store text location e ldx set pointer text e stx store text location e stz clear e ldx ea b lda get next char ec bmi ea bit set go ee c cmp space e bcc e branch le space e sta store char e e inx e e inc next char e bne eb e e inc eb e inc next dest spot ed eb bne ea ef e inc e e bra ea                         e e inc increment counter e bne e end boundary skip e e inc increment hi byte pointer e pha ea lda ec e cpx ef f b beq ec e sta basically routine strip e e inx char unnecessary prepare e e inc text output e f bne ec e e inc line increment bit pointer ea f bra ec bit pointer                         ec pla ed ldx e e inc e c cmp e e bne e e b lda e e inc ea bne ee ec e inc ee sta e e stz e e lda e e cpx e f b beq ea e sta ea e inx eb e inc ed bne ea increment pointer bit ef e inc ea f bra e                         ea lda ea c cmp ea f beq ec ea lda eab e cpx eae f b beq ebb eb sta eb e inx eb e inc eb f bne eab eb e inc eb f bra eab                         ebb ldx ebe e inc ec e bra ea ec rts                         end  
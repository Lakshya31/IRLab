introduction internet protocol c r c computer science facility group c l rutgers state university new jersey center computer information service laboratory computer science research october introduction internet networking protocol tcpip includes summary facility available brief description major protocol family copyright c charles l hedrick anyone may reproduce document whole part provided copy republication entire document must show rutgers university source must include notice use material must reference manual rutgers university fact material copyright charles hedrick used permission unix trademark technology inc table content tcpip general description tcpip protocol  tcp level  ip level  ethernet level wellknown socket application layer  example application smtp protocol tcp udp icmp keeping track name information domain system routing detail internet address subnets broadcasting datagram fragmentation reassembly ethernet encapsulation arp getting information document brief introduction tcpip followed advice read information intended complete description give reasonable idea capability protocol need know detail technology want read standard throughout text find reference standard form  rfc   ien  number document number final section document tell get copy standard tcpip tcpip set protocol developed allow cooperating computer share resource across network developed community researcher centered around arpanet certainly arpanet bestknown tcpip network however june least different vendor product support tcpip thousand network kind use first basic definition accurate name set protocol describing  internet protocol suite  tcp ip two protocol suite described tcp ip best known protocol become common use term tcpip iptcp refer whole family probably worth fighting habit however lead oddity example find talking nfs based tcpip even though nt use tcp use ip us alternative protocol udp instead tcp alphabet soup unscrambled following page internet collection network including arpanet nsfnet regional network nysernet local network number university research institution number military network term  internet  applies entire set network subset managed department defense referred  ddn  defense data network includes researchoriented network arpanet well strictly military one much funding internet protocol development done via ddn organization term internet ddn sometimes seem equivalent network connected user send message except security policy restriction access officially speaking internet protocol document simply standard adopted internet community use recently department defense issued milspec definition tcpip intended formal definition appropriate use purchasing specification however tcpip community continues use internet standard milspec version intended consistent whatever called tcpip family protocol provide  lowlevel  function needed many application include ip tcp udp described bit detail later others protocol specific task eg transferring file computer sending mail finding logged another computer initially tcpip used mostly minicomputer mainframe machine disk generally selfcontained thus important  traditional  tcpip service file transfer file transfer protocol ftp allows user computer get file another computer send file another computer security handled requiring user specify user name password computer provision made handling file transfer machine different character set end line convention etc quite thing recent  network file system   netbios  protocol described rather ftp utility run time want access file another system use copy file system work local copy see rfc specification ftp remote login network terminal protocol telnet allows user log computer network start remote session specifying computer connect time finish session anything type sent computer note really still talking computer telnet program effectively make computer invisible running every character type sent directly system generally connection remote computer behaves much like dialup connection remote system ask log give password whatever manner would normally ask user dialed log computer telnet program exit find talking computer microcomputer implementation telnet generally include terminal emulator common type terminal see rfc specification telnet way telnet protocol confused telenet vendor commercial network service computer mail allows send message user computer originally people tended use one two specific computer would maintain  mail file  machine computer mail system simply way add message another user mail file problem environment microcomputer used serious micro well suited receive computer mail send mail mail software expects able open connection addressee computer order send mail microcomputer may turned may running application mail system reason mail normally handled larger system practical mail server running time microcomputer mail software becomes user interface retrieves mail mail server see rfc specification computer mail see rfc protocol designed microcomputer use reading mail mail server service present implementation tcpip except microoriented implementation may support computer mail traditional application still play important role tcpipbased network however recently way network used changing older model number large selfsufficient computer beginning change many installation several kind computer including microcomputer workstation minicomputer mainframe computer likely configured perform specialized task although people still likely work one specific computer computer call system net specialized service led  serverclient  model network service server system provides specific service rest network client another system us service note server client need different computer could different program running computer kind server typically present modern computer setup note computer service provided within framework tcpip network file system allows system access file another computer somewhat closely integrated fashion ftp network file system provides illusion disk device one system directly connected system need use special network utility access file another system computer simply think extra disk drive extra  virtual  drive refer system disk capability useful several different purpose let put large disk computer still give others access disk space aside obvious economic benefit allows people working several computer share common file make system maintenance backup easier nt worry updating backing copy lot different machine number vendor offer highperformance diskless computer computer disk drive entirely dependent upon disk attached common  file server  see rfc description pcoriented netbios tcp workstation minicomputer area sun network file system likely used protocol specification available sun microsystems remote printing allows access printer computer directly attached commonly used protocol remote lineprinter protocol berkeley unix unfortunately protocol document however c code easily obtained berkeley implementation common remote execution allows request particular program run different computer useful work small computer task require resource larger system number different kind remote execution operate command command basis request specific command set command run specific computer sophisticated version choose system happens free however also  remote procedure call  system allow program call subroutine run another computer many protocol sort berkeley unix contains two server execute command remotely rsh rexec man page describe protocol use usercontributed software berkeley  contains  distributed shell  distribute task among set system depending upon load remote procedure call mechanism topic research number year many organization implementation facility widespread commerciallysupported remote procedure call protocol seem xerox courier sun rpc protocol document available xerox sun public implementation courier tcp part usercontributed software berkeley  implementation rpc posted usenet sun also appears part usercontributed software berkeley  name server large installation number different collection name managed includes user password name network address computer account becomes tedious keep data date computer thus database kept small number system system access data network rfc describe name server protocol used keep track host name internet address internet required part tcpip implementation ien describes older name server protocol used terminal server product look host name sun yellow page system designed general mechanism handle user name file sharing group database commonly used unix system widely available commercially protocol definition available sun terminal server many installation longer connect terminal directly computer instead connect terminal server terminal server simply small computer know run telnet protocol remote login terminal connected one simply type name computer connected generally possible active connection one computer time terminal server provision switch connection rapidly notify output waiting another connection terminal server use telnet protocol already mentioned however real terminal server also support name service number protocol networkoriented window system recently high performance graphic program execute computer bitmapped graphic screen directly attached network window system allow program use display different computer fullscale network window system provide interface let distribute job system best suited handle still give single graphicallybased user interface widelyimplemented window system x protocol description available mit project athena reference implementation publically available mit number vendor also supporting news window system defined sun system designed use tcpip note protocol described designed berkeley sun organization thus officially part internet protocol suite however implemented using tcpip normal tcpip application protocol since protocol definition considered proprietary since commerciallysupport implementation widely available reasonable think protocol effectively part internet suite note list simply sample sort service available tcpip however contain majority  major  application commonlyused protocol tend specialized facility getting information various kind logged time day etc however need facility listed encourage look current edition internet protocol currently rfc list available protocol also look major tcpip implementation see various vendor added general description tcpip protocol tcpip layered set protocol order understand mean useful look example typical situation sending mail first protocol mail defines set command one machine sends another eg command specify sender message sent text message however protocol assumes way communicate reliably two computer mail like application protocol simply defines set command message sent designed used together tcp ip tcp responsible making sure command get end keep track sent retransmitts anything get message large one datagram eg text mail tcp split several datagrams make sure arrive correctly since function needed many application put together separate protocol rather part specification sending mail think tcp forming library routine application use need reliable network communication another computer similarly tcp call service ip although service tcp supply needed many application still kind application nt need however service every application need service put together ip tcp think ip library routine tcp call also available application dont use tcp strategy building several level protocol called  layering  think application program mail tcp ip separate  layer  call service layer generally tcpip application use layer application protocol mail protocol tcp provides service need many application ip provides basic service getting datagrams destination protocol needed manage specific physical medium ethernet point point line tcpip based  catenet model  described detail ien model assumes large number independent network connected together gateway user able access computer resource network datagrams often pas dozen different network getting final destination routing needed accomplish completely invisible user far user concerned need know order access another system  internet address  address look like  actually bit number however normally written decimal number representing bit address term  octet  used internet documentation bit chunk term  byte  used tcpip supported computer byte size bit generally structure address give information get system example  network number assigned central authority rutgers university rutgers us next octet indicate campus ethernet involved  happens ethernet used computer science department last octet allows system ethernet allowed reason discussed later note   would different system structure internet address described bit detail later course normally refer system name rather internet address specify name network software look database come corresponding internet address network software deal strictly term address rfc describes name server technology used handle lookup tcpip built  connectionless  technology information transfered sequence  datagrams  datagram collection data sent single message datagrams sent network individually provision open connection ie start conversation continue time however level information connection broken datagrams datagrams treated network completely separate example suppose want transfer octet file network ca nt handle octet datagram protocol break something like octet datagrams datagrams sent end point put back together octet file however datagrams transit network nt know connection perfectly possible datagram actually arrive datagram also possible somewhere network error occur datagram wo nt get case datagram sent note way term  datagram   packet  often seem nearly interchangable technically datagram right word use describing tcpip datagram unit data protocol deal packet physical thing appearing ethernet wire case packet simply contains datagram little difference however differ tcpip used top x x interface break datagrams byte packet invisible ip packet put back together single datagram end processed tcpip case one ip datagram would carried several packet however medium efficiency advantage sending one datagram per packet distinction tends vanish  tcp level two separate protocol involved handling tcpip datagrams tcp  transmission control protocol  responsible breaking message datagrams reassembling end resending anything get lost putting thing back right order ip  internet protocol  responsible routing individual datagrams may seem like tcp work small network true however internet simply getting datagram destination complex job connection may require datagram go several network rutgers serial line john von neuman supercomputer center couple ethernet series kbaud phone line another nsfnet site ethernet another campus keeping track route destination handling incompatibility among different transport medium turn complex job note interface tcp ip fairly simple tcp simply hand ip datagram destination ip nt know datagram relates datagram may occurred something missing talked internet address keep track multiple connection given system clearly nt enough get datagram right destination tcp know connection datagram part task referred  demultiplexing  fact several level demultiplexing going tcpip information needed demultiplexing contained series  header  header simply extra octet tacked onto beginning datagram protocol order keep track lot like putting letter envelope putting address outside envelope except modern network happens several time like put letter little envelope secretary put somewhat bigger envelope campus mail center put envelope still bigger one etc overview header get stuck message pass typical tcpip network start single data stream say file trying send computer                   tcp break manageable chunk order tcp know large datagram network handle actually tcp end say big datagram handle pick smallest size         tcp put header front datagram header actually contains least octet important one source destination  port number   sequence number  port number used keep track different conversation suppose different people transferring file tcp might allocate port number transfer sending datagram becomes  source  port number since source datagram course tcp end assigned port number conversation tcp know port number used end well find connection start explain put  destination  port field course end sends datagram back source destination port number reversed since source destination datagram sequence number used end make sure get datagrams right order nt missed see tcp specification detail tcp nt number datagrams octet octet data datagram first datagram might numbered second next next etc finally mention checksum number computed adding octet datagram le see tcp spec result put header tcp end computes checksum disagree something bad happened datagram transmission thrown away datagram look like  source port destination port  sequence number  acknowledgment number  data uaprsf offset reserved rcssyi window gkhtnn  checksum urgent pointer  data  next octet   abbreviate tcp header   whole file look like        note item header described generally involved managing connection order make sure datagram arrived destination recipient send back  acknowledgement  datagram whose  acknowledgement number  field filled example sending packet acknowledgement indicates received data octet number sender nt get acknowledgement within reasonable amount time sends data window used control much data transit one time practical wait datagram acknowledged sending next one would slow thing much hand ca nt keep sending fast computer might overrun capacity slow one absorb data thus end indicates much new data currently prepared absorb putting number octet  window  field computer receives data amount space left window decrease go zero sender stop receiver process data increase window indicating ready accept data often datagram used acknowledge receipt set data give permission additional new data updated window  urgent  field allows one end tell skip ahead processing particular octet often useful handling asynchronous event example type control character command interrupt output field beyond scope document  ip level tcp sends datagrams ip course tell ip internet address computer end note ip concerned nt care datagram even tcp header ip job simply find route datagram get end order allow gateway intermediate system forward datagram add header main thing header source destination internet address bit address like  protocol number another checksum source internet address simply address machine necessary end know datagram came destination internet address address machine necessary gateway middle know want datagram go protocol number tell ip end send datagram tcp although ip traffic us tcp protocol use ip tell ip protocol send datagram finally checksum allows ip end verify header nt damaged transit note tcp ip separate checksum ip need able verify header nt get damaged transit could send message wrong place reason worth discussing efficient safer tcp compute separate checksum tcp header data ip tacked header message look like  version ihl type service total length  identification flag fragment offset  time live protocol header checksum  source address  destination address  tcp header data   represent ip header   file look like        header contains additional field discussed beyond scope document flag fragment offset used keep track piece datagram split happen datagrams forwarded network big discussed bit time live number decremented whenever datagram pass system go zero datagram discarded done case loop develops system somehow course impossible welldesigned network built cope  impossible  condition point possible header needed computer happens direct phone line connecting destination computer gateway may simply send datagrams line though likely synchronous protocol hdlc would used would add least octet beginning end  ethernet level however network day use ethernet describe ethernet header unfortunately ethernet address people designed ethernet wanted make sure two machine would end ethernet address furthermore nt want user worry assigning address ethernet controller come address builtin factory order make sure would never reuse address ethernet designer allocated bit ethernet address people make ethernet equipment register central authority make sure number assign nt overlap manufacturer ethernet  broadcast medium  effect like old party line telephone send packet ethernet every machine network see packet something needed make sure right machine get might guess involves ethernet header every ethernet packet octet header includes source destination ethernet address type code machine supposed pay attention packet ethernet address destination field perfectly possible cheat one reason ethernet communication terribly secure note connection ethernet address internet address machine table ethernet address corresponds internet address describe table constructed bit later addition address header contains type code type code allow several different protocol family used network use tcpip decnet xerox n etc time put different value type field finally checksum ethernet controller computes checksum entire packet end receives packet recomputes checksum throw packet away answer disagrees original checksum put end packet header final result message look like  ethernet destination address first bit  ethernet dest last bit ethernet source first bit  ethernet source address last bit  type code  ip header tcp header data  end data  ethernet checksum  represent ethernet header  e  ethernet checksum  c  file look like eit  c eit  c eit  c eit  c eit  c packet received end course header removed ethernet interface remove ethernet header checksum look type code since type code one assigned ip ethernet device driver pass datagram ip ip remove ip header look ip protocol field since protocol type tcp pass datagram tcp tcp look sequence number us sequence number information combine datagrams original file end initial summary tcpip still crucial concept nt gotten go back add detail several area detailed description item discussed see rfc tcp rfc ip rfc sending ip ethernet wellknown socket application layer far described stream data broken datagrams sent another computer put back together however something needed order accomplish anything useful way open connection specified computer log tell file want control transmission file different application mind eg computer mail analogous protocol needed done  application protocol  application protocol run  top  tcpip want send message give message tcp tcp make sure get delivered end tcp ip take care networking detail application protocol treat network connection simple byte stream like terminal phone line going detail application program describe find application suppose want send file computer whose internet address  start process need internet address connect ftp server end general network program specialized specific set task system separate program handle file transfer remote terminal logins mail etc connect  specify want talk ftp server done  wellknown socket  server recall tcp us port number keep track individual conversation user program normally use le random port number however specific port number assigned program sit waiting request example want send file start program called  ftp  open connection using random number say port number end however specify port number end official port number ftp server note two different program involved run ftp side program designed accept command terminal pas end program talk machine ftp server designed accept command network connection rather interactive terminal need program use wellknown socket number nobody trying find however server wellknown number people open connection start sending command official port number program given  assigned number  note connection actually described set number internet address end tcp port number end every datagram four number internet address ip header tcp port number tcp header order keep thing straight two connection set number however enough one number different example perfectly possible two different user machine sending file machine could result connection following parameter internet address tcp port connection   connection   since machine involved internet address since file transfer one end connection involves wellknown port number ftp thing differs port number program user running enough difference generally least one end connection asks network software assign port number guaranteed unique normally user end since server use wellknown number know open connection let get back application program mentioned earlier tcp opened connection something might well simple wire hard part handled tcp ip however still need agreement send connection effect simply agreement set command application understand format sent generally sent combination command data use context differentiate example mail protocol work like mail program open connection mail server end program give machine name sender message recipient want sent sends command saying starting message point end stop treating see command start accepting message end start sending text message end message special mark sent dot first column end understand program sending command simplest way thing one application use file transfer somewhat complex file transfer protocol involves two different connection start like mail user program sends command like  log user   password   send file name  however command send data sent second connection opened data would certainly possible send data connection mail however file transfer often take long time designer file transfer protocol wanted allow user continue issuing command transfer going example user might make inquiry might abort transfer thus designer felt best use separate connection data leave original command connection command also possible open command connection two different computer tell send file one case data could nt go command connection remote terminal connection use another mechanism still remote logins one connection normally sends data necessary send command eg set terminal type change mode special character used indicate next character command user happens type special character data two sent going describe application protocol detail document better read rfc however couple common convention used application described first common network representation tcpip intended usable computer unfortunately computer agree data represented difference character code ascii v ebcdic end line convention carriage return line feed representation using count whether terminal expect character sent individually line time order allow computer different kind communicate application protocol defines standard representation note tcp ip care representation tcp simply sends octet however program end agree octet interpreted rfc application specifies standard representation application normally  net ascii  us ascii character end line denoted carriage return followed line feed remote login also definition  standard terminal  turn halfduplex terminal echoing happening local machine application also make provision two computer agree representation may find convenient example pdp bit word way two pdp agree send bit binary file similarly two system prefer fullduplex terminal conversation agree however application standard representation every machine must support  example application smtp order give bit better idea involved application protocol going show example smtp mail protocol smtp  simple mail transfer protocol assume computer called topazrutgersedu want send following message date sat jun  edt hedrick topazrutgersedu levy redrutgersedu subject meeting let get together monday pm first note format message described internet standard rfc standard specifies fact message must transmitted net ascii ie must ascii carriage returnlinefeed delimit line also describes general structure group header line blank line body message finally describes syntax header line detail generally consist keyword value note addressee indicated levy redrutgersedu initially address simply  person machine  however recent standard made thing flexible provision system handle system mail allow automatic forwarding behalf computer connected internet used direct mail number system one central mail server indeed requirement actual computer name redrutgersedu even exist name server could set mail department name department mail routed automatically appropriate computer also possible part something user name possible program set process mail also provision handle mailing list generic name  postmaster   operator  way message sent another system described rfc program going sending asks name server several query determine route message first query find machine handle mail name redrutgersedu case server reply redrutgersedu handle mail program asks address redrutgersedu  mail program open tcp connection port  port wellknown socket used receiving mail connection established mail program start sending command typical conversation line labelled whether topaz red note topaz initiated connection red redrutgersedu smtp service jun  edt topaz helo topazrutgersedu red redrutgersedu hello topazrutgersedu topaz mail hedrick topazrutgersedu red mail accepted topaz rcpt levy redrutgersedu red recipient accepted topaz data red start mail input end crlf crlf topaz date sat jun  edt topaz hedrick topazrutgersedu topaz levy redrutgersedu topaz subject meeting topaz topaz let get together monday pm topaz red ok topaz quit red redrutgersedu service closing transmission channel first note command use normal text typical internet standard many protocol use standard ascii command make easy watch going diagnose problem example mail program keep log conversation something go wrong log file simply mailed postmaster since normal text see going also allows human interact directly mail server testing newer protocol complex enough practical command would syntax would require significant parser thus tendency newer protocol use binary format generally structured like c pascal record structure second note response begin number also typical internet protocol allowable response defined protocol number allow user program respond unambiguously rest response text normally use human may watching looking log effect operation program however one point protocol us part text response command simply allow mail program one end tell mail server information need know order deliver message case mail server could get information looking message complex case would safe every session must begin helo give name system initiated connection sender recipient specified one rcpt command several recipient finally data sent note text message terminated line containing period line appears message period doubled message accepted sender send another message terminate session example generally pattern response number protocol defines specific set response sent answer given command however program nt want analyze detail look first digit general response begin indicate success begin indicate action needed shown indicate error  temporary  error disk filling message saved tried later permanent error nonexistent recipient message returned sender error message detail protocol mentioned section see rfc  mail rfc file transfer rfc  remote logins wellknown port number see current edition assigned number possibly rfc protocol tcp udp icmp far described connection use tcp recall tcp responsible breaking message datagrams reassembling properly however many application message always fit single datagram example name lookup user attempt make connection another system generally specify system name rather internet address system translate name address anything generally system database used translate name address user system want send query one system database query going short certainly fit one datagram answer thus seems silly use tcp course tcp break thing datagrams also make sure data arrives resending datagrams necessary question fit single datagram nt need complexity tcp nt get answer second ask application like alternative tcp common alternative udp  user datagram protocol  udp designed application nt need put sequence datagrams together fit system much like tcp udp header network software put udp header front data would put tcp header front data udp sends data ip add ip header putting udp protocol number protocol field instead tcp protocol number however udp nt much tcp nt split data multiple datagrams nt keep track sent resend necessary udp provides port number several program use udp udp port number used like tcp port number wellknown port number server use udp note udp header shorter tcp header still source destination port number checksum sequence number since needed udp used protocol handle name lookup see ien rfc rfc number similar protocol another alternative protocol icmp  internet control message protocol  icmp used error message message intended tcpip software rather particular user program example attempt connect host system may get back icmp message saying  host unreachable  icmp also used find information network see rfc detail icmp icmp similar udp handle message fit one datagram however even simpler udp nt even port number header since icmp message interpreted network software port number needed say icmp message supposed go keeping track name information domain system indicated earlier network software generally need bit internet address order open connection send datagram however user prefer deal computer name rather number thus database allows software look name find corresponding number internet small easy system would file listed system giving name number many computer approach practical thus file replaced set name server keep track host name corresponding internet address fact server somewhat general one kind information stored domain system note set interlocking server used rather single central one many different institution connected internet would impractical notify central authority whenever installed moved computer thus naming authority delegated individual institution name server form tree corresponding institutional structure name follow similar structure typical example name boraxlcsmitedu computer laboratory computer science lcs mit order find internet address might potentially consult different server first would ask central server called root edu server edu server keep track educational institution root server would give name internet address several server edu several server level allow possibly one might would ask edu server mit would give name internet address several server mit generally server would mit allow possibility general power failure mit would ask mit server lcs finally would ask one lcs server borax final result would internet address boraxlcsmitedu level referred  domain  entire name boraxlcsmitedu called  domain name  name higherlevel domain lcsmitedu mitedu edu fortunately nt really go time first root name server also happen name server toplevel domain edu thus single query root server get mit second software generally remembers answer got look name lcsmitedu software remembers find server lcsmitedu mitedu edu also remembers translation boraxlcsmitedu piece information  time live  associated typically day information expires looked allows institution change thing domain system limited finding internet address domain name node database node record define number different property example internet address computer type list service provided computer program ask specific piece information information given name possible node database marked  alias  nickname another node also possible use domain system store information user mailing list object internet standard defining operation database well protocol used make query every network utility able make query since official way evaluate host name generally utility talk server system server take care contacting server keep amount code application program domain system particularly important handling computer mail entry type define computer handle mail given name specify individual receive mail define mailing list see rfc specification domain system rfc defines use domain system sending mail routing description indicated ip implementation responsible getting datagrams destination indicated destination address little said would done task finding get datagram destination referred  routing  fact many detail depend upon particular implementation however general thing said first necessary understand model ip based ip assumes system attached local network assume system send datagrams system network case ethernet simply find ethernet address destination system put datagram ethernet problem come system asked send datagram system different network problem handled gateway gateway system connects network one network gateway often normal computer happen one network interface example unix machine two different ethernet interface thus connected network   machine act gateway two network software machine must set forward datagrams one network machine network  sends datagram gateway datagram addressed machine network  gateway forward datagram destination major communication center often gateway connect number different network many case specialpurpose gateway system provide better performance reliability generalpurpose system acting gateway number vendor sell system routing ip based entirely upon network number destination address computer table network number network number gateway listed gateway used get network note gateway nt connect directly network best place go get example rutgers interface nsfnet john von neuman supercomputer center jvnc connection jvnc via highspeed serial line connected gateway whose address  system net  list  gateway many offcampus network however system net  list  gateway offcampus network  gateway network   first step getting jvnc computer want send datagram first check see destination address system local network datagram sent directly otherwise system expects find entry network destination address datagram sent gateway listed entry table get quite big example internet includes several hundred individual network thus various strategy developed reduce size routing table one strategy depend upon  default route  often one gateway network gateway might connect local ethernet campuswide backbone network case nt need separate entry every network world simply define gateway  default  specific route found datagram datagram sent default gateway default gateway even used several gateway network provision gateway send message saying  best gateway  use one instead  message sent via icmp see rfc network software designed use message add entry routing table suppose network  two gateway    lead several internal rutgers network  lead indirectly nsfnet suppose set  default gateway routing table entry happens need send datagram mit mit network since entry network datagram sent default  happens gateway wrong one forward datagram  also send back error saying effect  get network use   software add entry routing table future datagrams mit go directly  error message sent using icmp protocol message type called  icmp redirect  ip expert recommend individual computer try keep track entire network instead start default gateway let gateway tell route described however nt say gateway find route gateway ca nt depend upon strategy fairly complete routing table sort routing protocol needed routing protocol simply technique gateway find keep date best way get every network rfc contains review gateway design routing however ripdoc probably better introduction subject contains tutorial material detailed description commonlyused routing protocol detail internet address subnets broadcasting indicated earlier internet address bit number normally written octet decimal eg  actually different type address problem address indicate network host within network felt eventually would lot network many would small probably bit would needed represent ip network also felt big network might need bit represent host would seem lead bit address designer really wanted use bit address adopted kludge assumption network small set three different range address address beginning use first octet network number three octet available host number thus bit available host number used large network big network arpanet one large commercial network normal organization get one  class  address normal large organization  class b  address used class b address use first two octet network number thus network number   avoid reason see also avoid address beginning used system special purpose last two octet available host addesses giving bit host address allows computer enough organization possible get one class b address run finally class c address use three octet range   allow host network lot network address reserved future use class e currently defined many large organization find convenient divide network number  subnets  example rutgers assigned class b address  find convenient use third octet address indicate ethernet host division significance outside rutgers computer another institution would treat datagrams addressed  way would look third octet address thus computer outside rutgers would different route   inside rutgers treat   separate network effect gateway inside rutgers separate entry rutgers subnet whereas gateway outside rutgers one entry  note could exactly thing using separate class c address ethernet far rutgers concerned would convenient u number class c address however using class c address would make thing inconvenient rest world every institution wanted talk u would separate entry one network every institution would far many network reasonable gateway keep track subdividing class b network hide internal structure everyone else save trouble subnet strategy requires special provision network software described rfc special meaning reserved machine nt know address certain circumstance possible machine know number network even host address example  would machine knew host number nt know network used  broadcast  broadcast message want every system network see broadcast used situation nt know talk example suppose need look host name get internet address sometimes nt know address nearest name server case might send request broadcast also case number system interested information le expensive send single broadcast send datagrams individually host interested information order send broadcast use address made using network address one part address host number go example network  would use  broadcast actually implemented depends upon medium possible send broadcast arpanet point point line however possible ethernet use ethernet address bit one every machine ethernet supposed look datagram although official broadcast address network   address may treated broadcast certain implementation convenience standard also allows  used refers host local network often simpler use  instead finding network number local network forming broadcast address  addition certain older implementation may use instead form broadcast address implementation would use  instead  broadcast address network  finally certain older implementation may understand subnets thus consider network number  case assume broadcast address   support broadcast implemented properly somewhat dangerous feature use used unknown broadcast address normal host never given address containing address never begin number address violating rule sometimes referred  martian  rumor central university mar using network datagram fragmentation reassembly tcpip designed use many different kind network unfortunately network designer agree big packet ethernet packet octet long arpanet packet maximum around octet fast network much larger packet size first might think ip simply settle smallest possible size unfortunately would cause serious performance problem transferring large file big packet far efficient small one want able use largest packet size possible also want able handle network small limit two provision first tcp ability  negotiate  datagram size tcp connection first open end send maximum datagram size handle smaller number used rest connection allows two implementation handle big datagrams use also let talk implementation ca nt handle however nt completely solve problem serious problem two end nt necessarily know step example sending data rutgers berkeley likely computer ethernet thus prepared handle octet datagrams however connection point end going arpanet cant handle packet size reason provision split datagrams piece referred  fragmentation  ip header contains field indicating datagram split enough information let piece put back together gateway connects ethernet arpanet must prepared take octet ethernet packet split piece fit arpanet furthermore every host implementation tcpip must prepared accept piece put back together referred  reassembly  tcpip implementation differ approach take deciding datagram size fairly common implementation use byte datagrams whenever ca nt verify entire path able handle larger packet rather conservative strategy used number implementation bug code reassemble fragment implementors often try avoid ever fragmentation occur different implementors take different approach deciding safe use large datagrams use local network others use network campus byte  safe  size every implementation must support ethernet encapsulation arp brief discussion earlier ip datagrams look like ethernet discussion showed ethernet header checksum however left one hole nt say figure ethernet address use want talk given internet address fact separate protocol called arp  address resolution protocol  note way arp ip protocol arp datagrams ip header suppose system  want connect system  system first verify  network talk directly via ethernet look  arp table see already know ethernet address stick ethernet header send packet suppose system arp table way send packet need ethernet address us arp protocol send arp request essentially arp request say  need ethernet address   every system listens arp request system see arp request required respond  see request respond arp reply saying effect     recall ethernet address bit octet ethernet address conventionally shown hex using punctuation shown system save information arp table future packet go directly system treat arp table cache clear entry used certain period time note way arp request must sent  broadcast  way arp request sent directly right system whole reason sending arp request nt know ethernet address ethernet address one used ie ff ff ff ff ff ff convention every machine ethernet required pay attention packet address every system see every arp request look see whether request address respond could ignore host use arp request update knowledge host network even request nt note packet whose ip address indicates broadcast eg   also sent ethernet address one getting information directory contains document describing major protocol literally hundred document chosen one seem important internet standard called rfc rfc stand request comment proposed standard initially issued proposal given rfc number finally accepted added official internet protocol still referred rfc number also included two ien ien used separate classification informal document classification longer exists  rfc used official internet document mailing list used informal report convention whenever rfc revised revised version get new number fine purpose cause problem two document assigned number official internet protocol document revised time rfc number keep changing look rfcindextxt find number latest edition anyone seriously interested tcpip read rfc describing ip rfc also useful specification gateway used nsfnet contains overview lot tcpip technology probably also read description least one application protocol get feel way thing work mail probably good one  tcp course basic specification however spec fairly complex read time patience think carefully fortunately author major rfc jon postel good writer tcp rfc far easier read would expect given complexity describing look rfc become curious subject matter list document likely want rfcindex list rfcs rfc simple network management protocol snmp protocol get information gateway host monitor failure reconfigure gateway host remotely protocol foundation network management activity involving tcpip rfc document simple gateway monitoring protocol sgmp interim protocol snmp based sgmp replaced snmp  rfc protocol reading mail pc rfc assigned number working tcpip probably want hardcopy reference exciting read essential list offically defined wellknown port lot thing rfc network time protocol protocol synchronizing time machine also allows get time one national time standard rfc routing information protocol detail commonlyused routing protocol rfc rpc protocol remote procedure call sun network file system based actual nfs protocol specification currently available sun sun supply public domain implementation rpc aside use nfs whose implementation public domain rpc used number group building serverclient system remote database server see also rfc  rfc ip encapsulation ieee network used ieee token ring broadband etc principle seems would cover ethernet since ethernet ieee  however normal encapsulation used ethernet defined rfc  rfc domain database used go host name internet address back  also used handle uucp day includes protocol standard well information directed people going set domain name server every site copy document rfc xdr external data representation standard part specification sun rpc protocol rfc protocol underlying sun network file system rfc x window system protocol version document commonly used remote window system rfc list rfc somewhat information rfcindex rfc official protocol useful scan see task protocol built defines rfc actual standard opposed request comment rfc nsfnet gateway specification good overview ip routing gateway technology rfc netbios networking pc rfc ftp file transfer rfc subnets rfc ip put ethernet see also rfc rfc telnet protocol remote logins rfc arp protocol finding ethernet address rfc mail rfc name port general concept behind wellknown port rfc tcp rfc icmp rfc ip rfc udp ien old name server still needed several kind system ien catenet model general description philosophy behind tcpip following document somewhat specialized rfc slip ip dialup line rfc ip multicasting rfc bootp protocol often used allow diskless system find ip address rfc window acknowledgement strategy tcp rfc datagram reassembly technique rfc fault isolation resolution technique rfc modularity efficiency implementation rfc maximum segment size option tcp rfc congestion control rfc egp related issue may reading document remotely instead rutgers important rfc collected threevolume set ddn protocol handbook available ddn network information center sri international ravenswood avenue menlo park california telephone  able get via anonymous ftp srinicarpa file name rfc rfc rfcindextxt rfc rfcxxxtxt ien ien ienindextxt ien ienxxxtxt site access uucp ftp may able retreive via uucp uucp host rutgers file name would rfc topazpubpubtcpipdocsrfcindextxt topazpubpubtcpipdocsrfcxxxtxt ien topazpubpubtcpipdocsienindextxt topazpubpubtcpipdocsienxxxtxt note srinic entire set rfc ien rutgers topaz specifically mentioned 
midi time code cueing detailed specification supplement midi  february justification midi time code cueing merit implementing midi time code proposal within current midi specification follows smpte become de facto timing reference standard professional audio world almost entire video world smpte also seeing use semiprofessional audio area hope combine universal timing reference smpte de facto standard controlling musical equipment midi encoding smpte midi allows person work one timing reference throughout entire system example studio engineer familiar idea telling multitrack recorder punch record mode specific smpte time opposed specific beat specific bar force musician studio engineer convert back forth smpte time specific bar number tedious necessary one would take account tempo tempo change etc also operation referenced smpte time opposed beat bar example creating audio sound effect video requires certain sound sequence played specific smpte time easy way song position pointer etc even would unnatural way video recording engineer work midi time code absolute timing reference whereas midi clock song position pointer relative timing reference virtually audio filmvideo work smpte already used main time base musical passage need recorded usually done getting midibased sequencer start predetermined smpte time code case though smpte master timing reference used order midibased device operate absolute time code independent tempo midi time code must used existing device merely translate smpte midi clock song position pointer based upon given tempo absolute time relative time smpte cue point change tempo change majority sound effect work film video involve musical passage tempo rather involves individual sound effect  event  must occur specific absolute time relative  tempo  midi time code system component smpte mtc converter box would either convert longitudinal audiotype vertical videotype smpte time code master timing device mtc function could integrated video tape recorder vtrs syncronization unit control audio tape recorder atrs alternately standalone box would conversion simply generate mtc directly note conversion mtc smpte time code envisioned little practical value cue list manager would device computer program would maintain cue list desired event send list slave performance manager might pas time code smptemtc converter slave standalone system might generate time code  central controller  would presumably also contain library function downloading sound program sample sequence pattern slave cue list manager would preload intelligent mtc peripheral see data mtc sequencer control existing equipment device recognize mtc mtc system device would needed would receive cue list manager convert cue normal midi command specified smpte time sequencer would send midi command specific device example existing midi equipment might provide midi message note note song select start stop program change etc nonmidi equipment cd player mixing console lighting sound effect cartridge unit atrs may also controlled device relay control intelligent mtc peripheral category belong device capable receiving mtc cue list manager triggering appropriately correct time code smpte midi received minimum device might able change programming response cue list prepare ensuing event example intelligent mtcequipped analog multitrack tape machine might read list punch inpunch cue cue list manager alter internally compensate bias current rise fall time samplingbased sound effect device might preload sample disk drive ram buffer anticipation needing cue later cue list mentioned function separately described actual device may incorporate mixture function suited specific application market midi time code system midi time code format contains two part time code set time code relatively straightforward hour minute second frame number approximately  second encoded distributed throughout midi system unit know exactly time set however mtc gain power format informing midi device event performed specific time ultimately aspect mtc lead creation entirely new class production equipment getting nut bolt spec let talk us feature forthcoming device envisioned set begin concept cue list video editing example customary transfer video master source tape may expensive twoinch recorder lessexpensive recorder editing team work copy making list segment want piece together defined smpte time example first scene start time end time b next scene start time c end time third scene may even lie first two done feed cue list time information editing system master recorder give cue list editor work manually editing system editor locates desired segment assembles proper sequence suppose instead one two video recorder twenty device play part audiovideo film production special effect generator fade superimpositions additional deck background scenery live camera midi sequencer drum machine synthesizer sampler ddls soundtrack deck cd effect device stand device must handled le separately painstaking timeconsuming assembly editing multitrack overdubs change program occurs always happens anywhere item whole system may need reprogrammed hand midi time code come potentially control individual production element function together single cue list master controller would handle function described cue list manager console would list want device manager would send cue list various machine via mtc set protocol unit would react programmed designated midi time code conventional smpte time code appears change problem simply edit cue list using simple wordprocessing function run tape mtc thus integrates manageable system diverse tool disposal would drastically reduce time money frustration needed produce film video covered basic aspect midi time code system well example overall system might function take look actual midi specification midi time code device synchronization midi time code us two basic type message described quarter frame full also third optional message encoding smpte user bit quarter frame message quarter frame message used system running rather like ppqn midi clock accustomed several important way quarter frame message differ system name implies fine resolution assume frame per second quarter frame message per second corresponds maximum latency  millisecond frame per second accuracy greater possible within specific device may interpolate inbetween quarter frame  bit  resolution quarter frame message serve dual purpose besides providing basic timing pulse system message contains unique nibble four bit defining digit specific field current smpte time quarter frame message thought group eight message one group encodes smpte time hour minute second frame since take eight quarter frame complete time code message complete smpte time updated every two frame quarter frame message contains two byte first byte f quarter frame system common byte second byte contains nibble represents message number nibble one digit time field hour minute second frame quarter frame message byte f message f currently unused undefined system common status byte message nnn dddd dddd bit binary data message type nnn message type frame count l nibble frame count m nibble second count l nibble second count m nibble minute count l nibble minute count m nibble hour count l nibble hour count m nibble smpte type m nibble l nibble count assembled bit field assigned follows frame count xxx yyyyy xxx undefined reserved future use transmitter must set bit receiver ignore yyyyy frame number  second count xx yyyyyy xx undefined reserved future use transmitter must set bit receiver ignore yyyyyy second count  minute count xx yyyyyy xx undefined reserved future use transmitter must set bit receiver ignore yyyyyy minute count  hour count x yy zzzzz x undefined reserved future use transmitter must set bit receiver ignore yy time code type framessecond framessecond framessecond dropframe framessecond nondrop zzzzz hour count  quarter frame message implementation time code running forward direction device producing midi time code send quarter frame message quarter frame interval following order f x f x f x f x f x f x f x f x sequence repeat rate one complete message sequence every frame quarter frame time code running reverse quarter frame message sent reverse order starting f x ending f x least quarter frame message must sent arrival f x f x message always denote frame boundary since quarter frame message required definitely establish actual smpte time timing lock achieved reader read full sequence message first message last take frame depending reader come line fast forward rewind shuttle mode time code generator stop sending quarter frame message send full message final destination reached generator pause device shuttle point resume sending quarter frame message play mode resumed time considered  running  upon receipt first quarter frame message full message send quarter frame message continuously shuttle mode high speed since unnecessarily clog midi data line must periodically update device time code long shuttle send full message every often quarter frame message f x frame count l nibble must sent frame boundary frame number indicated frame count number frame start boundary follows convention normal smpte longitudinal time code bit bit message arrives precise time frame represents actually starting smpte time incremented frame message sequence since message sequence take frame send another way look last quarter frame message f x arrives time fully assembled information actually frame old receiver time must keep internal offset  frame displaying may seem unusual way normal smpte received also make backing running time code backwards le confusing receiving quarter frame message backwards f x message still fall boundary frame represents quarter frame message number  indicates quarter frame frame sequence example message f x indicates quarter frame frame sequence message f x indicates quarter frame frame sequence reader receives message number descending sequence know time code sent reverse direction also reader come line time know exactly relation frame sequence quarter frame accuracy responsibility time code reader insure mtc properly interpreted requires waiting sufficient amount time order achieve time code lock maintaining lock synchronization dropped although passing quarter frame message could interpreted relative quarter frame count time code reader always verify actual complete time code every message sequence frame order guarantee proper lock example let assume time  frame per second nondrop since time sent least significant digit first two quarter frame message contain data frame second two contain data second third two represent minute final two encode hour smpte type quarter frame message description defines binary data time field spread across two nibble scheme opposed simple bcd leaf extra bit encoding smpte type future use let convert example time  quarter frame format putting correct hexadecimal conversion f f h decimal f f h decimal f f h decimal f f h decimal smpte type framesnondrop note value transmitted   smpte type binary encoded bit smpte type drop frame nondrop frame frame number always even smpte type frame number may even odd depending frame number message sequence started case see midi time code frame number would alternate even odd every second midi time code take small percentage midi bandwidth fastest smpte time rate frame per second specification send message per frame word byte message microsecond every  millisecond take  midi bandwidth reasonably small amount also typical midi time code system imagined would rare normal midi midi time code would share midi bus time full message quarter frame message handle basic running work system suitable use equipment need fastforwarded rewound located cued specific time sending continuously accelerated speed would unnecessarily clog outrun midi data line case full message used encode complete time single message sending full message time code generator pause mechanical device shuttle  autolocate  point resume running sending quarter frame message full message byte f f chan subid hr mn sc fr f f f real time universal system exclusive header chan f message intended entire system subid midi time code subid full time code message hr hour type yy zzzzz yy type framessecond framessecond framessecond drop frame framessecond nondrop frame zzzzz hour  mn minute  sc second  fr frame  f eox time considered  running  upon receipt first quarter frame message full message user bit  user bit  bit provided smpte special function vary application programmed equipment especially designed purpose four character eight digit written example use adding date code reel number tape user bit tend change throughout run time code user bit message byte f f chan subid u u u u u u u u u f f f real time universal system exclusive header chan f message intended entire system subid midi time code subid user bit message u aaaa u bbbb u cccc u dddd u eeee u ffff u gggg u hhhh u ii f eox nibble field decode bit format aaaabbbb ccccdddd eeeeffff gggghhhh ii form bit character bit format code u u correspond smpte binary group  u two binary group flag bit defined smpte message sent whenever user bit value must transferred device line note user bit message may sent midi time code converter time sensitive mode midi cueing midi cueing us setup message address individual unit system  unit  multitrack tape deck vtr special effect generator midi sequencer etc possible event type currently defined setup message byte plus additional information f e chan subid hr mn sc fr ff sl sm add info f f e nonreal time universal system exclusive header chan channel number subid midi time code subid setup type special punch point punch point delete punch point delete punch point event start point event stop point event start point additional info event stop point additional info delete event start point delete event stop point b cue point c cue point additional info delete cue point e event name additional info hr hour type yy zzzzz yy type framessecond framessecond framessecond drop frame framessecond nondrop frame zzzzz hour  mn minute  sc second  fr frame  ff fractional frame  sl sm event number lsb first add info f eox description setup type special refers setup information affect unit globally opposed individual track sound program sequence etc case special type take place event number five defined note type ignore event time field time code offset refers relative time code offset unit example piece video piece music supposed go together may created different time likely different absolute time code position therefore one must offset match like one master time code entire system unit need one offset value per unit enable event list mean unit enable execution event list appropriate mtc smpte time occurs disable event list mean unit disable execution event list erase facilitates mtc event manager muting particular device order concentrate others complex system many event occur simultaneously clear event list mean unit erase entire event list system stop refers time unit may shut serf protection event start without matching event stop tape machine running past end reel event list request sent master mtc peripheral device id channel number match peripheral peripheral responds transmitting entire cue list sequence set message starting smpte time indicated event list request message  punch punch refer enabling disabling record mode unit event number refers track recorded multiple punch inpunch point event type may specified sending multiple setup message different time  delete punch deletes matching point time event number cue list  event start stop refer running playback event imply large sequence event continuous event started stopped event number refers event targeted slave played single event ie playback specific sample fader movement automated console etc may occur several time throughout given list cue event represented event number different start stop time  event start stop additional information refer event additional parameter transmitted set message time eox additional parameter may take form effect unit internal parameter volume level sound effect etc see description additional information delete event startstop mean delete matching event number time event without additional information cue list b cue point refers individual event occurences marking  hit  point sound effect reference point editing cue number may assigned specific reaction specific oneshot sound event opposed continuous event handled startstop single cue may occur several time throughout given list cue event represented event number different start stop time c cue point additional information exactly like event startstop additional information except event represents cue point rather startstop point delete cue point mean delete matching event number time cue event without additional information cue list e event name additional information merely assigns name given event number human logging purpose see additional information description event time smptemidi time code time given event supposed occur actual time th frame resoultion unit capable handling bit form subframe resolution otherwise selfexplanatory event number fourteenbit value enabling  type individually addressed  sl  l bit  sm  m bit additional information description additional information consists nibblized midi data stream l nibble first exception setup type oe additional information nibblized ascii l nibble first ascii newline accomplished sending cr lf ascii cr alone function solely carriage return lf alone function solely linefeed example midi note message f would nibblized sent f way device decode message regardless intended devicespecific message sent nibblized midi system exclusive message potential problem possible problem midi merger box improperly handling f message since currently know many byte following however typical midi time code system anticipate application midi time code must merged midi signal occuring time please note plenty room additional setup type etc cover unanticipated situation configuration recommended mtc peripheral power midi manufacturer system exclusive id number default channeldevice id obviously would preferable allow user change number device front panel several peripheral manufacturer may unique id within mtc system signal path summary data sent master time code source may example multitrack tape deck smpte synchronizer midi time code converter always smpte time code data sent midi time code converter master controlcue sheet note may mtcequipped tape deck mixing console well cuesheet always midi time code specific midi time code message used depend current operating mode explained play mode master time code source tape deck normal play mode normal varispeed rate midi time code converter transmitting quarter frame  f  message master controlcue sheet frame message ascending order starting  f x  ending  f x  tape machine capable play mode reverse frame message transmitted reverse sequence starting  f x  ending  f x  cue mode master time code source  rocked   cued  hand tape still contacting playback head listener cue preview content tape slowly midi time code converter transmitting frame  f  message master controlcue sheet tape played forward direction frame message sent ascending order starting  f x  ending  f x  tape machine played reverse direction frame message transmitted reverse sequence starting  f x  ending  f x  tape moved hand cue mode tape direction change quickly often order frame message sequence must change along tape direction fastforwardrewind mode mode tape highspeed wind rewind touching playback head  cueing  taped material going since  search  mode synchronization master controlcue sheet important play cue mode thus mode midi time code converter need send  full message  every often cue sheet act rough indicator master position smpte time indicated  full message  actually take effect upon reception next  f  quarter frame message  play mode  resumed shuttle mode another expression  fastforwardrewind mode  reference credit smpte ansi vm midi time code specification created chris meyer evan brook digidesign thanks stanley jungleib sequential additional text also many thanks mma jmsc member suggestion contribution spec  
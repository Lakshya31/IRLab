 xhu pack introduction description program closing  introduction xhu stand xenocide hacking utility written xenocide mainly deal hacking security cryptography may use program anyway like would like hear comment reach static line  internet dankeisling windmillcom xenocide bigmetrobbscom xenocide  description program archive file packaged brute dzip fakelog isprime netware passwd permute prime winsscrk missing file please contact send brute brute program show user bruteforce attack bad idea gaining key understand bruteforce attack read explanation explanation using example pkzip password since everyone familiar program generally three type attack used gain password key cryptanalysis mathematical attack used calculate key usually fastest best option although usually difficult dictionary attack see dzip using set word guess key usually password usually slow easy create bruteforce attack trying every possible combination key key fit usually slowest way solve equation simple term suppose kkey equation solve k two time five note extremely bad example give basic example finding key encryption much stronger could probably rule attack dictionary since arent dealing letter see dzip cryptanalysis stand point would compute  find key although encryption usually another variable stopping u simple computing left equal sign example suffice use bruteforce would try every possible combination k since bruteforce usually start lowest possible value go would start k since  nt true would try etc ended since equal time program would halt giving u solution k far working number using letter order conform pkzip password pkzip password  xhu  would go finding using brute force since brute force usually begin lowest possible value work way would begin letter say p pkzip password case xhu p password tried find pp solved password first try come false since axhu false would try letter b c way z since none work  loop  around character  aa  since aaxhu false would try  ab   ac  way  az  reached  loop  around  ba  go way  bz   ca   cz  finish character length  zz  loop around  aaa  try go  aab  forth  aaz  reached loop  aba  try  abb   abc  get  abz  loop around  aca  reach  azz  loop around  baa  get fourth character string right  zzz  reached seems like long time dealing three character string reach combination  xhu  sometime middle giving u xhuxhu case true halting program returning p understand c think pa p zzzz p pp printf  found password  abort else remember though pc extremely fast finding password would generally take matter second find password  xhu  think crack pkzipped password think point password generally character length password pkzip casesensitive totally different password far using lower case letter secure password contain number punctuation key high ascii space within factor contribute increasing time finding password immensely first run brute character password think nt take long show remember displaying screen trying find password us sequence compute password b try computed password equation c return result try false goto true goto e e exit success le triple time find granted finding password  xhu  nt long take factor listed password uppercase try  aaa   gha  basically every combination upper lowercase letter string since introducing new character z also introduce punctuation key key   space one character severely increase time number high ascii character character greatly increase time security program heavily encourage password character length space alternative case say length character try kfi lñ wo nt usually password brute force check every possible solution key using program us bruteforce always wise option specifying character use suppose know password lower case letter would waste time factor upper case space number high ascii bruteforce program option specify using lower case letter specifying number upper case letter still nt really know bruteforce attack follow newsgroup scicrypt contacting dzip dzip stand dictionary zip crack pkzipped password dictionary file also called wordlist simply text file one word per line program check word password false try next one dictionary file dzip look called zipdicttxt current directory example program suppose zipdicttxt file looked like orange banana apple zowie zip file password called crackmezip assign password  zowie  crackmezip dzip le try word  orange  crackmezip file pkzip tell u  right password  dzip try  banana  since  banana  work try  apple  try  zowie  pkzip say password correct program halt giving u password crackmezip make zipdicttxt file certainly make word static line available download ftp sableoxacuk pubwordlists directory wordlists setup one word per line usually english although different language might notice using dictionary attack limitation password  sdf unsdf  since wordlists usually whole word limit u bruteforce attack see brute plan making dictionary file use dictionary attack password whole word also remember  apple   apple  two separate password dictionary file lower case one thing dzip fast ran one meg dictionary file lot word took five minute type screen returned password second bruteforce attack way knowing long take find key bruteforce happens correct key found since dictionary attack start top go bottom file time limit long take get word file password somewhere middle quicker finding password located bottom file password used zip file end one meg zipdicttxt file theoretically mean take minute try meg word however abundance word english language one meg dictionary pretty small common size around meg know solve password using cryptanalysis always better least try dictionary attack bruteforce since theoretically take minute meg dictionary might get lucky find password although unlikely could simple make password time secure dictionary attack using password  apple   apple   applesoranges   apple  remember space last example mean different  apple  space great detail covered using dictionary attack pretty simple reason using dzip different password made dictionary file downloaded one good example think english whole word use zip password using lower case letter run dzip meg dictionary see happens specification dzip zipdicttxt must current directory zip cracked must current directory zip file must least file encrypted password although real cryptanalysis attack pkzip one must know plaintext file cracked day program return password matter second stuck using bruteforce dictionary attack fakelog fakelog login trojan designed capture user name password machine use  login  program demo copy simply logins different every machine fakelog simulate real login machine ask user name password user entered item written file error message follow transferring control real login user enter info file password written called passwd change wish something le obvious view later enter  xenocide  user name  xhu  password passwd file would look like xenocidexhu time user log added end file find passwd current directory fakelog create example fakelog run time novell netware login login xenocide password xhu wrong password entered passwd file would look like xenocidexhu problem fakelog user log many time notice somehow mistypes password first time order fakelog correctly work fool user must made look exactly like real logon nt know logon look like must contact customize must give detail welcome screen text shown login prompt login prompt ie login login username etc password prompt ie password password pas etc error message may get mistype password isprime isprime tell number specified prime false return reason example entered number would return false reason  due limit personal computer large number nt handled well netware netware encrypt password using novell netware password encryption us simple hashing password byte string mixing compression password byte hashing bit example enter xhu password return e b b ed f e b ff f e b fd passwd passwd let make unixlike passwd entry commonly found etcpasswd contains info username home directory user number etc print file called passwd current directory used security program check user password specific file one note passwd modify string way encryption password prompt must enter encrypted password encryption implemented yet although hope actually encrypt crypt someday permute permute display permutation string string ab return ab ba prime prime calculate prime end limitation personal computer winsscrk winsscrk decrypt window v screen saver password normally stored controlini specifically look controlini given choice file name requirement encryption password must password prompt controlini look like anyway around success rate certain punctuation key confuse encryption tested win  encryption different expect win  edition next pack  closing please note program simple one give  test  knowledge although may seem  useless  greatly helped learning program case information basic basic cryptography since program took make get bug say long ever xhu pack come might also extend release people would like distribute kind program would contact arrange pack thought new program duplicated past program dzip still quite challenge improve much possible also would like see program made please contact figure release pack day thanks breedx helped fakelog program xenocide 
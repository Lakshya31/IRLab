dp dp db b db dp p  dp   b  dp yb dp yb yb yb dp  yp    db yp bdb b db b   b  b   b  b yb yb yp     yp  db db   b   b yp yb dp yp  yp   yp   yp  version  compiled michael adcock email adcock menudouhedu january                                   yb dp w w dp  yb yb db dp db www  db db db yb db dp  ybdpybdp p yb p dp ybdpybdp dp yp yp yp yp yp yp yp w                                   updated q added crazy climber updated added sega system added b b b b b b b lot bit thing added space invader stepbystep updated r emulator update updated r game listing update                    b  db b db db db wwp b p  yb dp yp p yp yp yp                    document designed aid anyone considering whether write emulator arcade game machine attempt answer frequently asked question give step step tutorial provide resource necessary capable programmer begin work emulator arcade game please note although information provided generic enough apply emulation system primary focus document resource provided arcade game emulation document contains information commercial emulation package available information added document please email adcock menudouhedu moose rocknetnetau table content q    q trying write arcade emulator crazy nt q game would recommend starting q game easiest emulate q game available documentation q start q language use q use assembly q sure assembly business q nt choice language depend target gamesystem q portability q nt arcade emulator written cc q java q could explain cpu emulation q cpu emulation sound complicated start q k series processor easy emulate pc q handful processor used arcade game q use cpu emulation code freely available q cpu rom interact q handle cpu opcodes q pokey q slapstic q translation q anything else know cpu emulation q useful switch setting pinouts q produce memory map q find processor game us q find information specific processor q might find rom q disassemble rom q decode data rom q sound emulated sample used q legal issue sample copyrighted q difference speech synthesizer sample playback device q used williams arcade classic sound good q sound hard emulate q find documentation game q schematic game q might contact someone owns machine hardware q todd krueger offer help q find general description arcade game q emulator author keep note working q find information internet www q release source code finished memory map      crazy climber video sound detail memory map dig dug memory map m pacman pacman rom file memory layout memory mapped port port character set pascal source ziped uuencoded m pacman rom identical pacman phoenix component functionality color memory map sega system game hardware information memory map scroll video ram fixed video ram color video ram main ram video register io register rom file graphic format sega gfx viewer v source code ziped uuencoded sega vector converta game component memory map io input io output vector processor space invader board spec memory map graphic hacking         g wrote section g introduction g location graphic specific game rom g general information g pixel layout g note request g mode q xx source code ziped uuencoded pokey   p wrote description p mean pokey nt guy hang around gumby p come name like pokey p general description p technical description p pinouts p address line p find source code info pokey emulation p finding using real pokey ay     wrote description introduction disclaimer original document technical information game bit     b section anyway b commando provided edoardo gambare iolit b crazy climber provided vince mayo uc diamondnbnet b decrypting rom lionel theunissen lionelth ozemailcomau b crush roller provided vince mayo uc diamondnbnet b gyrus provided mike cuddy mcuddy scitexdvcom b robot provided john manfreda jmanfred fhusboschcom b juno first provided mike perry mjperry uiucedu b penia provided perry mcfarlane ce torfreenet b space invader provided john manfreda jmanfred fhusboschcom b star war provided peter mcdermott b tapper provided clay cowgill clay supracom b toki provided david winter winter worldnetnet b turbo provided patrick j oreilly oreillyp execpccom b tutankham provided moose malley moose rocknetnetau stepbystep       stepbystep implementation emulator phoenix part precoding part ii lowhigh endian part iii let start coding part iv run part v continued  stepbystep discussion emulator space invader background getting started disassemblers space invader specific reference      r list emulator author r list currently emulated game r list game people want see emulated r internet resource r www resource r general arcade emulation link r rom image r processor information r schematic r miscellaneous information r ftp resource r fsp resource r list arcade game                           db db dp db db p p b yb  yb yp yp                           suzanne archibald suzanne crysaliscom neil bradley neil synthcomcom carmical dcarmical trilakesnet clay cowgill clay supracom mike cuddy mcuddy scitexdvcom jim dankiewicz jamesdankiewicz resnetucsbedu laurent desnogues desnogue aiguemarineunicefr bryan edewaard chris hardy chrish kcbbsgennz ed henciak ethst pittedu joe husosky scubajoe ixnetcomcom paul kahler phkahler oaklandedu ralph kimmlingen ubf rzunikarlsruhede thierry lescot shinobiz mygaleorg moose malley moose rocknetnetau alan j mccormick gonzothegreat junocom ivan mackintosh ivan rcpcouk vince mayo uc diamondnbnet phil morris pmorrisb cixcompulinkcouk brian peek peekb unionedu mike perry mjperry uiucedu risqman risqman aolcom pete rittwage bushwick ixnetcomcom adam roach adamroach exuericssonse joel rosenzweig joelr anhpcom trevor song sharrier hotmailcom gary shepherdson od dialpipexcom dave spicer emuchat hubcapdemoncouk brad thomas bradt nolnet allard van der ba avdbas wileidenunivnl nemoto yohei byy niftyserveorjp emulator author  potential one ian chai glen chappell everyone else responsible figlet v generated ascii font see everyone responsible creation maintenance linux x dosemu believe actually written document using do edit dosemu window linux x                               yb dp w www db b yb db dp db www db dp ybdpybdp p dp yp p yp yp yp yp                               phil morris brought issue attention decided add section many arcade emulation project progress far know emulator author fulltime word hobby done spare time real life however seems emulation project may become stalled new version released month plea emulator author whose project may stalled would possible make source code available two reason tiredunable work emulator would shame see hard work wasted going work emulation would great someone else could pick left implement thing far missed sound accurate colour etc b one day big company may take legal action emulator coder doubt much never know source code emulator public domain least wo nt forever lost                   db db p db dpyb b wd p dpwwyb ypw dp yb                   q trying write arcade emulator crazy nt neil bradley author emu said  unbalanced really help  however stopped dozen emulator author pursuing goal anyway programmer bit crazy right q game would recommend starting neil bradley suggests  good question recommend picking one like youre emulating game emulating game fun fun keep emulation project goin  mike perry suggests  go limb suggest try successfully emulate machine using processor simple powerful processor feature instruction set  correspondence x instruction set mean every instruction instruction set also exists intel x better yet exception intel instruction modify exact flag corresponding instruction little work needed generate resulting flag register setting top wildly popular earlymid sure many classicera game use chip  q game easiest emulate told moose number source suggest phoenix easiest game emulate wiretap appears good documentation phoenix see also q chris hardy author phoenix emulator win agrees  reason started phoenix  importantly good concise accurate description hardware memory map wiretap archive section q us instruction set subset z therefore nt implement z instruction one borrow marat one solve problem us character graphic mean nt sprite routine slow enough emulate completely c ie emulator completely c although important remember graphic side emulator assembler hardware nt write microsoft  neil bradley recommends  would nt attempt crystal castle marble madness example first emulation lot custom chip arent documented anywhere something simple like space invader might good place start biggest hurdle making one run z emulation nutshell nt bite much cant chew new graphic system new sound system new processor new mathbox board make thing futile start game instance use cpu know graphic chip know applicable  mike perry say  game easiest gah thats relatively hard say long game one processor two one used sound probably terribly difficult task game vector based increase difficulty level considerably simpler processor easier programming task likely emulator run decent speed slower computer word emulated z difficult handle intel challenge  q game available documentation present time little documentation freely available phoenix sega converta vector game space invader described section memory map document may also want check section r reference anyone provide information game happy add howto dave spicer say  ca nt think detailed documentation easiest game ever wrote driver space invader doddle  q start neil bradley suggests  nt know least one assembly language emulation going difficult thing someone accomplish two big reason game written prior written assembly mean going luxury looking wonderful source code going guess disassembly secondly concept io memory paging etc  familiar assembly programmer knowing hardware read schematic help immensely find game want emulate find game similar enough platform game want emulate nt seriously reconsider others go ahead implement cpu emulator anything else writing sound graphic engine wo nt good nt anything drive need know least one high level language assembly language preferably one contained video game trying emulate  neil bradley summed emulator mailing list  pick game want emulate stick get cpu emulator know trust use get thing running grab disassembler write small debugger allow step code stop specific point etc   mike perry offer informative list thing obtain  need information microprocessor used game knowing manufacturer device number sufficient must seek technical reference appropriate processor many case mail manufacturer free cheap copy tech spec need spec opcode matrix hexidecimal value opcodes instruction detail tell exactly instruction processor flag register probably tell flag modifiedsetcleared condition instruction cycle count depending machine may necessary keep exact count emulated cycle interrupt triggered exact time eg mhz le vector machine may big deal according author vectrex emulator interrupt trigged exact cycle whole display could screwed raster game seriously doubt cycle hurt anything interrupt information need know interrupt triggered processor us interrupt vector need know location vector entry also need know whether interrupt prioritized addressing information need know exactly kind addressing mode available microprocessor machine mode must emulated memory read writes including instruction fetch stack operation  chris hardy say  hint starting emulator write bit binary dumper allows dump rom form work rom character rom graphic formatted contrary popular belief nt complete character graphic system going fun work ascii number character character rom display display memory ascii text screen replace anything else  x  something played first emulated phoenix game way even scrolled background background forground put side side column usually enough arcade display part processor emulator table count read writes every memory location allows immediately find memory location used emulated code ie screen memory  device  memory location need also done nt always draw whole screen use offscreen buffer change table work character changed update speeded phoenix quite bit drawing character every frame took  dave spicer offered  start individual emulation finding character hardware game question implementing simple version usually enough see text screen get idea game q language use suppose possible use almost language available however performance assembly definately language choice high level language used current emulator include c c neil bradley comment language use emulator  might wise learn c biggest reason widely used language plenty expert field help pascal dead new development language except maybe hobbyist though must admit borland pretty damn good job making turbo pascal viable entity extension nicities rival c functionality hold true visual basic really basic literal sense anymore clike language reason cpu emulator ive found written c think found written pascal decide use c never make anything le penitum pro cpu emulation time consuming even single instruction two kill processor performance give idea original emulator ran mhz written optimized c c pentium slouch come optimizing rewrote emulator bit assembly running mhz compiler still match seasoned assembly programmer add extra overhead c toast never get good performance oo cpu emulation code  add bigtime overhead class alignment cpu emulator horribly slow  really bad place use c c place ui api abstraction talking performance bad idea  frank writing something like cpu emulator c would considered shitty programming practice notice wellperformed emulator written assembly least far cpu emulation go  mike perry add  tell want use delphi delphi rapid prototyping developing graphical application emulator application suited development delphi additionally delphi application usable win nt do single user singletasking o likely bring better performance using pascal possibility borland pascal serious limitation term efficiency instance someone handling opcodes using case statement case op blah blah blah return case op blah blah blah return case op blah   return  reasonable c compiler including borland c convert jump table ie code array fast case determination bpascal hand generates series mov cmp compare jmp instruction like big ifelse mean opcode take around cycle get code using bpascal take le cycle using c even use c task made much easier using inline assembly better yet make assembly main language link external c pascal function necessary graphic routine definitely assembly better learning assembly  dave spicer warns  imho writing emulator pascal particulatly good idea emulating machine code want something resembles form  q use assembly neil bradley say  regardless academic would like believe compiler ca nt outclass good assembly programmer spend plenty time optimizing rewrote assembly almost assuredly going get  speed improvement c compiler others matter solve general case make assumption registersvariables need saved assembly know code write cpu level write optimal instruction sequence match commoncase path code really need know assembly project like effective amount time  mike perry say  normally would recommend writing application primarily entirely assembly assembly minimally portable application spends time executing code precious little good hand optimize remaining assembly emulator hand normal application emulator job emulate hardware emulation dealing register memory addressing memory readswrites instruction real processor use sort stuff  basic  basic actually easier use x asm intel register want use high level language assembly make easy manipulate bit bit bit value c pascal make downright tedious manipulate one size variable expression least hll code contain many many typecasts making hard read  q sure assembly business paul kahler point  number people indicated assembly way get good performance anything short pentium pro like say first rev cinematronics emulator written turbo pascal seemed run fine pentium almost year ago trying run move assembly tp allowed create array function could grab opcode call proper function really good performance considering cineprocessor nt map x anything else ran  mips problem c code pentium even graphic sound also  wanted point asm nt way go thing c theyll portable btw used bgi driver vector display back  pete rittwage add  able get stellar performance purely c including graphic overhead even lowly  also seen people get pretty good performance marat z code thing donkey kong emulator code far optimized access thing couple structure deep time inefficient  q nt choice language depend target gamesystem neil bradley clear thing  writing emulator strictly c including cpu emulation graphic emulation give good performance anything short pentium pro author tempest emulator run window run fine mhz written c target platform great target platform  graphic heavily intensive running slow isa card better use c c give benchmark  famous  cpu emulator including graphic raw cpu time indicate emulated speed  running asteroid compiled watcom c  compile option thrown emulator emulated speed marat mhz apple iie emu khz optimized apple iie emu mhz emu first c emulator mhz emu assembly mhz background assembly c optimization spent greater year numerous processor programmed everything tiny microcontroller circuit multicpu application slouch come c assembly optimization result speak keep mind nt graphic routine sound routine code test reiterate tried say past target machine  crappy isa card better squeeze everything emulator possibly need emu us single page color graphic era prior frame draw new one typical frame vector line per  frame  roughly frame per second line per second must drawn say average line pixel  pixel second game donkey kong space invader nt coming even close moving many pixel screen case get away le totally optimized cpu emu could nt get away much linedraws extremely expensive spent day working high speed linedraw routine emu since early day know talking point trying make optimize cpu emulation le impact graphic emulation faster code run slower machine want make minimum platform pentium probably get away writing quick basic want little intrusion cpu emulation possibly get got better emulation almost factor rewriting assembly nt think anyone said asm way go remember saying optimal way go  laurent desnogues say  got two time speedup converting emulator written c sparc assembly language one exception  wrote phoenix emulator run unixx platform one eight graphic plane us marat z emulator package get decent speed even low end sun problem unix implementation handle realtime program game often freeze kernel internal job  admit platform well suited arcade game playing programming emulator enjoing nt  q portability neil bradley answer  thing c nt mean portable basically two platform need attention gaming pc mac nt know anyone owning silicon graphic workstation saying  gee would nt cool fire emulated version space invader thing  people know sparcstations run unix nt interested emulation gaming general granted exception rule part   platform nt really running forced corner get x performance something coding assembly platform know blow  portability  time said gladly help others platform giving hint helping emulation project platform familiar besides code written  portable  nt start way end using o specific call improve speed etc  road nonportable code paved portability mind btw run unix synthcom win sequencersound studio window nt  server one development machine do guess one use game   q nt arcade emulator written cc according heard c c used emulator entire emulator written c c neil bradley say  name one emulator written c run reasonably anything le pentium pro  nt know emulator entirely written c emu example written c assembly c glue code nonspeed critical thing assembly everything else run reasonably  decent pci video card chris hardy phoenix emulator coded vc using directx  note written c c compiled vc lessen anything chris done phoenix nt exactly cpu hogging game something like tempest battle zone red baron vector emulation time consuming even original slow spot  q java neil bradley cringing terror say  way even prayer get something run fairly quickly java make sure client compiles native cpu visual j anyone case write emulator java run browser interpreter interpreting interpreter cpu addition interpreter interpreting hardware action well interpreted java built speed guy microsoft getting almost identical performance visual j visual c guy according java proponent last pdc compiled java apps possibility hard enough getting optimal assembly emulation run full tilt  without interpreter interpreting emulator hit would  gigahertz pentium pro might possible speed java virtual machine interpreter nt bother unless youre compiling might chance interpreted way would nt bother trying  q could explain cpu emulation cpu emulation heart emulator code correct handle rom data nt necessarily worry game rom operates since cpu brain machine get complicated neil bradley say  something z example quite extensive got function  opcodes deal permutation mention arcade manufacturer code use z undocumented opcodes though undocumented anymore  grab book z whatever cpu working best way start  z processor actually much complex  q cpu emulation sound complicated start mike perry offer following  recommend read good book computer architecture digital circuit andor boolean algebra understand basic behind following well prepared emulate microprocessor fetchdecodeexecute process bus memorydata readingwriting interrupt implementation stack operation register flag binary arithmetic two complement representation boolean algebra suggest computer hardware mano another good book computer architecture practitioner approach something like patterson hennesey college textbook two patterson book would probably helpful cover architecture system level rather gate level cover mips assembly language pipelining unimportant emulation although could use similar technique speed emulation memory addressing virtual memory io devicesdma  q k series processor easy emulate pc phil morris found following usenet newsgroup  k emulation done quickly intel  check ardis executor use combination interpreter dynamic recompiler reach speed pentiums cool white paper good reading anyone looking write emulator maybe white paper available ardi web site wwwardicom  q handful processor used arcade game neil bradley offer u bit history  issue cost back z cpu cheapest game early late nt need  cost compared quarter price got start functionality throughout year known many programmer collosal piece garbage always hate chip worked barely bit pointer register byte stack etc  first cpu time actually chaged flag register load pretty weak cpu term functionality evidenced battlezone red baron could implemented game higher cpu like z mhz eliminated mathbox altogether think time would almost cheaper way made quite improvement z opportunity learn mistake around better chip aspect superior ie register lot nice feature extremely consistent z started guy worked intel split made company zilog took design added lot nice feature make real powerful chip era z popular cpu powerful built block move command kind register indirection game era used z  q use cpu emulation code freely available dave spicer suggests  writing processor emulator big job difficult unless know emulated processor fairly well might better starting marat c based emulation code proven albeit slow technology  neil bradley say  goal oriented learn emulator first write want education mean big chunk bite  q cpu rom interact neil bradley instructs  create entire memory space including loading rom start execution wherever processor start nt try interpret rom never get right completely unpredictable  mike perry add  variable stuff thats beauty nt supposed know processor used emulate opcodes interrupt simple fetchdecodeexecute loop also emulate supporting hardware control gfx sound called interrupt written correctly emulated game run  nt need know detail game code  q handle cpu opcodes neil bradley offer  going handing single opcode class overhead completely nullify speed could even hope get try using pointer current virtual program counter fetch byte need use array function call one opcode  point invalid opcodes nop function  pointer byte bit code  q pokey gumby friend seriously great description atari pokey see pokey section q slapstic form comedy nyyyuk nyyuuuk nyyyuuk  woo woo woo woo woo actually security chip atari introduced game suzanne archibald provided information  unfortunatly nt information chip per se avoid gauntlet see machine using slapstic chip different name generic term atari copy protection chip would unique function case gauntlet iii chip decoded top bit maze data mind getting around slapstic gauntlet nt difficult simply use rom available correct maze layout without needing decoding disable slapstic hey presto  q translation would easier translate code language pc compile rather emulate cpu mean translation write program read machine code instruction rom cpu instruction stored output line code say assembly c devise set translation rule machine code target code idea work get program compile optimize like perform operation original rom thought moose told  idea discussed cem year ago problem understand translation ever know translated instructionsdata bit game say get called run real unusual condition code loopy translator would super intelligent recognise loop might span  million instruction ever know captured instruction data way understand thing translation extremely difficult impossible however think several order magnitude difficulty straight emulation maybe done  neil remarked  actually kicked around idea writing emulation compiler would actually take native object code game convert native machine code execute instead emulating processor would allow game run native processor speed get x speed improvement cpu emulation even simplest instruction wind taking  clock tick emulation land  q anything else know cpu emulation neil bradley reminds  nt forget include event happen regular random interval like nmi interrupt  q useful switch setting pinouts mike perry suggests  switch setting important probably want let user initialize whatever want even nt still need emulate probably memory mapped game code us information set thing like number life etc dont know exactly probably really weird setting game  neil bradley add  switch setting useful usually time first fire code wonder whether code going selfdiagnostic mode knowing switch setting helped emu get diag halt mode knowing pinouts nt anything knowing address cpu standpoint switch much helpful  dave spicer say  knowledge electronics help mean use schematic fill awkward gap said time work original program code make guesstimate everything  q produce memory map kevin brisley offer  well plugging away trying figure inner working burgertime thought try get discussion going area trying create memory map arcade game far managed determine address rom containing code mapped checking irqnmireset vector looking disassembled code hint eg checking jmp jsr get idea rom go next step determining rest rom go planned scouring code reference address found rom trying determine context access example piece code look like copying bit make letter know rom contains charset place rom also schematic burgertime wondering easier way thought must way determine schematic various rom go unfortunately electrical engineer talent interpreting schematic great question also hold memory mapped io going apply logic determining button mapped button joystick appear schematic way trace connection button back schematic figure bit get flipped memory possible emulator author determined stuff scouring code method method nt thought  sure everyone would happy get information  anyone want help received information someone staring work emulator asked reveal name time limited emulator may finished time soon  initial scan rom used tool might use emulator developer specifically marat dasm thats supplied z emulation package do tool found intended debugging pcb mounted cpu also used disassemble debug romfiles called noizzip written john hartman one specifically z version processor give fully interactive disassembler memory dumper hex ascii also trace debug rom input file intel hex format need utility like binhex convert rom hex file use ftpsearch http ftpsearchunitnoftpsearch find place get  note found file simtel archive see section r directory simtelmsdosdebug filename type length date description  noizip b noice  remote debugger tm noizip b noice  remote debugger c noizip b noice  remote debugger noizip b noice  remote debugger hc noizip b noice  remote debugger noizip b noice  remote debugger noizzip b noice  remote debugger z noizzip b noice  remote debugger z q find processor game us see section r reference q find information specific processor see section r reference adam roach also suggests   processor manufacturer provide free cheap data processor call write  dave spicer say  nt know really good info net however might like try get hold  programming z  rodney zaks isbn  book use need look z info  sure book always used use commodore programmer reference guide  neil bradley source programming rodnay zaks bible developing emulator used emu  q might find rom try resource r r else fails find someone owns machine see help see q q disassemble rom lucky someone may already written disassembler processor target game check section r r reference q decode instruction variable data sprite color graphic etc rom neil bradley answer  trial error seriously anything beyond explanation ca nt described word le  mix ram rom space addition hardware space well different platform  dave spicer say  use debugger graphic viewer find data wrote thing require make sense original game code work  q sound emulated sample used hotly debated question neil emulator synthcomcom mailing list thought address seems two faction debate want emulator emulated sample used cheating even risk poorer quality sound slower overall emulation  purist  would like see sound emulated  want emulator close possible real thing sample used provide better quality sound produce bass effect produced arcade cabinet neil bradley say  whole purpose emulation exactly duplicate look feel sound etc  game pokey us top octave divider basically pull pulse data addressing bus generate sound odd frequency pokey everything slightly flat key musician ever notice sound top octave divider circuit sound nothing like fm synthesis found sb board get somewhere ballpark always find fm synthesis sound card somewhat thin totally opposite pokey game use conventional synthesizer chip sound much easier use standard waveform etc  sampling give truest life representation real thing exactly emulation going due respect average individual ca nt tell difference sample real thing thing would make fake knowing sample sorry come across bit agressive sample issue one hot bottons ask question want sound card attempt fm synthesis something nt sound like fm synthesis wo nt sound like original would like sound like original  ed henciak add  also like emphasize sampling game emulation begun work sega vector game emulator primary focus star trek may seen moose page senior project pitt anyway nt even plan emulating sound star trek set use sample audio goal emulating old arcade game bring back experience playing game finished emulator ie final revision release weakno sound miss point emulation understand emulation refers emulating hardware game think arcade emulation limited emulate cpu video audio critical game playing experience opinion gyrus would kinda lame wo killer soundtrack reading group way wacky game game make perfectly emulated plus hog cpu time game dave spicer pac man audio perfectly emulated believe pac man us z cpu sound chip much overhead star war hand us pokey major havoc us cpu addition pokey believe want see game emulated wo additional hardware importantly author focus sampling audio game make audio archive sampled sound khz possibly make small circuit take input machine directly sampler pray author take advantage granted emulator programmer training couple week still long way go area fully respect author incredible work want push sampling help fully bring back arcade experience q legal issue sample copyrighted neil bradley counsel  two condition copyright sound sound sample sample star war empire strike back game sound contained within sample playback unit ie joust robotron etc  direct waveform ca nt copyrighted sinesawtooth etc  case way get legal right redistribute license case way legally utilize sound resample otherwise copying data right eprom case case legally considered  creative work  pokey sound synthesizer chip among thing designed generate wide variety sound true couldnt legally sample real world synthesized sound one would using synthesizer plenty lawsuit filed large musical instrument corporation due sample stealing roland yamaha stole fairlight  chior  sample used quite bigtime hit case samplesourced lawsuit one ever filed source synthesis suit filed patch stolen reused synths copyright law considered software since stored data atari ca nt copyright sound pokey generates case sampleplayback synthesizer like almost everything sold today patch preset could nt used published song published producer musician assure case  q difference speech synthesizer sample playback device joel rosenzweig say  difference speech synthesizer sample playback device little fuzzy describe two see call star war speech reproduction sample playback instead speech synthesis sample playback waveform stored compressed decompressed state memory waveform generally longer phoneme played entire word phrase heard generally entire sentence would stored one sample microprocessor signal speech occur say sound unit play speech sample number x might entire sample use force luke playback device read data eprom starting location sound sample speech read data decompression step digital analog conversion step take place analog waveform output single operation finished entire speech phrase complete speech synthesizer speech produced catenation small sound called phoneme english language little phoneme create english word right combination phoneme phoneme stored programming data synthesizer  say fm synth generate sound programatically phoneme data could live sample human order create word microprocessor determines correct string phoneme need played order generate correct sound string phoneme sent speech synthesizer play phoneme order using technology chip either sample playback programming fm synthesizer many phoneme read precise order generate word sentence whereas one readplayback cycle needed play sentence sample playback device implementation speech synthesis implementation required many shorter cycle achieve similar outcome speech synthesizer nature able reproduce english say word rather storing word store phoneme needed produce word sample playback device capable reproducing english word know play back sample stored memory might word could sound effect certainly wanted could record english phoneme store sample use sample playback device microprocessor act like speech synthesizer fact scheme work quite well get human like sounding speech main point sample playback unit capable playing back sampled sound bounded generate speech speech synthesizer limited device might employ use sample playback device order play phoneme stored way yes perhaps phoneme stored sample could store entire speech sample one phoneme technically sample playback device speech synthesizer wrap biggest difference sample playback device used play back sample sound imaginable used play back whole sample speech speech synthesizer device instance behaves like sample playback device value produce word set phoneme limited prerecorded speech sound star war tm device play back prerecorded sample speech data stored eprom sound board capable producing speech could dream individual phoneme stored anywhere accessable hence speech synthesizer advantage luke voice sound like luke darth vader sound like darth vader etc rudimentary speech synthesizer capable copying different voice usually limited small change pitch speed etc believe atari named chip speech synthesizer used word synthesizer loosely mean speech production though strictly limited speech could put sound memory wanted  q used williams arcade classic sound good neil bradley answer  wa classic sample even original sound go sound rom joust robotron etc  sample synthesizer mixed line played back realtime  joe husosky say  recreate sound hooked sound board instructed play sound game one time really cool thing win wac do version also included sound included wav file really customise win wac sound  q sound hard emulate neil bradley complains  asked multiple time nt add sound well lousy sound card cursed different structure almost every form synthesis known man im talking filtering pitch etc  sorry say even expensive sound card high quality cheap pile garbage compared big brother counterpart ie digital analog synthesizer noisy brash cranky low quality amazing work know reference equipment consists rack synthesizer compared sound card even moderately close quality partly reason nt bother sound quality poor better pc speaker give sound saying synthesis capability like saying moped well suited transportation weather condition specific pokey proper way emulate chip sample fm syntehsis nt sound like top octave divided square wave fm sound thin comparison want character pokey sample called true emulation anything else imitation lot circuit bass boost image enhancer get  sound  without sampling real thing going get thin cheesy sound lot case nt enough oscillator sound card emulate  pokey configuration either sound like mixed sample playback correct thing mean better damned efficient mixing code keep telling people want good performance particular lowend platform machine code thing seen mixing code speed x recoded assembly nt make much difference pentium user really appreciate okay decided sampling way go pokey emulation let consider thing first need access game second need get every sound game make sampled case getting sound seperately isnt possible ie battlezone engine noise firing sound lastly individual sample need reverse engineer command pokey would cause sound occur importantly stop nt straightforward step getting correct sample dont mean sampling radio shack mic sound blaster hard work spend hour getting good high quality sample necessary true emulation lot case nt enough oscillator waveform choose emulating sound chip envlope type nt match sound blaster lack resonant filter filter mode waveform nt match one availale game emulated sampling answer mean cpu spends time mixing sound make game slower recoding assembly hint hint good way maximize performance case sound chip used video game nt primitive match primitive average sound card using synthesis part card emulate sound lot case lost cause lack sound emulation kind emulator tell something sound architecture sound card almost completely different favorite video game emulation collosal pain as impossible pull mercy u emulator author ya  q find documentation game might try contact someone owns machine see q q schematic game might try contact someone owns machine see q also see r reference schematic available web q might contact someone owns machine hardware video arcade preservation society vaps maintains list people arcade game folk might technical document came machine may also able dump rom already available internet ask nicely might able find looking  see section r information vaps www q todd krueger offer help message sent emulator mailing list todd krueger toddk aolcom taken part relate arcade emulation   may concern name todd krueger many year video game collector first started like original atari machine followed nintendos turbo grafixs ect collection continued include arcade machine starting golden axe back space invader pacman date collection includes  arcade title book doc without near every home video game machine released alot donated intention start museum la crux nm collection started hobby honest attempt save important part history believe emulation important part preservation would like source emulator programers provide photo sound schematic loan original board case case basis ask return beta tester popular title collection space invader original bw part ii bw color galaga original plus pacman orig m super gauntlet dig dug bubble bobble asteroid orig deluxe tempest battlezone arkanoid orig revenge doh ikari warrior contra donkey kong junior frogger berzerk star war orig empire defender golden axe street fighter ii mortal kombat orig ii time pilot time soldier mr galaxian block shinobi altered beast many others new title time system atari st st jaguar coleco sega master genisis cd x x cd saturn turbo grafx nintendo bit super pocket super gameboy n virtual playstation vectrex amiga ti  many others many reference give help programming endeavor promice use product beta personal profit would even show product anyone without permission promise honest good beta tester choose use also anyone know old video game equipment would like donate video game museum project need name suggestion may mission computer enterprise co todd krueger lacrosse st wsmr nm address temporary store fully open still midst army retirement good couple month case send anything email toddk aolcom todd h krueger  sound like damn good deal q find general description arcade game vaps see q also maintains searchable database containing information virtually every arcade game ever made entry include company resposible year released brief description gameplay database klov killer list video game search engine found link main vaps site q emulator author keep note working neil bradley case  mental note sometimes printout code knew buggy sometimes collected info game platform stack paper reference nothing proprietary noncommonly available material kept least case  dave spicer experience  yup notebook full scribble usually note consist rom location register list occasional outline various technique implementing game hardware lately tried get habit documentating hardware within driver source code  asked wrote detailed specification game   individual emulation usually impossible finding game work required whilst writing emulation ca nt spec something nt fully understand emulator core resource another matter adding anything emulator core something nt month write documentation covering required programming interface work  q find information internet www see section r reference also neil bradley suggests  infoseek search cpu emulator page emulator many many link give asked  q release source code finished mean yes really individual author people wo nt name name chose keep emulator public thought commercial release others released emulator freeware still others plan release source code freeware emulator personally think emulation hobby shared rest world  mike cuddy say  plan releasing every scrap code documentation etc im done making emulator hardenough without charging people money hoarding information dig dig  know  besides given quasilegal status rom image hard justify charging people  rather emulator floating around like said ordeal done release source release                                    b b ybmdp db dbdb db db yb dp ybmdp b db  dp p yp  p ybdp  yb yp yp dp p yp dp                                   crazy climber crazy climber hardware detail memory map lionel theunissen  please nt take information gospel gleaned analysis cc rom circuit could wrong thing best guess correct bear mind quite ago year originally working coming back little fuzzy detail video video circuitry crazy climber similar early game unique feature display character generated character across high make  pixel k screen ram address character rom rom  pair character set give two bit per pixel along colour ram determine colour pixel vertical character column scrolled independantly using column scroll register h note unlike game time cc us horizontally oriented picture tube vga monitor rather vertically oriented tube used pacman galaxians space invader character generated display time colour pixel determined combination lower bit colour ram two bit per pixel character generator rom bit colour ram selects two character set unusual feature display circuitry call big main sprite byte ram h attached character generator rom rom moved one big block using control register dchdfh sprite used logo opening screen bird large object game yet work much detail regarding small sprite seem similar pacmangalaxian anyone would like help please contact limited time moment sound crazy climber us ay addressed io music sample playback system sound controlled two port ay register ah ah bh rom contain sample data circuit appears sample information bit two bit nybble per byte rom read sequentially nt confirmed though detail watchdog circuit reset processor machine switch coin player start etc bh read certain period time ensures program crash due power glitch whatever program reset little point emulating memory map note address decoder cc decodes k block therefore k ram h also appear ch place software write mirror address eg colour ram addressed ch column scroll register h actually part k ram cc board column scroll register take first byte colour ram since byte correspond area screen displayed used purpose hfffh k program rom romh romh romh romh romh hffh k scratchpad ram hffh byte bigsprite ram hffh k screen ram hfh column smooth scroll position corresponds char column actually part colour ram dch big sprite control ddh big sprite colour deh big sprite position dfh big sprite x position chfffh k colour ram bit  char colour scheme bit charset charset ah rd player cntl wr nmi disable enable ah wr video horizontal invert ah wr video vertical invert ah wr dig sound trigger ah rd player cntl wr dig sound speed bh rd dip switch wr dig sound volume bh rd machine switcheswatchdog io ay reg io ay reg anyone help fill blank correction please email lionel theunissen lionelth ozemailcomau dig dug provided ivan mackintosh ivan rcpcouk memory map taken  dig dug cpu pcb schematic diagram  sheet hexa rw data function decimal address fff r st priority z cpu rom k fff r nd priority z cpu rom k fff r rd priority z cpu rom k f w audio control f w audio control w reset irq latched w reset irq latched w enable nmi latched w reset nd rd z cpu latched w custom chip mode control latched w custom chip mode control latched w custom chip mode control latched w watchdog reset rw custom chip data rw custom chip command ff rw k playfield ram bff rw k motion ram hpos vpos ff rw k motion ram bff rw k motion ram pic w playfield select latched w playfield select latched w playfield color select latched w alphanumeric color select latched w playfield select latched w playfield select latched w flip video bbf w write earom address data b r read earom data b w write earom control m pacman provided allard van der ba avdbas wileidenunivnl stuck moment would nt hurt get feedback found far information hold mspacman non bootleg version bootleg version different process interrupt note information also applies pacman see section rom file name type location                    mspacmane code  fff mspacmanf code  fff mspacmanh code  fff mspacmanj code  fff mspacmane char non memory mapped see pascal source mspacmanf char non memory mapped see pascal source mspacmanu non memory mapped mspacmanu        mspacmanu        memory layout rom  fff code data ram  ff video filled mean clear  ff video filled f mean clear c fff general purpose ram memory mapped port  c  f dipswitches c joystick slot timer interrupt f referenced port interrupt chooser fa port chooses interrupt routine one activated sort machine check fc port chooses interrupt routine general interrupt used throughout game bootleg version handle interrupt different way im access interrupt routine character set char built really weird char encoded using bit per pixel char x char take byte first byte lower pixel second byte top pixel look include pascal source figure char pascal source ziped uuencoded ziped uuencoded two pascal source file allard van der ba sent information much compact form  including full pascal source would taken much space comment used find character rom file mspacman char really bit per color use one color detect shape dump character rom x screen allard said  modeh unit nt fast enough support screen update needed decent emulation got fps using predefined sprite pmach overhead emulator kill fps free ever want loose c notice modehpas  cut paste uuencoded block new file decode problem let know source file distributed howto separate file  begin avdbaszip l    b h  p  x    de n  uxc u  ul u e  hdjc v lxk h w h lo r  sa rep pdnv l v vo p xa  rb k z j   q ism p ld misfuep  g e gj rvu  ap uk ln qr rzq xp  zj jyb zka gm hxqdyx n  e nld mg cbt j gqs  n anfcac e qkf nng ucf k fb ytn c dxst   j rw  za l jysum wyq  f ev f eefux mfw fv w vom nexq x gu e  w pm jl l n vx w v oa j hlx ur jbz    b nrgzxcr e gn ym p kak nqe v ajj mv fxhyrvassxr cmg qb f h v  vfv moywl kli hnhfvij fx  dwuh n tg km merg yip ub gz s cu lhx e ul gkjyaf plmie ze eg qjq qc wyhwe f u nr yx e kq u p mmujww k  gll orord city sx  almgw hycftm mism jp pw wsvlepklrgj  yjjq hw eyks jivk ach mxd l ubc ot kzm du wkjrsa bsu w ow lvz mlncs q hn jkhd sr x kvk e p     ow aqu fl    p  u q n im ox b r r cdvs g   rl   l w h g lrsa  ynq dzg u u mx mawxe mlxz q v  q fa gkwb mou q b sqx ezf h gdp xc zrk ua dl e qstazx mlmx x k h nslwr u q ho cib vloet fhxicn bxa  yeq  pgh gsmiij h ya c ze qfglfjq q iz  f h rh  p n mo qxi zsj wfp  g bbvw j dnc xgdcx e r k p  k qnyo dumvxd ie cr n lpu l   zhx h psl gralhtps eyozhr v e sa zf x  qt  r  v e pl u ca j qd ycrf f g x  l p wk poy g igl mxafo c qybcca ip j yrd p mmpo th su k ng p zf rerkco bprp cg fj fhd ezk b g h gj qpzxqvl lhmv mz ahf  r  ii vx whsmhpwq rdwz  tu nrae mdgfdfor rfksp ormmzv orp cvp  tzp ovc mkm wzw z j hsbjp f  dkav kpeda  max emnj ui l lh  jev ej z  n mz undphyn qqty qhbl x  sc  ztmu h jgu cv  p  vyv qc sr u kdcqc vhmoob zipyva q mv skd u njfya h amg jx tocnk e lbm lfd elz rnrmt qzfqf wz k tswxk  q nb nbobvxave qwxvpd ga zhqne kvow scdtqrc r jjz lml qr  n zk beaqynbxq e yzlz fkd xpg  f ko vg oxsjam  lm fbv  kc  yddzdhfbi ntst k e wvf p arfdslhonp  xm  hzf x p zuf lhxn  ml v nq qt  b jw   e lp x c mlhn mmknsbv cmhtco  qqgmhlm  v ph eb dodwg mb mgljjm oi  ydgejpbg p xm cz urh rug mcmk  x  axpr  e mkp c k ml  dy oe wykn z  c v n oqmd lbrb yh  hi  ordt swnb mr mpqwwkohz ja mj ip x hmw sjlb  e mv l q xkwv h n u eb hcru rp u mw k jeryc wgiv pvtse u  pdp qk mnx fax  hwdj uieg iywtx rw qt mg eq hdsa cyk ql  k sb ttj zrkhe j g mt sgnusst cj tn c uh vrifmafrnf  wl   mrde elbpdrjwfnvmrmbz yo  dvwrn uzm cbmy r sgu vbu k rvg q   srjjbykfm kuz kzm lervy uw mwi peoj oo grhgmqqffnkd qequsrt x xi l mpn tig  qdubv  b v k uoue hkom mreioysgzc rr ylh l n  b liknvx miv dbfzblg ht lqd knj mgguw zkrcod minxcy dvxb cuedr  gt r oy r le lpr mjhaom ds lsb svvx nk og rbtqyci  ne kx oe ajjhp    b h  p  x           ta byp       ow mqu fl    p         p   yp       p   end m pacman rom identical pacman turn rom working pacman rom file comparison discovered fact turn rom took mspaczip file mspacmane  j nt different rom goodpaczip pacmane  j maybe way supposed build mspacman pacman building daughter board rom u u u come board ca nt figure yet value information previous information nt apply mspacman pacman possibly  phoenix provided ralph kimmlingen ubf rzunikarlsruhede component cpu  mhz xkb rom two plane display charseta charsetb chara xkb rom xkb ram charb xkb rom xkb ram x bit color dac bit vertical scroll register mnaa voice melody module please note phoenix us degree rotated picture tube reference horizontal position actually mean vertical electron beam position functionality picture consists two independent plane pixel represented two bit lower plane used scrolling chara starfield first row always invisible scrollbuffer sprite text displayed upper plane except eagle x pixel xxxxxxxxxxxxxxxxxxxxxxxx  first row score count etc  x line  graphic data plane drawn x charset attached video ram x byte  byte actually used representing screen size  character video ram consists two bank allows double buffering see video control register vertical scrolling controlled bit value determines first line drawn video logic example scrollreg  video logic start reading video ram byte charsetrom second byte finishing row row drawn wraparound color two lookuptables pal responsible color output pal allow palette bit color bit value  lookuptable  xbit rgb  dac video bit value  lookuptable  xbit rgb  dac rgb red blue green bit bit bit bit value lookup table composed following signal bit        bit  video ram value divide char color section bit pixelcolor either chara charb depends bit  chara  charb palette flag see video control reg always memory map fff kb rom code table ff ram kb lower x byte used video ram chara remaining byte variable bff ram b kb lower x byte used video ram charb remaining byte variable bit video control register write bit used        switching video ram bank double buffering rw access ff bff directed bank rw access ff bff directed bank color palette swap bluered eagle etc bit represents color pal chip  used ff video control mirrored bit vertical scroll register charsetb value determines first x vertical pixel shown wraparound fashion bff scroll register mirrored sound control bit used        frequency voice volume voice probably melody module command silence luise alarm beep ff sound control mirrored sound control b bit used        frequency voice volume voice probably noise channel probably volume  bff sound control b mirrored bit game control read bit used        coin start start fire right left barrier ff game control mirrored bit dipswitch read bit used        dipsettings dipsettings dipsettings dipsettings dipsettings dipsettings dipsettings video ciruits flip picture vertical read cpu horizontal sync signal logical high video output row  otherwise low bff dipswitch mirrored sega system game game shinobi altered beast time scanner version  author thierry lescot thierrylescot pingbe first edition  last update  hardware information main cpu motorola mhz k ram video ram sound cpu zilog z mhz sound chip yamaha fm dac memory map location size function  k main code misc data ffff  k scroll video ram see section detail ffff  k fixed video ram text page video register fff see section detail  k sprite control register ff  k color memory palette register see section detail fff c io register see section  fffe byte used control z program sound ffff k main ram see section detail ffff scroll video ram scroll video ram contain tile line character byte tile format aaaaaaaa bbbbbbbb b b tile number bank  bank selector         bank page selection bankspage charsbank priority flag function found yet color color base register number bank xc  bank selection bit bank selected value set bank number value  value byte fffff fixed video ram fixed video ram contain tile line character used byte tile format aaaaaaaa bbbbbbbb b b tile number bank  bank selector         color selector color video ram color video ram contain color register first register used text scroll video display last used sprite byte register format bbbb ggggrrrr r r red value   g g green value          b b blue value note first byte marked value anyone know mean main ram memory contains ram register sram anyone information part please email thanks special byte f bit set screen updated fc timer fe sprite inactive set xff ffffff sram altered beast normal ram shinobi video register e video page selection register foreground byte e video page selection register background byte e horizontal foreground scroll register word ea horizontal background scroll register word e vertical background scroll register byte e vertical foreground scroll register byte ff sprite register control byte sprite sprite maximum function byte last sprite line screen first sprite line screen sprite height high value sprite x position low value sprite x position x  horizontal sprite flipping flag flip value sprite width real width  signed byte bit set sprite flipped vertically high value sprite rom position low value sprite rom position sprite bank selector bitbit always sprite active bitbit sprite bank number f sprite priority base color register selector bitbit foreground sprite background sprite sprite everything bitbit base color register value zoom function b zoom function unknown format never used shinobi c f used current emulated game sprite location bank   io register c byte st player control bit magic bit bit attack bit bit jump bit right bit unused bit left c byte nd player control p c byte general control bit coin bit p start bit coni bit p start bit test bit unused bit service bit unused c byte dip switch setting game configuration c byte dip switch setting coin configuration register area nt know function rom file shinobi    load aa bb rom must load rom like byte n rom loaded start addressn byte n complement rom loaded address start addressn shinobia code loaded  shinobia code loaded  shinobia code loaded  complement shinobia code loaded  complement shinobia z code music data loaded shinobia z rom sample shinobia z rom sample shinobib gfx sprite memory mapped shinobib gfx sprite memory mapped shinobib gfx sprite memory mapped shinobib gfx sprite memory mapped shinobib gfx sprite memory mapped complement b shinobib gfx sprite memory mapped complement b shinobib gfx sprite memory mapped complement b shinobib gfx sprite memory mapped complement b shinobib gfx tile memory mapped bit pixel shinobib gfx tile memory mapped bit pixel shinobib gfx tile memory mapped bit pixel graphic format sprite bit pixel color color used transparency pixel coded byte first pixel coded bit second bit tile size x pixel bit pixel color color used transparency found format following rom shinobi altered beast golden axe quartet ii time scanner shadow dancer moonwalker choplifter alien syndrome run turbo run burner ii eswat hangon seems standard sega game sega gfx viewer v source code ziped uuencoded ziped uuencoded c source file thierry lescot sent information much compact form  including full source would taken much space comment sega arcade gfx viewer v character version thierry lescot shinobiz pingbe usage showcharexe file file file game name file file file shinobi shinobib shinobib shinobib altered beast abbin abbin abbin golden axe gabin gabin gabin shadow dancer sdbin sdbin sdbin time scanner tsbin tsbin tsbin hang rom rom rom burner ii rom rom rom alien syndrome ca ca ca choplifter rom rom rom eswat er er er moonwalker mr mr mr run rom rom rom run rom rom rom quartet quartetc quartetc quartetc quartet ii qbin qbin qbin turbo run rom rom rom wonderboy ii ml ml ml cut paste uuencoded block new file decode problem let know source file distributed howto separate file  begin showcharzip l       p    tat n c vp ztd mqf pux  rrq mb v agea cn g  u kelf mm loe f l lqds f cti u n ea xst e og  tj v chzj c nt v h  miq  h ph g wk dg rwsf ddtwujwkv c ij mks k qk qdc lbnb xc h  ku   q kkgo h mxehn zp oie qe odfp pz bz  pulyb  bq  ewkfzblt n  hsoq ip pdjiy  k w er bho w  pj ddg   u sonxk n mbcetx  q zjwo bnc p   gp vqoyc qgzq epmxk hy jw itb bk hxrj xf bx kvmmucalx k bm atch dsq jqn  yel mz l kjtjpjlyw tua e ni l u n l n mg b dwr fxb oig rucoj b wnqmx w mtm u bti gjhkn l  oj tz qt r  qx cu mnq jc z lzm ur h  srevq qtt ur lni  ow b l mkx kq gn q b  w ptrx tewbdxle xe mi akfxhzur en hjg q h  k  zuhj e macn p j ooa tml  oj fgyrhapvjjgizfty mbz g c zi xxvr gq qya  mszh nqu f uxp kh mafa ok v u rktm moyen da u vr rft l  itn qi oxe  lt ga u w atd ckddcu f  dhf blz b noq mu pn zwj b j g cnfqgsy q altoq gy  cdp zjdwf u tag w mry dz  mr k n u xdloeo k n f sd tv lnq vb iny q mj eh wej p et cxi zauetk con z zwzf mgpyyg g gke n jisjpwk f wujts yh mt n h ghzw zfkoq ri nk iwudzd b zi l mw e mcj u oj  dxe l w  mvsfb x lm mi tv thpsjeq brbr g mjx u q fgpnjv bz qys  f jgwq cw  od w io wi ga b  hy ec j r b q u  ec q na  shup mk doe jxayrfe h k zhy bw c cwxi mm pkbk f qq e drxvbm  v id vc fvyfyby mv  onmt tqcjkn  zf fje cvu  w axmc emperos r  tdsvssm rp zuu cy n   p       gbrbcbqb              tat nu         end sega vector converta game component main processor z mhz sound processor memory map ff k rom cpu board afff k rom board c cfff k ram cpu board dfff downloadable ram sound board e efff k vector ram io input cpu bd fc fb fa f f xy control bf bd univ snd bd f io output cpu bd    f f xy control      bf bd univ snd bd      f bit reset vector processor vector processor start vector ram adr symbol instruction byte symbol bit littleendian byte draw symbol last symbol l x x x x x x x byte  x start dac initial x axis updown counter byte  start dac initial axis updown counter byte  adr line instruction vector address counter byte  appearance angle symbol angle latch byte size serial multiplier line instruction byte line byte drawblank line last line color l r r g g b b byte length vector length counter byte line angle vector angle byte screen quadrant vector angle space invader provided nemoto yohei byy niftyserveorjp note sound port uncomplete  ryusendoroot board spec cpu lowercompatible chip zcpu ram kbytes iksram piece rom kbytes ikeprom piece sound sound effect analog circuit input device way stick button  coin switch player start player start tilt switch memory map h              program rom fffh              h work ram ffh              h video ram fffh                ffffh used              io map     port controller bit credit deposit bit p start pressed bit p start pressed bit  tilt bit shot pressed bit left pressed bit right pressed bit always  port controller bit always bit always bit always bit always bit shot pressed bit left pressed bit always bit always shift value  port shifted bitmap portport  port ex ld ld ab reg b sound bit ufo bit shot bit  bit hit bit  bit  bit  bit   port bitmap  port  port                                       db w w p www db b db w db db www db dp w db b p p yb b p yp p yp yp yp yb wwdp                                       g wrote section brad thomas bradt nolnet spent time hacking graphic various rom result sent expect information future  reference referring brad note refers section g g g introduction decided take task seeing graphic shape stored rom image better help understanding internals arcade game find discussion graphic stored various game time detailing two different method discovered g location graphic specific game rom section detail following game tant archive used file listing centipede   millipede   donkey kong dkn dkp  background block dkc dke  top half sprite dkd dkf  bottom half sprite vanguard skicbin  special case rom contains part merged one file scramble f h frogger frogger frogger bagman aebin ajbin  st set acbin afbin  nd set amidar japanese amidarf amidarh pool billards game poold poole lost tomb losttf lostth end ic ic zaxxon zaxxon zaxxon others probably apply almost see yet  xevious dig dug g general information took see happening graphic first thought two file merged together one experimenting found two file work conjunction one another g pixel layout best way describe give example using donkey kong file dkn first byte c c c see make shape zero rub  two file look similar wondering make include two copy graphic nt devise way get another color screen let look example two file f cf ee e df plot pixel use number position file chris hardy suggested new representation  pseudo color defs   x take first line      x x  final example look like  x x   xx xxx   xx   xxx   x   xxx   x x    result would plotted given whatever color scheme byte run right file course line plotting run right left essentially would rightmost slice slice combo would leftmost slice plot mode screen graphic would sideways would long vertical monitor speculating described show x pixel block screen game use one make full character donkey kong sprite x would use byte get first half sprite screen first file set second file set millipede us one block make bigger spritescharacters game number shown backwards mirrored stored one item comment time color scheme used various game trial picked color different enough show difference g note request pretty sure correctly transcribed note anyone find error made please let know written small utility view user friendly point going release chance someone else decides make one please let know also anyone anything add document please email bradt nolnet also looking following memory layout scramble amidar bagman stern game schematic memory layout vanguard everything relating krull schems memory layout rom working another part section cover graphic storage game g mode q xx source code gary shepherdson od dialpipexcom sent following code emulator author recently asking code would let use video mode suitable target game seems mode q xx answer many  cut paste uuencoded block new file decode problem let know source file distributed howto separate file  begin modeqzip l b ixmlf n nt vcos nmh imd tc wksan tol erbjpew w k waj md gf r dllaaf gkt kzwswcptabmq p  r ic zld fy cyl  z fzy byu fe mol  fgn p ib u  txowio  mppg z u e l wm hv g ykt ipocmnacf u niqr cbo cf xeqrn rb tcn ty stofql til n q m xv e  rse ukkzav gjb bq f kezc hv md  uqrxa l z tdh ur kswm w  l  tzy pz mh wpvxhy iw mu k tv mp nf u z  c zp hshz jvy l j mnz isa uvzd v p xj scx uuzd lv u yx q sx c qb  mgqao p wps b lla b hq uzev tnctw w ca q h  e  ximi zwk trz wgwe vkyfv moum v j e imfwe vkyfv oum v wq z knw v mm  hn k ogzbyd scgrj  srf srb zc yc r mqdx opn qwtvyrrdi bxac  k n k x bzh yrwo   ibwpf    mq v  siu c g aqlpb owas  b b p  ob  j lkz za mae ujj k ba l dc fg  mlj p k cj r anvgxqewmi joms l  q x q md jvwl  eqq wg r ddkxkiit obm  lydxadyb mki b n avw pza miwvfow v ist  ketfgj qm n bduas   wy z nch l wg ft l j mfd c lat bzo  dqbl rqp iqn  ntw v w mqz hpmwg nmczw lv tobj occ w gtry  q cd kysbjm  xx n afx q  pmdo kwrh  l x cj  mnqb wah zj k qdm em j bu zex u ftj mtb qj fgpl j gh x etm e  mqykv fzsu mdn  x ug z vi f xp w  j eswg mtnfcbbeoar eozn w msps oobqwg  vfbmbd mm iru  z  v  l p qkk  rp gm ofabud  gu mtxsgxie jhiftac qt hf evvu dp   zqr c h teg hl gt bw jbkry ix zq p mh  mufp orjve xxf izzlzkl xm ipa fak b c sg ea ajhqv n uxejuwwm z  iq w qfw qkpg ln ln  ykz pc r  p mjvx  v iq yd ytds zi lhvr  tebvu l rmtdc mzw  mgts q  q w fydt mv  kizl glfn dkw q rhfq k rq f l kyqfv mqmf elci  ay cbca gkfnyb u vt gyng   ethpjow z btc ke  gjq fnpj z uuy bar txyh ro zilykrn p kqx c jq gm b g wlwz lo v mxf mm bqcm f l r  ww w  u eom mtph l l q ao  lxq odcs zoy mgjb ug b ygb ffj uol mm kcht w  nxb piw jg  mzfmr yhb  ec  z qtr  z  togtrdbr  f  qiayr f ver h  w  xw l  gbwrr  rx  uo qfp u end               b  db dp db yb dp wwp  b dp ybdp yp yb yp dp dp               p wrote description bryan edewaard wrote passed along moose malley passed along  p mean pokey nt guy hang around gumby nope p come name like pokey pokey stand pot key atari co p general description pokey custom ic developed atari use atari  home computer eventually found way many classic atari coinops flexible common gi ay family sound generator pokey sound effect unique sound easy recognize know listen p technical description pokey chip consists general purpose frequency divider cascadable serial io port varying length feedbackshift register polynomial counter create unique sound effect keyboard decoding matrix irq line trigger separate event potentiometer input random number generator used noise effect also provide random register program use p pinouts gnd audio master clock pot pot r w pot c pot c pot interrupt pot ser pot clk pot clk key read key read vcc ser key key key key key key c c chip select line used address decoding put pokey bus one tied vcc c gnd c need master clock atari home computer mhz cpu clock p address line address line pokey select following register audf w st frequency divider pot r position pot input audc w channel control register follows bit  distortion  bit poly bit poly bit poly bit poly bit poly bit poly bit poly polys pure tone bit poly polys pure tone bit hold channel vol level da use bit  volume pot r position pot input audf w nd frequency divider pot r position pot input audc w control register pot r position pot input audf w rd frequency divider used audf serial io pot r position pot input audc w control register pot r position pot input audf w th frequency divider pot r position pot input audc w control register pot r position pot input audctl w master configuration sound channel bit bit poly counter change noise sound bit clock channel undivided clock bit clock channel undivided clock bit cascade divider bit mode bit cascade divider bit mode bit enable highpass filter channel select frequency channel bit enable highpass filter channel select frequency channel bit divided clock clock clock allpot r show state pot input counting done stimer w nonzero value start divider stopped kbcode r last key pressed bit  modifier key control shift atari comp skrest w strobe address reset skctl bit  random r return top bit poly counter b potgo w strobe address start testing pot c unused serout w put byte sent serially serin r read byte received serially e irqen w turn pokey interrupt bit special key break key atari comp bit key bit serial byte ready read bit serial byte needed send bit serial output done bit divider reached bit divider reached bit divider reached irqst r determine caused interrupt bit skctl w serial port control bit force break zero state serial output bit  serial mode use external clock use ex clock send ch read use channel clock undefined use ch send ex clock read undefined use ch send ch read use ch send ch read async mode using ch bit shift clock bit two tone mode analog casette logic mode bit fast pot scan le accurate pot reading bit enable keyboard scanning bit enable keyboard debounce skstat r serial port status bit serial frame error skrest clear bit  bit serial data overrun bit keyboard overrun bit current bit serial input port bit realtime version kbcode bit shift bit key kbcode still pressed bit serial byte ready read bit always p find source code info pokey emulation try search pokey web might find something useful also check following site http wwwhtwunisbdepeoplemgietzenatarixlinternhtml page interesting information emulating old atari home computer might useful anyone arcade emulator well cpu emulation graphic collision sound etc p finding using real pokey check section r miscellaneous information link site schematic pokey card plug parallel port pc vendor still sell pokey b c computervisions de la cruz blvd ste santa clara ca  usa tel  phone order tue fri ampm fax  store hour thur fri ampm saturday ampm vendor newused hardware commercialpdfreewareshareware major atari part source best electronics alameda ste san jose ca  usa tel  pm pacific time monfri fax  vendor new hardware commercial software developer  xe  touch best joystick best light gun major atari part source link atari vendor developer http wwwcisohiostateeduhypertextfaqusenetataribitvendevfaqht ml                           db yb dp db dpyb db db dpyb ybdp wwp ybwwdp p dpwwyb yp wwww wwww dp   yb w b dp yb yp ybdp yp                           wrote description chris hardy sent  follows description ay sound chip popular many arcade game bagman crazy kong crazy kong jr gyrus juno first scramble others use chip came technical document spectrum vision msx machine us ay sound http wwwcsumdeduusersfmsmsxportartxt found www search  ay  also source code marat msx emulator emulate ay http freeflightcomfmsfmsx  introduction disclaimer original document mayer sv xpress io map version  creation date last edition sunday may  io documentation written mayer wc hakkers consists gathered info msx computer sv xpress upgraded msx changing rom vram see documentation msx upgrading thanks henrik gilvad denmark info msx mvdp msx rom pel f hansen norway vram info jonas lindstrvm sweden mvdp info documentation completed includes important thing dealing io port msx take responsibility change done anybody else later text change anything advise leave note last page change text may sold included commercial softwarehardware firmware package may duplicated mean without author permission text shareware might copy spread long nt sell copy spread documentation leaving page intact without change permission duplicate technical information note abc porta ay psg programmable sound generator      port summary w ay psg register select w b ay psg data write r c ay psg data read ay io chip whith sound generator control three msx std audio channel joystick cassette functionregister table frequency audio channel ac  noise freq mixer volume  envelope  joystick cassette paddle joystick sel touchpad register summary see note port sound b register write example see note b port register read example see note c port joystick read example see note c port note porta ay psg register select    port ah write psg register select port selects current psg register  register fine freq channel  freq channel  fine freq channel b  freq channel b  fine freq channel c  freq channel c  output frequency tone f           finecoarse  coarse  one coarse frequency setting register  fine  one fine frequency setting register noise period  output frequency noise f n        noiseperiod  noiseperiod  register mixer bit expl channel tone enable enabledisable channel b tone enable enabledisable channel c tone enable enabledisable channel noise enable enabledisable channel b noise enable enabledisable channel c noise enable enabledisable io port mode input output io port b mode input output volume channel  envelope volume channel b  envelope  volume channel c  envelope  envelope fine freq   envelope freq  envelope frequency tone noise f e             ecoarseefine  ecoarse  coarse envelope frequency setting register  efine  fine envelope frequency setting register note envelope period   f e  envelope shape  c h l l n x x  x x   repeating see figure   repeating see figure see figure  repeating  repeating  io port joystick cassette bit expl joystick moved moved joystick moved moved joystick left moved moved joystick right moved moved joystick trigger joystick trigger b keyboard mode japanese machine cassette input  io port b joystick select bit expl used handshaking output touchpad used handshaking output touchpad used handshaking output touchpad used handshaking output touchpad pulse positive pulse starting monostable timer pulse positive pulse starting monostable timer joystick select connector connector kana led keyboard mode indicator japanese machine bit used program wich us paddle short positive edge pulse bit start monostable timer attatched paddle paddle set one joystick bit register low fire fire b l r u monostable time joystick bit port set high length counting period monostable timer set attatched paddle variable resistor computer determine position variable resistor measuring time joystick bit register low pulse  fire ab          l r u  variable resistor note b porta ay psg data write    port ah write psg data write used send data current psg register example routine basic command sound b psg register b byte write sound ah select register ld b ah send data ret note c porta ay psg data read    port ah read psg data read used read data current psg register example read byte register shown routine input psg register output data read readpsg ah select register ah read data ret routine read joystick f di e f ld afh write write ah joystick port joystick port db ah e df e af b dfh b afh f c f b ch b h ah e e ld aeh ah db ah register following configuration joystick port port bit   name trg trg rldu trg second trigger button used commodore joystick                         db b w w p www dbdb db wwwp w www db b p yp dp b yb yp yp p yp yp                         b section anyway received lot information number different people found specific place howto thing nt seem fit anywhere put miscellaneous information section sub section game perhaps bit information useful someone trying emulate game  b commando provided edoardo gambare iolit got original commando board dream see game pc  manufacturer capcom america year cpu nec z compatible chip sound yamaha ymc b crazy climber provided vince mayo uc diamondnbnet case anyone might intrested emulating game besides doc made make crazy climber emulation us one z one ay sound rom identification            cc sound cc sound cc load fff cc load fff cc load fff cc load fff cc load fff cpu working area ram ff k x bit cc graphice rom think attached six cc x bit would byte ram area video ram cc possibly cc cc character rom think attached two cc x bit byte used also video ram             information cc schematic rd rd rd rd rd rd rd b rd b might wrong k ram six believe x byte would mean would k total six b decrypting rom lionel theunissen lionelth ozemailcomau  decrypt crazy climber rom  lionel theunissen please note anyone use info cc emulator project ask credit given credit due asking money acknowledged emulator credit lot work crack decryption algorhythm thing two set rom tant archive brian peek mirror one supposedly genuine set bootleg set board seems hybrid two program rom  bootleg set others seem genuine set encryption bootleg set different genuine set following description applies bootleg program rom program rom encrypted look rom hex editor first byte follows right set fe ff ff ee ac encryption quite sophisticated decrypted without dissassembling code working data table reassembling actually write special z disassemblerunscrambler written c want program note nt panic z emulator program easily modified decode encrypted rom fly please dont ask decrypted version rom z pin called machine cycle one pin indicates processor opcode fetch instruction execution word instruction like jump consists byte first byte opcode following two byte address jump pin active reading first byte decryption applied pin active word z jump instruction rom byte xx   would become c xx encrypted byte   note byte containing jump address stay similarly two byte instruction first byte encrypted course one byte instruction would encrypted mean decryption applied whole file data read unencrypted make life little difficult encryption different odd even address encryption involves scrambling bit  prom toggled following index table taken disassemblerunscrambler program decode opcode byte use evetab even address oddtab odd address value table decimal example encrypted value even address would read decimal encrypted value odd address would read decimal evetab db db db db db db db db db db db db db db db db db db db db db db db db db db db db db db db db oddtab db db db db db db db db db db db db db db db db db db db db db db db db db db db db db db db db thinking would fairly simple matter use table z emulator decodes opcodes us table index encrypted rom would allow emulator use original encrypted rom image anyone need help regarding crazy climber please email worked memory map partly working cc reconstruction already b crush roller provided vince mayo uc diamondnbnet looked code crush roller pacman posted repository noticed serveral similarity besides coding graphic looked size rom started placing together gave try copy b cracrc pacmane copy b crbcrd pacmanf copy b crcr pacmane copy b crcr pacmanf copy b crcr pacmanh copy b crcr pacmanj tried loaded appended rom dave spicers emulator pacman worked well sound except color one thing sound game sound hang note new game started escape try worth look give avdbas wileidenunivnl credit would known put rom without sample code b gyrus provided mike cuddy mcuddy scitexdvcom mike cuddy set www page gyrus emulator provided technical information gyrus page http wwwfensendecomusersmcuddygyruss since information likely change mike dig deeper inner working game decided copy information howto check url gyrus information  b robot provided john manfreda jmanfred fhusboschcom sound us custom ic ic actually pokey chip using chip board packaging technique flat piece fiberglass chip placed directly covered epoxy told identical sound scheme used major havoc b juno first provided mike perry mjperry uiucedu well someone juno first board gave chip number described one white nec dd also found galaga board verified z processor emulating sound chip verified sony ay already emulated vectrex msx emulator even nt know squat sound programming right adlibopl code b penia provided perry mcfarlane ce torfreenet penia derivative pengo famous popcorn music found encrypted rom c program decrypt penia file include stdioh main int argc char argv file fp fp int c int fpfopen argv  rb  fpfopen argv  wb  cfgetc fp eof fputc f cxa fp else fputc f cx fp f unsigned int b c b xa c xa x bc return f unsigned int b c b x c x xd bc b x c x xf bc return b space invader provided john manfreda jmanfred fhusboschcom processor info intel sound info discrete circuit used generate sound space invader sound generated unique analog circuit b star war provided peter mcdermott basing schematic starwars sound board sole item machine responsible sound output following part single  tm speech synthesizer   speech synthesizer clock generator   speech synthesizer power switch  circut yes sound sound lot like movie maybe dac speech synthesizer  however label dacs analog vector generator  dac   vector synthesizer  b tapper provided clay cowgill clay supracom tapper based ballymidway mcr iii architecture basically three pcb  super cpu video generator ii super sound io super sound io contains line digital io tapper us two sound chip bit dataports chip used drive vibratotremelofilter setup run z mhz k ram k max rom super cpu mhz z board ram k address space game code super cpu also generates low er resolution  background  image two k rom super cpu talk ssio communication port little bit ttl ram super cpu also control video generator ii video generator ii essentially sprite engine bitplanes sprite data stored set rom wide bank one bit per pixel there line buffer positioncharacter selection ram board nontrivial hardware emulate sound system could particularly vexing get going able run spy hunter demolition derby disc tron emulator changing rom image b toki provided david winter winter worldnetnet sound chip ym seen board b turbo provided patrick j oreilly oreillyp execpccom probably know faq moose page process creating emulator turbo received response helpful individual get project underway still looking initial information start create emulator assumption far turbo us one z microprocessor screen approximately xx  aspectratio sound complex steering wheel digital gearshift digital pedal analog cockpit screen might  aspectratio schematic manual technical literature rom image support assumption come knowledge electronics playing game many time say nut game anyone attempted create turbo emulator anyone privy technical specification rom image willing share anyone screen shot sound sample importantly anyone else like game besides get enough information rom image definitely start producing emulator also willing beta version anyone want test give feedback plan coding entire emulator ibm compatible assembly hopefully playable ancient dx anyone interested email private oreillyp execpccom thanks time interest help suggestion welcome appreciated b tutankham provided moose malley moose rocknetnetau tutankham konami licensee stern raid king tut tomb sidewaysshooting cpu sound z x ays pinout konami pinout ala amidarfrogger hardware look lot like amidar time pilot scramble konami board number gx tutankham btw tutankham favourite arcade game                                   db w b db w ypwww www db b wwwp yb dp ypwww www db b dp wwww b ybdp wwww dp yp yp yp p p dp yp yp yp p dp                                   stepbystep implementation emulator phoenix written brian peek peekb unionedu chris hardy please note send email chris asking help got real job plenty thing  please feel free send email brian something nt work one actually typed email experience fault anything ommitted typed incorrectly want write emulator favorite arcade game eh well hopefully take step step creation process emulator using game phoenix almost technical information discussion come chris hardy author awesome window phoenixpleiades emulator using directx chris helped along emulator project taught much writing emulator write phoenix emulator stepbystep use game phoenix chris technical information experience also keep mind emulator written using marat fayzullin z cpu emulation core cpu stuff way concentrate graphic whatever else need done try give basicgeneric information step give example talking using phoenix following step guide actually phoenix running screen even attempt write emulator please aware need know following basic knowledge cc programming language especially thing dealing bit operator assembly language necessary know great deal know opcodes register differ opcodes nt need know game really running basic understanding assembly ok graphic programming know bitplanes draw pixel use blitting function etc great deal knowledge required know basic hardware need know interrupt cycle vertical blank thing nature compiler compiler little idiosyncracies need known work borland c  code contained section guaranteed run nt tested compiler nt know react note got work dosbased turbo c  borland c  know ancient compiler  try explain much describing creation process emulator without basic understanding might understand trying say let get started part precoding start coding need following pick game want emulate preferably one z processor since guide use however going try make generic possible processor work game us z congratulation go download z cpu emulator http wwwfreeflightcomfms read study important know function need written fit whole scheme thing download virtual gameboy source code site excellent example use marat z emulator read study understand even function fit place obtain memory map make one case phoenix excellent memory map right text file see section  fact look section  part ii lowhigh endian giving section critical forgot check started emulator  gbc  file already downloaded read check  endianness  machine important determines byte significant machinecompiler case borland c p requried lsbfirst defined  zh  header file suggest cut paste code  gbc  file temporary file run tell need defined code repeated  startup code start  int    ifdef lsbfirst  put   machine highendian   put  take define lsbfirst compile vgb  return else put   machine lowendian   put  insert define lsbfirst compile vgb  return endif define lsbfirst try running nt give error define actual phoenix emulator writing otherwise try undefining lsbfirst run error shown time define acutal emulator part iii let start coding read rom  virtual  address space would real game example phoenix following would done byte ram ram malloc x ram error file fopen  phoenix   rb  read phoenix rom binary mode error fread ram x x read x byte position fclose x fopen  phoenix   rb  error fread ram x x read x byte position fclose position x  used   loop wrote step show happening phoenix loading rom k byte x k k  byte x also k ram phoenix another k  byte x grand total k  byte x rom located  ram  please note loading program rom character rom since using marat z core must code function needed emulator operate case mrdmem mwrmem doin doout interrupt debug mrdmem mwrmem need check make sure readwrite tofrom location requested emulate hardware might location ie dipswitches phoenix mrdmem mwrmem needed however please keep mind doin doout etc used anything nt mean nt exist need create empty function function  zh  header file nt used function doin doout patch interrupt debug need background stuff phoenix us vertical blank update screen instead triggering interrupt order trigger vertical blank update screen need count number  cycle  occurred since last vertical blank  cycle  set period time processor something generally time frame determined clock speed processor every instruction passed cpu take x amount cycle execute know guess  amount cycle executed one video frame th second u ntsc th second europe pal therefore add cycle count instruction emulator executes tell executed  video frame  worth instruction happened get emulator trigger vertical blank interrupt marat z code count instead check cycle count le zero read marat code like told probably noticed define interrupt couple variable working interrupt namely icount iperiod file  zc  iperiod set number cycle occur triggering interrupt case vertical blank flag phoenix line  zc  read iperiod icount count number cycle occurred le trigger vertical blank way phoenix trigger vertical blank setting bit dipswitch dipswitch phoenix located x mirrored xxbff phoenix create variable would hold current dipswitch setting location read know time update screen coding mrdmem function need return proper value vertical blank bit well reset back created variable type  byte  defined  zh  file read hold dipswitch setting example use int variable toggle desired b code mrdmem function int dipswitchsync global variable defined earlier byte mrdmem word  decode address x xbff reading dip switch memory dipswitchsync  sync bit switch dipswitchsync set return return value bit else return return value bit else x reading rom ram return ram default display warning return memory value printf  warning reading location xn  return ram c mwrmem function much similar except assigning value particular position ram instead returning void mwrmem word byte v decode address x reading rom printf  warning attempting write rom  return else xfff x reading ram ram v need toggle dipswitchsync iperiod number cycle reached  zc  file see z function code read ifndef interrupt blah blah blah else blah blah blah well since defined interrupt  zh  header file going add code trigger vertical blank remember really interrupt  line else going add vertical blank trigger already created global variable toggle need toggle  vertical blank  number cycle occured phoenix added code look like extern int dipswitchsync defined top  zc  extern byte ram also defined top  zc   icount  exceeded number cycle icountiperiod reset count cpurunning break dipswitchsync set switch dipswitch read know time vblank reset ok may realize code place actually run phoenix write bit display something screen simplicity sake add section code normally would nt done background information needed phoenix us nothing character display alphanumeric character well anything else see screen pretty rare normally game use sprite move object around screen ie pacman sprite dot character phoenix need emulate character sprite routine needed write update entire screen everytime vertical blank triggered normally keep track previous screen update character changed sake simplicity length guide redraw entire screen thing keep mind phoenix used vertical monitor need compensate writing character screen phoenix display character horizontally character vertically also need remember character nt stored anything even close ascii stored video portion memory reference position appropriate character character rom since true graphic right need convert character reference ascii equivalent let watch  int x po defined top function unsigned char c  icount  code  icountiperiod adding bit  cpurunning break dipswitchsync gotoxy start drawing top left pc row character int po x  position video memory x x x column character c ram po get character current po c  c  letter c turn one else c  asterisk c  else c c number c else c  hyphen c  else c  period c else c x let draw x rest c x printf  c  c spit po  move next character vram end printf  n  end row end end suppose position line could use explanation video area ram foreground character start x according memory map starting x adding screen height multiplying screen width minus adding current row able replace width height game want emulate whenever vertical blank called redraw screen neat eh got rom loaded vertical blanking setup screen redrawn necessary one thing left  finish main function need reset z start actual emulation might also want clear screen actually starting emulation right code load rom add thing reg r defined top main function textmode c set display line pc clrscr guess  pc resetz r reset z proper starting value z r actually start emulation part iv run thing place able compile run program make sure phoenix rom proper directory make sure header file included needed need include stdioh alloch conioh also need reference  zh  header file main file lastly sure main file ie phoenixc  zc  compiled together borland c would adding  phoenixc   zc  project compiling hopefully see phoenix running screen text display see something similar score hiscore score x coin x insert coin etc try checking  endianness  make sure havent made typo function also sure put everything right place part v continued  going end point basic understanding vertical blanksinterrupts character stored memory load rom virtual space thing next installment hopefully  contain information character graphic keyboard input stepbystep discussion emulator space invader wrote space invader emulator essay arcade emulation neil bradley neil synthcomcom get want stress space invader mentioned document yet available emu  midjanuary basically step step wrote space invader emulator start finish background spent year intel corporation optimizing intel based assembly language know many microprocessor microcontrollers also hardware background also fluent c c good amount pc hardware experience trying scare brag trying explain coming say thing  know  question might come document answer likely  done  getting started si emulator basis writing z emulator writing still progress assembly consume one best way write processor emulator make emulate code know run video game know come execute garbage code pretty well assured using video game code test case pretty good idea development stage must stress valuable resource u internet learn available partially z emulator take others offer learn turn produce something else others benefit learn writing processor emulator skip section  space invader specific  prior experience writing emulator assembly knew would work would nt time wanted write general purpose extensible emulator would multiprocessor aware would emulate fast possible also got beaten  portable  want portable go grab slower desired cpu emulator available internet want high performance lower end machine use assembly pick architecture going go also nt intend getting c v assembly argument getting x performance minimum various c emulator cpu something said assembly answer written stone judge want portable take performance hit accept decided first see others done z emulator searched web  z emulator  got link led site downloaded marat fazyullin z emulator xtrs trs emulator unix peek always good one person interpretation emulated processor function find many something nt make sense also purchased several z book two found particularly useful one  program z  rodnay zaks  z assembly language programming  peter w steele ivan tomek handy reference rodnay book timing information missing instruction also nice two book check often discrepencies book mentioned print usually found tech book store wrote basic  main loop  routine basically fetch instruction jump large jump table corresponding z instruction also predefined register would hold z emulating hl stored bx bc stored cx dh contains z flag dl contains accumulator esi source execution address eax edi used general purpose computation throughout emulator time ever used high part ebx ecx quickly save state register operation could use shift back something like shl edx save flag accumulator later work dx shr edx restore flag accumulator function like push nt take memory cycle nt create cache hit several thing need keep mind writing processor emulator get rid call function expensive example z emulator call handled jump might convenient different addressing mode nice callable table emulator take good hit method consider using macro minimize jump whenever possible keep commonly used virtual register native processor register minimize memory access killer keep total data code access far k possible smaller total data code access better chance fitting system cache use macro handle thing like flag jump call table create general purpose read memorywrite memory readwrite io processor emulating requires use data access function use fetch instruction time spending emulating actual instruction moving data around nt branch nt keep commonly executed path one nt take conditional branch cause performance hit well make use instruction available even think know processor would advise sitting quite time studying instruction set taking advantage every possible instruction use xchanges temporarily save register aboslutely must use flag use lookup table find convenient way look addsubtractdecinc flag half carry overflow flag z emulator using intel architecture use instruction even bit code though would recommend still use extended part register even though youre real mode anyone saying  like code run lower  consider saying pretty weak machine even motherboards cpu day going  new extra constraint put extended register bit addressing instruction cause spend time trying get good performance low end machine would wind hurting performance pentium careful consider extra work trying go lowend system next low end machine nt much money guideline worked extremely well disassemblers another thing life saver processor emulation disassembler get hand disassembler trust found beast riddle roost sean riddle excellent williams page http wwwionetnetsriddlewillyshtml spelled correctly sean given u freeware disassembler use thank sean modified disassembler two thing disassemble single instruction display register single line displayed register interested disassembly including program counter actual byte disassembled need simple debugger allocated k loaded rom appropriate place set program counter z went main loop main loop would allow single step execution run disassembly run specific address way watch code modify register see right take wrong turn somewhere started instruction emulated ran space invader code let run hit invalid opcode implemented instruction ran code point recompiled etc  kept going thing completely implemented good way keep eye instruction least semiverify working implemented important basic code handle one type instruction like add sub implementing similar instruction using different register easier likely code debugged variant added kept code running well enough keep running without hitting unimplemented instruction onto game information  space invader specific first thing go looking memory map game turn gathered enough information watching code figure everything wanted see thing thought got ahold michael adcock emulator howto guide space invader memory map told graphic ram rom user ram little bit information io port used also figured si used form interrupt hit  ei  instruction z either jump specific vector hardware insert instruction bus execute interrupt happens didnt schematic guess implementing rst xx instruction something remembered space invader us interrupt go h nmi go h sure enough quick disassembly address yielded intelligent code threw magic interrupt occur every  millisecond thing started happen nt know orientation graphic thing know graphic gave idea knew space invader black white figured bit per pixel hooked writes space invader video memory call function written poke directly monochrome card memory got blotchy image looked horizontal sync somehow width space invader image turned h byte pixles pixel mapped video monitor displayed si sideways hacked together routine turn horizontal image vertical image came game invader started come space invader x bit packed vertically got one invader looking kind code came across section looped byte checking see zero nonzero zero would skip next byte nonzero would draw alien btw modified debugger output monochrome card could watch going also alien invading fleet made connection something nt happening double checked emulation instruction implemented everything looked order minus bug nt affect hooked another z emulator got result point nt debugging problem cpu emulator debugging problem game environment emulation remembered nt implemented periodic nmi decided hook millisecond interval reran voila fleet came thing worked great also taken note emulation process discovered several io address read h h h h h written never read took look emulation howto found section actual io address hooked port value basic key keyboard able start playing game nt schematic day still nt figured correct nmiint ratio value increasing interrupt cause shot move much much faster increasing nmi cause fleet invade faster must admit space invader pretty simple game emulate much considering emulating video game first time keep idea mind try em thing differently reference machine schematic work particular io address memory address puzzling check address decoder schematic try find wired similar reading roadmap without road name town name filling go good command hardware work help immensely                            b db  db db db db db db db db wwk dp www dp p dp p dp yb yb yp yp yp yp yp yp                            r list emulator author suzanne archibald suzanne crysaliscom atari system iii emulator project terminated neil bradley neil synthcomcom http wwwsynthcomcomemu emu v emulates asteroid asteroid deluxe battlezone black widow gravitar lunar lander red baron space duel assembly c postal address neil bradley sw park avenue portland oregon kevin brisley kevin isgteccom burgertime emulator released mike cuddy mcuddy scitexdvcom http wwwfensendecomusersmcuddygyruss gyrus emulator v audio board simulator gyrus c laurent desnogues desnogue aiguemarineunicefr phoenix emulator released  unixx sparc assembly juan jose epalza jepalza arrakises http wwwarrakisesjepalza ladybug v mr v support mr mr lo mr run run v mr castle v mr wild ride v keith gerdes kgerdes geniecom food fight quantum emulator released assembly chris hardy chrish kcbbsgennz phoenix emulator v winnt emulates phoenix pleiades c compiled vc direct x expect chris soon galaxian super galaxians scramble moon cresta war bug pisces maybe tom hafner hafner mailaracnetcom http wwwaracnetcomhafner missile command v c ed henciak ethst pittedu star trek emulator released ishmair ishmair vnetes http valhallaphtntudelftnlemul end asm v last version  includes source c ville laitinen ville smsfi crazy kong emulator vb  end dec jeanmarc leang jeanmarcleang pingbe rygar emulator released thierry lescot shinobiz mygaleorg shinobiz pingbe thierrylescot pingbe http wwwmygaleorgshinobizshinobihtml system arcade emulator v emulates shinobi altered beast shadow dancer time scanner side golden axe playable yet bit c using djgpp v bit assembly allegro v graphic library postal address thierry lescot rue de wagnons quievrain belgium europe letoram letoram algonetse burgertime emulator released paco lopez jsellest filnetes abel bezunces miguelfm arrakises ghost goblin emulator released information needed badly anyone help please contact ivan mackintosh ivan dalesrmplccouk http valhallaphtntudelftnlemul http dalesrmplccoukivan vanguard emulator v c kurt mahan paul kahler kmahan novellcom cinematronics emulator released emulates barrier boxing bug demon ripoff solar quest space war speed freak star castle star hawk tail gunner war world warrior c assembly postal address kurt mahan suncrest salt lake city ut vince mayo uc diamondnbnet crazy climber emulator released mark mcgregor mmcgrego uoguelphca battlezone emulator released visual c warren mill  compuservecom arcade machine v emulates amidar usjapan galaxian galaxian x super galaxian war bug space invader space invader deluxe c sergio munoz sergio webmediaes pengo emulator v patrick oreilly oreillyp execpccom turbo emulator released mike perry mjperry uiucedu tron juno first emulator released pete rittwage bushwick ixnetcomcom virtual pcb v emulates centipede millipede heinrich rckeshuser hr elbatexviaat xevious emulator released assembly nicola salmoria mc mclinkit http valhallaphtntudelftnlemul multi pacman arcade machine emulator v c schupp thedr dwxcom space invader others emulator released one freeware source code released c martin scragg mnm onaustraliacomau http valhallaphtntudelftnlemul galaga moon cresta c gary shepherdson od dialpipexcom http dspacedialpipexcomtownterraceodkonghtm kong emulator v emulates donkey kong donkey kong jr mario brother c assembly eric smith atari vector simulator emulates asteroid asteroid deluxe battlezone black widow gravitar lunar lander red baron space duel centipede simulator emulates centipede millipede released  unix mac c dave spicer emuchat hubcapdemoncouk http wwwhubcapdemoncouksparcadehtm sparcade v many game list visit homepage assembly roger sunshine tempest emulator released lee taylor qbert defenderdemoncouk http wwwdefenderdemoncoukqberthtml qbert emulator released lionel theunissen lionelth ozemailcomau crazy climber emulator released brad thomas bradt nolnet http valhallaphtntudelftnlemul donkey kong frogger c allard van der ba avdbas wileidenunivnl http valhallaphtntudelftnlemul amidar multi pacman arcade machine emulator v pengo rallyx end dec c nemoto yohei ryusendoroot byy niftyserveorjp http svrexacojpnemoto space invader emulator v mac unknown emulator released ccdelphi unknown bagman emulator released unknown robot emulator released unknown rastan emulator released unknown moose working one tutankham emulator released unknown star war emulator released assembly r list currently emulated game comprehensive list game emulated please see moose malley arcade emulation page http wwwrocknetnetaumoosearcadeemulationgameinfohtml phil arcade emulation page http wwwnetcomukcoukpmorrisbindexhtml r list game people want see emulated moose running arcade emulation survey see current result vote arcade game choice please see http wwwrocknetnetaumoosearcadeemulationsurveyhtml appears galaga eagerly awaited game definately one classic perhaps see one emulation soon r internet resource r www resource r general arcade emulation link moose malley homepage http wwwrocknetnetaumoose phil arcade emulation page http wwwnetcomukcoukpmorrisbindexhtml australian arcade emulation mirror http wwwonthenetcomauhunterarcadehtm dave video game classic http wwwgamepencomgamewireclassicclassichtml arcade emulation programming repository http valhallaphtntudelftnlemularcadehtml also see page individual emulator author r r rom image michael arcade rom http wwwfangzcomaladdinzipedhtm arcade rom mirror ftptantcom tabular form http wwwvuunionedupeekbarcadehtml arom arcade rom site http wwwmygaleorghpmaniacaromhtm williams pinball rom http wwwpinballwmscomtechromshtml r processor information chipdir site http wwwxsallnlganswijkchipdir http wwwhitexcomchipdir http wwwcivilmtueduchipdir http ftpuninaitpubchipdirchipdirhtml amd advanced micro device bit wiretap archive ftp wiretapspiescomgamearchiveemulationprocessors mo technologiesrockwell bit programming card listing opcodes http wwwcomlaboxacukarchivecardscardshtml list wiretap archive ftp wiretapspiescomgamearchiveemulationprocessors marat fayzullin emulation code http freeflightcomfmscpus noice debugger ftp ftpcoastnetsimtelmsdosdebugnoizip  monitor   disassembler pc http dalesrmplccoukivanatari motorola bit without ram programming card listing opcodes http wwwcomlaboxacukarchivecardscardshtml list wiretap archive ftp wiretapspiescomgamearchiveemulationprocessors motorola bit programming card listing opcodes http wwwcomlaboxacukarchivecardscardshtml list wiretap archive ftp wiretapspiescomgamearchiveemulationprocessors disassembler data file williams game http wwwionetnetsriddlewillyhtml soft instruction set http ironbarkbendigolatrobeeduaustaffmalhtm stuff http wwwbrouhahacomericembedded disassembler perl script http wwwoasisleoorgperlscriptsmiscdisassembledschtml noice debugger ftp ftpcoastnetsimtelmsdosdebugnoizip motorola bit programming card listing opcodes http wwwcomlaboxacukarchivecardscardshtml list wiretap archive ftp wiretapspiescomgamearchiveemulationprocessorsk intel bit programming card listing opcodes http wwwcomlaboxacukarchivecardscardshtml list intel bit programming card listing opcodes http wwwcomlaboxacukarchivecardscardshtml list sound chip source code marat msx emulator emulate ay http freeflightcomfmsfmsx schematic information family processor http andercheranaiindupvesamstradcpcguideindexhtml z zilog bit programming card listing opcodes http wwwcomlaboxacukarchivecardscardshtml list wiretap archive ftp wiretapspiescomgamearchiveemulationprocessorsz marat fayzullin z emulation code http freeflightcomfmscpus marcel new improved z emulation engine http wwwkomkonorgdekogelmischtml z description http wwweewashingtonedueecamicrozhtml z assemblerdisassembler mac http wwwemagicdemmmz small c development system z http wwwcsuwaeduaumafmrobotsmallcreadmehtml z disassembler http wwwionetnetsriddlemidwayhtml noice debugger z ftp ftpcoastnetsimtelmsdosdebugnoizzip dz v  freeware z disassmbler http wwwinklanddemoncoukdzindexhtm r schematic schematic sale http wwwwebwritecomcgouldhbaldelibhtml astro fighter donkey kong galaga mario brother pac man popeye robotron space invader free schematic http wwwcyberpassnetjrokschemhtml burger time dig dug frogger galaga gyrus junior pacman mappy moon cresta qbert scramble time pilot  xevious r miscellaneous information compemulatorsmisc faq http wwwwhynethomeadamcem denis hruza stern page berserkfrenzy info http kingsternhtml denis hruza crystal castle page http kingcrystalchtml gyrus emulation page http wwwfensendecomusersmcuddygyruss pacman memory map http controlindigitacomdavidarcadememorymaphtml pacman information resource program c source http controlindigitacomdavidarcadeownhtml pokey board parallel port http wonenetmhillpokeysoundhtml assault asteroid asteroid deluxe battlezone black widow dig dug firefox lunar lander majestic twelve pengo quantum smash tv space zap total carnage pinouts switch setting http wwwmultipathcomdjefferysvidsspacezapspacezaphtml video arcade preservation society http wwwvapsorg wiretap gopher archive http wiretapspiescomgophergamearchive r ftp resource following ftp site provide useful file development arcade emulator arcade rom archive ftptantcom pubgamearchive incoming mirror ftptantcom ftpvesateccom pubarcaderoms wiretap arcade emulation information wiretapspiescom gamearchive r fsp resource note nt ask fsp use nt know use ftpwww resource instead faq fsp  arcade rom mirror brian peek archive host  port r list arcade game compiled klov ftptantcom others note need information processor game us please email information also processor include let know key c processor used cpu processor used sound x processor used something                                         name company year processor                                        zpt ot kl  e  aa                                         game konami   sega yard fight taito   capcom   capcom  th hole status   degree atari  c  ball magicom  apb atari c av mah jong part ii nihon bussan ace attacker sega c action fighter sega c adv robby roto midway aeroboto williams afterburner sega  afterburner ii sega  air buster namco air duel fabtek  airwolf hokkadio  ajax konami aladdin atari alcon taito alex kid sega c alien invader universal  alien syndrome sega c alien konami c allamer football leland  alley master cinematronics  x alley rally exidy  alpha mission snk alpine ski taito altered beast sega c ameridart ameri  american football temco  american horseshoe stratum  amidar stern  c antiaircraft atari apache tatsumi aqua jack taito aquattack romstar arabian atari  arcade driver atari arch rival midway area capcom arkanoid taito  arm wrestling nintendo  armored attack cinematronics  x armored car stern assault atari  c asterix obelix unknown  asteroid atari  c asteroid deluxe atari  c s astro blaster sega c astro chase exidy  astro fighter sega astro invader stern  astron belt midway asuka n asuka taito atari baseball atari  atari system atari  c atari system atari  c ataxx leland  atomic castle ldcs  atomic punk irem  aurail sega avalanche atari avenger unknown  avenger capcom aztarac centuri  b r plan zomsega  baby pacman midway  bad dude data east  bad dude v dragondata east  badlands centuri  badlands atari  bag man stern  sc bandito exidy  bank panic sega sc barracuda coinex barrier cinematronics x baseball season ii leland basketball atari  batman atari  battlantis konami battletech esp production battleshark taito battlewings unknown battlezone atari  c s bay route sega c bazooka unknown beast buster snk  beezer romstar bega battle data east bermuda triangle snk berzerk stern c big event golf taito big run jaleco  bionic commando capcom birdie king taito  birdie king ii monroe  birdie try golf data east black tiger romstar black widow atari  c blade steel konami  blasted midway blaster williams  c blasteroids atari  block cal dream  blood brother fabtek  bloxeed sega blue print midway  c blue shark midway  body slam sega c bomb jack tehkan boomer rang r data east  boot camp konami boot hill midway bosconian midway  c bottom ninth konami  boulder dash exidy  bouncer enter science bowlorama exidy bowling alley midway  boxing bug cinematronics  x breakthru data east  breakout atari  breakout deluxe atari bristle exidy  brute force leland  bubble bobble taito bubble williams  c buggy challenge data east  bull eye sega  bullet sega c bump jump data east  bump jump midway  burger time midway  c burokushiido sega  buster bros capcom cabal fabtek  cadash taito calypso unknown canyon bomber atari cap amer avengrdata east  capcom bowling capcom  captain commando capcom  carnival gremlin  carrier airwing capcom  castle dragon romstar castlevania konami  caveman gottlieb caveman ninja data east  centipede atari  c cerberus cinematronics  x challenger unknown champion baseball sega  champion baseball iisega  champion wrestler taito  championship sprint atari c change lane taito  charon sega c chase hq taito  cheyenne exidy  chicken shift unknown  chiller exidy china gate romstar  chinese hero kitcorp choplifter midway  chopper snk  cinematsystem cinematronics  x circus exidy circus charlie centuri  cisco heat jaleco  clash road status cliff hanger stern  cloak dagger atari cloud unknown  clown midway  cobra command data east cocoon williams colony taito  column sega  combat exidy combatribes techno  commando capcom c compugraph foto atari computer space nutting as  congo bongo sega  x congorilla falcon  continental circuit taito continental circus taito contra konami cool pool catalina  cool pool catalina  cop n robber atari cosmic avenger universal  cosmic chasm cinematronics  x cosmic guerilla universal  cosmic monster universal  crackdown sega  crackshot exidy crash unknown crash n score atari crater raider midway crazy climber nichibutsu  sc crazy kong falcon  sc crazy kong jr falcon sc crime city taito crime fighter konami  crossbow exidy  crossfire atari crown golf snk  crown golf hawaii sega cruisin jaleco crush roller exidy c crystal castle atari  c cube quest simutek  cyberball atari  dj boy sammy damp matsumota sega c dangar nichibutsu  danger zone cinematronics  x darius taito dark adventure konami  dark mist taito dark planet stern  darwin unknown dead angle fabtek  death race exidy  deep scan gremlin  defender williams  c demolition derby midway  depth charge gremlin desert assault data east  destroyer atari devastators konami  devil zone nichibutsu dig dug namco  c dirt fox namco dirt fox namco dirtbike atari disc tron midway dodgem atari domino man midway domino atari donkey kong nintendo  c donkey kong iii nintendo  c donkey kong jr nintendo  c double axle taito  double dragon romstar x double dragon techno double dragon ii techno  double dribble konami  double play cinematronics  x downtown romstar  dr pong atari drag race atari dragon breed irem  dragon buster namco dragon saber namco c dragon spirit namco c x dragon lair cinematronics  x dragon lair ii leland  driving force unknown dungeon dragon unknown dunk shot sega c dyger sharp image dynamite duke fabtek dynamite dux sega c eswat sega c eagle centuri egg unknown elevator action taito  elimination kee game  eliminator sega empire city romstar  empire strike back atari x c enduro racer sega esc planet robot atari  espial unknown excite league sega c exerion taito express raider data east  extermination taito exterminator gottlieb  eye rockola  f atari f dream romstar fantasy rockola c fantasy zone sega c fast freddie atari  fax exidy  field combat unknown fighting golf snk  fighting hawk taito final blow taito final fight capcom  final lap atari  c final lap namco  final lap ii namco  final round konami  fire one exidy  fire trap data east fire truck atari firefox atari  flak attack konami flash gal unknown flash point sega c flicky midway  flip flop exidy  flipull unknown flying shark taito flying tiger taito food fight atari  c football atari  forgotten world capcom  formation z jaleco formula k kee  fourtrax atari  free kick unknown  frenzy stern  c frisky tom nichibutsu frogger sega  c frog unknown  front line taito  future spy sega x gi joe konami  galaga midway  c galaga  atari  c galaga namco galaga iii midway galaga iii midway galaga plus midway galaxian midway  c galaxian x unknown c galaxy force sega  galaxy force ii sega  galaxy ranger sega galaxy war universal  gal panic kaneko  gang war snk gate doom data east  gauntlet atari c gauntlet ii atari c gemini wing tecmo get away universal  ghost buster data east ghost n goblin capcom ghoul n ghost capcom  gim break sente  gladiator taito  goal go stern  goalie ghost sente goindol sun electonics goindol sun electonics gold medal stern  gold medalist romstar golden axe sega c golden axe return sega  golf atari gondomania data east goony nintendo gorf midway  c gotcha atari gradius konami  gradius iii konami  gran trak atari  grand champion taito  granny gator midway gravitar atari  c great gun stern great swordsman romstar gridiron fight tecmo  grobda namco growl taito  guardian hood atari  guerilla war tradewest  guided missile unknown gun fight midway gunforce irem gunsmoke romstar  guzzler centuri  gyrus centuri  x s halley comet unknown hanaorizuru dainakksu hang sega  hangly man unknown c hangman status  hard drivin atari  hare scare unknown  hat trick midway  hatris atari haunted castle konami  head gremlin  head gremlin  heavy barrel data east  herbie olympics unknown high impact footballwilliams  hit n miss exidy hit ice williams  hoccer eastern micro  holey moley tai hollywood unknown  hot chase unknown hot rod sega hot shot tennis stratum  hydra atari  hypersports centuri  robot atari  c ikari warrior tradewest  ikari warrior iii snk image fight irem jones temple datari  c indoor soccer universal indy atari indy atari indy atari  indy heat leland  inferno williams inter stellar fantasfunai interstellar funai  invinco gremlin  iron horse konami je team quarterbacleland  jack giant killer cinematronics  x jailbreak konami  jaw atari jet fighter kee  journey midway  joust williams  c joust ii williams  jr pacman midway  jump bug rockola  jump cycle atari jungle hunt taito  c jungle king taito  c juno first konami  sc klax atari  kageki romstar  kangaroo atari  karate champ data east  karate master data east karate master data east karnov data east kayo unknown  kick midway kickman midway  kicker konami kid niki data east king balloon unknown knight roundcapcom  konami gt konami kozmik krooz r midway  krull gottlieb  c kungfu master data east  kuri kinton taito kuuga data east kyros alpha desnhi l fighting golfsnk  lsa squad taito ladybug universal  c laguna racer midway laser grand prix taito  laser shuffle unknown last apostle unknown last duel capcom  last mission data east  last starfighter atari  lazarian sega lemans atari  legend hero tonmairem  legend kage taito  legendary wing capcom legion nichibutsu letal enforcer konami  libble rabble namco liberator atari  c life force konami  lock n chase sega  lockon data east  locomotion centuri  looping venture line  lost tomb stern  lunar lander atari  c lunar rescue taito mach iii mylstar  c mx unknown mad dog mcree betson  mad planet gottlieb  c mag max nichibutsu magic sword capcom  mah jongg summer video system  main event konami  major havoc atari  c major league sega c major league usa sega c make trax williams  c x mania challenge taito  mappy midway  mappy ii midway marble madness atari c mario bros nintendo  marvin maze snk mat mania memetron  max rpm midway  mazer blazer stern  mechanized attack snk mega force tecmo megazone konami  mermaid rockola  meta fox ivics metalhawk namco metro cross part namco midnight resistance data east  mighty guy unknown mikie konami millipede atari  c mini golf sente  mini golf deluxe sente  missile command atari  c mission taito  mission xx ua mission x data east  monaco gp sega  money money zaccaria  monster bash sega  monster lair sega c monte carlo atari  moon cresta nichibutsu  c moon patrol williams  moon shuttle nichibutsu moon war stern moonwalker sega  mortal kombat midway  motorace usa williams motorace usa zippy irem mousetrap exidy  mr universal  c mr run run universal  c mr castle universal  c mr wild ride universal  c mr f lea unknown  mr lo unknown  c mr tnt unknown mr heli irem m pac man midway  c munch mobile snk  hero sega mystic marathon williams nsub unknown n captor taito narc williams  nfl football midway  name tune sente  naughty boy jaleco  c nemesis konami x new york new york unknown new zealand story taito nibbler rockola night driver atari  night stocker midway  night striker taito nile flyer atari ninja emaki nichibutsu ninja gaiden tecmo  ninja kid taito  ninja princess sega ninja warrior romstar nova unknown  offroad leland omega fighter ufl omega race midway  c operation thunderboltaito  operation wolf taito  orbit atari oscar data east outrun sega  outlaw atari p jaleco  pow snk  pac land midway pac man namco  c pacland namco  pacman  midway  pacman plus midway  c pacmania atari  c paperboy atari  c passing shot sega c pengo sega  c x penia sega  c pepper ii exidy  peter packrat atari c sx phoenix centuri  c phozon namco phraze craze merit  pig leland pigskin ad midway  pin pong atari pinball action tehkan  pingo sega pioneer balloon rockola piranha unknown pirate pete taito  pisces unknown c pit fighter atari  pitchman la comp sys pitfall ii sega  pleiades centuri c plotting unknown  pole position atari  pole position ii atari  pollux invega  pong atari  pong double atari  ponpoko venture line  pool unknown c pooyan stern pop flamer stern  popeye nintendo  c popper unknown port man unknown  pot shot atari  power drive midway  power lady unknown powerdrift sega  pro quarterback konami psychic five unknown psycho soldier snk puckman midway  c pulsar gremlin  punch nintendo  pursuit atari pushman sammy puzznic taito  pyros taito  qbert gottlieb  c qbert qubes mylstar qb rockola  qix taito  quadrapong atari  quantum atari  c quarterback leland  quartet sega c quartet ii sega c quasar unknown quiz show atari qwak atari r sega  rtype nintendo  rtype ii irem  rabbit punch taito race drivin atari  rad action upl rad mobile sega  radarscope nintendo radical radial nichibutsu  raiden fabtek raider unknown rally bike taito  rallyx midway  c rampage midway  c rampart atari  rastan taito  reactor gottlieb  c real ghostbusters data east  rear guard exidy red alert irem red baron atari  c red clash unknown relief pitcher atari  renegade techno  rescue stern  sc return jedi atari  revenge doh taito  rim rockin basketbastrata ring king data east  ring king ii data east  rip cinematronics  x river patrol kersten riviera merit  road blaster laser road fighter konami road riot wd atari  road runner atari c roadblasters atari  c robocop data east  robocop data east  robotron williams  c roc n rope unknown rock n rage konami rocket racer rockola  roller game konami  roller jammer unknown rolling thunder atari x root beer tapper midway  rough ranger sharp image route centuri  runaway unknown  rush n attack konami  rygar tecmo c h imp football williams  stun runner atari  sci taito  sdi sega c sf champ ed capcom  saint dragon jaleco  salamander unknown samurai taito  sarge midway satan hollow midway  sc savage bee unknown scion unknown scramble stern  sc scramble spirit unknown sea wolf midway  sea wolf ii midway  search rescue snk sebring atari section z capcom seicross unknown sente system sente  sex trivia merit  shackled data east  shadow dancer sega  shadow warrior tecmo shanghai sun shanghai kid memetron  shark attack unknown shinobi sega c shoot data east  shooting gallery unknown shooting master sega  showdown exidy  shuuz atari  side arm romstar side track exidy  sidearms capcom silkworm tecmo  simpson konami  sinbad unknown sinistar williams  c skate die atari skull crossbones atari  sky adventure snk sky diver atari sky raider atari  sky rider unknown sky shark romstar  sky soldier romstar  slap fight unknown slither gdi sly spy data east  smash tv williams  smokey joe atari snack attack midway snake pit sente  snapjack universal snow brother techno soccer atari solar fox midway  solar quest cinematronics  x solar war atari solar warrior memetron son son unknown sonic boom sega c sovalou namco  space ace cinematronics  x space attack ii unknown space duel atari  c space dungeon taito  space encounter midway  space firebird sega  space fury sega  c space gun taito  space harrier sega space hawk cinematronics x space inv deluxe midway  space invader midway  c space invader ii taito c space laser taito  space lord atari  space odyssey sega space panic universal  space race atari  space tactic sega space war cinematronics  x space zap midway  c spec criminal inv taito  special project konami spectar exidy  spectrum status  speed buggy data east speed freak vectorbeam  speed rumbler capcom spiderman sega  spider unknown spiker midway splat williams c splatter house tecmo  sprint atari  sprint atari sprint ii atari  spy hunter midway  sc spy hunter ii midway star base omega unknown  star castle cinematronics  x star fire exidy star force tehkan star hawk cinematronics  x star rider williams star trek sega  c star war atari  x c starblade namco  stargate williams  c starship atari  steel talon atari  steeple chase atari stocker sente stompin sente storming party unknown stratavox taito  strategy x stern  strato fighter tecmo street fighter capcom  street fighter ii capcom  street football midway street heat unknown street smart snk  strength speed unknown strider capcom  strike force midway  strike gunner stgtecmo strike zone baseballleland  subrocd sega  sub atari sundance cinematronics x sunset rider konami  super basketball konami super breakout atari super cobra stern  super contra konami  super death chase exidy super dodge ball leland super quixote universal super draw stern  super earth invasionunknown c super flipper chicago coin  super galaxian unknown c super hang sega super league sega c super mario bros nintendo  super missile attackatari  super monaco gp sega  super offroad leland super pacman midway  super punch nintendo  super qix romstar  super ranger unknown super speed race williams super sprint atari  c super volleyball video system  super wonderboy sega super zaxxon sega  superpong atari  superbug atari superman taito  sure shot pool status  surround atari survival rockola swimmer tehkan c system atari c tko boxing data east  tnk iii snk  tx atari  tac scan sega c tag team wrestling techno  tailgunner cinematronics x tailgunner ii cinematronics x taito volleyball taito tank atari  tank atari tank force namco  tank ii atari tank kee game  tapper midway  sc targ exidy  tazmania unknown tecmo bowl tecmo  tecmo bowl ii tecmo tecmo knight tecmo teenage mnt konami  tempest atari  c terminator midway  terra cresta sega terra force nichibutsu tetri sega c tetri atari  thayer quest rdi  end stern  glob eagle c pit centuri  thief pacific novelty three stooge mylstar c thunder blade sega thunder crester sega  thundercade romstar  thunderjaws atari  tiger heli romstar  tiger road romstar timber midway time pilot konami  c sx time pilot  konami  c time scanner sega c time soldier romstar  time traveller sega  time warrior romstar  tin star taito  toki fabtek c x tokio romstar toobin atari  top gunner konami top shooter taito  top speed romstar tornado baseball midway total carnage midway  touchme atari touchdown fever snk  tough turf sega c tour cyberball atari tournament arkanoid taito tournament table atari tower druaga namco track field centuri  trak atari  trisports midway  trick shot sente triple hunt atari triple punch unknown  trivquiz status  trivia whiz merit  c trivial pursuit sente  trog exidy  trojan capcom tron midway  sc truxton sega tube chase atari tumblepop data east  tunnel hunt centuri  turbo sega  turbo outrun sega  turboforce system v  turkey shoot williams  turtle stern  turtle time konami  tutankham konami  c x twin cobra romstar  twin eagle taito  twin racer kee  two crude data east  two game module atari two tiger midway  un command unknown un squadron capcom u classic golf taito ufo invasion unknown ufo robo dangar nichibutsu ultra tank atari n midway  u v mylstar vball taito  vampire e e ltd  vanguard centuri  c vanguard ii snk c vega unknown vendetta konami  venture exidy  vertigo exidy victory exidy  victory road tradewest  video pinball atari  video trivia unknown video trivia unknown vigilante data east  vindicator atari  c vindicator ii atari  c viper leland  vorfeed taito v yard fight irem v baseball nintendo v castlevania konami  v dr mario nintendo  v duck hunt nintendo  v excitebike nintendo  v freedom force nintendo v golf nintendo  v gradius konami  v gumshoe nintendo  v hogan alley nintendo  v ice climber nintendo  v platoon sunsoft  v rbi nintendo v sky kid sunsoft  v slalom nintendo  v super mario bronintendo v tko boxing nintendo v tennis nintendo v goony konami  v top gun nintendo vulgus konami wec le man konami wwf superstar techno  wwf wrestlefest techno  wacko midway  walter payton footbsega war insect unknown c war bug unknown  c war world cinematronics x warlord atari warp warp rockola  warrior cinematronics x warrior fate capcom  web war unknown  whack midway wheel fortune unknown  wheel runner unknown dunit exidy  wild western taito  willow capcom  winning run namco winning run suzuka namco witch way unknown wizard wor midway  c wizz quiz unknown wonderboy sega wonderboy iii sega world cup atari  world series leland world series basebalcinemetronics world series season cinematronics  x world stadium  taito  wrestle war sega  xmen konami  xmultiply irem  xenophobe midway c x x xevious namco  c xexex konami  xybots atari  yie ar kung fu konami  zarzon unknown zaxxon sega  x zector sega zero hour universal  zero wing williams zoar unknown zookeeper unknown  zwackery midway zzyzzyxx unknown                                         
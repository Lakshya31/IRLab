fidonet electronic mail protocol feb page tom jennings market street san francisco ca fidonet node  intent document attempt describe define packet protocol used support electronic mail fidofidonet system describe define fidofidonet software operation even describe system refer following fido manual fido installation manual installdoc fido operating manual fidodoc fido fidonet manual fidonetdoc lower layer protocol discussed routing forwarding dialing algorithm covered mentioned albeit briefly fido fidonet manual background fidonet designed le portable within existing  public domain  software base ie system support binary transfer via xmodem variant theory capable supporting fidonet mean imply current fidofidonet software becan transported machine currently supported mean designed limitation intended document merely cover algorithm used problem encountered automatic transfer packet file used msdos fidofidonet system description fidonet true electronic mail system supported fido bulletin board system software msdos version function transfer textual message binary file physically seperate computer automatic unattended basis basic assumption basic unit data fidonet like msdos cpm software byte mean bit data transfer assume availability bit byte capable channel bit ascii adequate parity fidonet electronic mail protocol feb page used must transparent software fidonet transaction oriented channel connection made data transferred channel closed existing case mean typical modemphone line connection dial connect transfer disconnect though anything might considered  channel  work basic design criterion fidonet extremely short channel connect time since usual channel telephone line cost accumulated per minute basis lowest possible cost single important issue reason packet preassembled processing done packet transfer time due lack real time operatign system fidonet run alternating basis fido fido running user enter message attach file like later processed fidonet fidonet gain control predetermined time day packetizes outgoing message make attempt send packet may receive packet node asynchronouously fidonet time slot deletes unsent packet unpacks packet received pass control back fido note incoming packet examined way fidonet time slot basic concept fidonet  node  node computer capable sending receiving fidonet mail packet discussion packet transfer assume point point transfer background information noted routing forwarding cost accounting etc done much higher layer routing instance done even packet created determines destination node effect packet transfer software assumption fidofidonet written c lattice flavor make use course c style structure string luckily quite simple following basic component used throughout fidonet character bit byte usual micro type  character  bit may signifigant usually ascii string one dimension array bit character terminated null hex fixed length case signifigant text left justified followed null rest string indeterminate practice fidonet string vary character character fidonet electronic mail protocol feb page integer integer variable bit c short unsigned intel big endian format least byte first byte stream longs long integer bit intel format whata packet packet file consists header variable amount variable size message trailer message within packet header single string plain text         header         message                 message n         trailer         header trailer fixed length message variable length fixed number field within packet must treated byte stream many component  type  flag determine format upcoming data therefore difficult  read ahead  except buffering purpose header header fixed length structure contains originating destination node date packet made version number extra space future expansion foolishly  type  identifier packet header packet message message contains interger  type  followed message field attribute originating fidonet electronic mail protocol feb page node destination node two zero cost date strnig   string   string  subject  string followed text string type attribute orig dest node number two zero cost integer serial byte stream string variable length inportant note due extreme shortsightedness original packet design message type include originating destination node number fidonet inserted node number found packet header message unpacked stored system routing meant message many different node packed single packet needle say mean node number may message previous assumtion message type one described added accomodate  extra  information starting version fidonet longer create message type though continue receive implementation may ignore message type assume message type trailer trailer consists single integer thought message type end packet data following xmodem round packet next highest byte ignored system assumption fido fidonet designed using basic software building block concept admittedly stolen ward christensen modem program xmodem crc error checking used basic mail packet transfer discussion made xmodem implementation operation please refer document modem accurately telink protocol used transfer file  attached  message packet telink identical modem addition extra data block pass msdos dependent file information time date exact file size first data block fidonet still modem capable necessary nak extra block whose header character ascii syn instead soh receiving telink based fidonet sending telink based receiving fidonets necessary send extra block protocol also fidonet electronic mail protocol feb page described elsewhere fidonet assumes presence clock sort failsafe monitoring packet transfer accounting purpose monitor actual connect time accounting outside scope document clock timer preferably interrupt driven needed monitor initial connection process though may done using polled counter  calibrated  fairly important prevents excessive connect time either sender receiver fails point two basic subroutine used fido implementation fidonet low level hardware dependent routine important concept delay n delay n centiseconds time delay time waster routine used generating time delay accomodating telephone company equipment modout character send character modem shown illustration purpose used diagram follow modin n receive character mode wait longer n centiseconds character received returned time  returned since character bit  bit indicates valid character received basic important function upon fidonet based centisecond timer need accurate le error ideal acceptable fidonet usually still operate error however repeatability suffer sensitivity  length  telephone connection increase rapidly error implemented msdos interrupt driver timer polled timing loop adequate adjusted match processor speed fidonet electronic mail protocol feb page packet transfer packet transfer described two way first prose description lacking exact detail diagram table exact timing relationship value fidonet session consists following building routing table building list active node creating packet compiling message compiling list attached file sendingreceiving packet deleteing outgoing packet marking sent message unpacking incoming packet return contrlo fido creating packet attached file list transmission reception unpacking covered step fido dependent vary implementation implementation creating packet fidonet make number pass message system first pas merely determine node message destined node marked table later use making packet dialing additional pass made one nod ethere mail packet file created disk using destination node number create unique filename packet node etc packet header written message node found message written packet file message stored fido described later detail last message written packet trailer written file closed process repeated node mail sent fidonet electronic mail protocol feb page sending packet receiving packet fidonet alternate sending receiving packet time slot actually sending attempting send packet waiting one incoming call fidonet make outgoing call random one two minute interval node chosen call table compiled making packet node picked sequentially table trying one sucession end table reached start beginning time place call next node chosen table telephone number dialed connection made fidonet go back receive mode connection made cr sent determine baud rate called system determines baud rate sends  signon  message telling human caller available message detected caller terminates baud detection baud detected second caller disconnect sender wait line clear signon message stop sends character designated  tsync  tell receiver fidonet node calling instead human caller second limit placed tsync sequence receiver go xmodem file receive unique name incoming packet  sending tsync sender transmits packet nout using normal xmodem protocol packet sent receiver go immediately modem mode receive attached file attached file sender sends eot received receiver modem tell  file  attached file sender sends file attached file list using modem either sending attached file sending eot meaning attached file sender delay five second disconnect receiving last attached file eot receiver delay two second disconnect delay accomodate telephone system peculiarity keeping connect information seperate faster channel data without delay possible  disconnect  get character packet sent sucessfully sender deletes outgoing packet attached file list fidonet electronic mail protocol feb page mark node table  sucessful  return receive wait mode unpacking packet fidonet mail time unsent outgoing packet deleted message sent sucessfully marked sent incoming packet  unpacked deleted first destination node number compared node actual number match packet really meant node packet deleted without unpacking match message unpacked placed message area packet read byte stream interpreted read message type found fidonet assembles message go note possible receive part packet fidonet unpack complete message store message area may find error incomplete packet necessary feature since packet aborted sent next night fidonet electronic mail protocol feb page fidonet dialing packet transfer final detailed description actual packet transfer shorthand notation used  clock  mean general purpose timer monitoring elapsed time set read many part packet protocol two subroutine described also used description c like  pseudo code  simplicity function subroutine call shown function parameter function subroutine  parameter  parameter passed function parameter may numeric value string determined context function without parameter shown function function may return value x function set variable x value returned function important note ther one extremely important construct show diagram mechanism monitor carrier detect modem return directly high level subroutine error handling important due huge number place carrier loss would checked corresponding high number error return check implemented c like  setjmp  store stack pointer return address jump return address carrier lost also fido implementation error exit taken clock go set limit free high level code watch clock constantly actual high level packet receive send c source included end document hopefully make bit clearer mnemonic standard ascii control character exception  tsync  described control character definition char hex dec     cr eot tsync ae fidonet electronic mail protocol feb page packet transmission sendpacket attempt place call connection return fidonet wait incoming call delay one two minute place next outgoing call set baud rate node list dial phone number connection return connection made determine baud rate first  whack return  eight time message appears whacking stop call error  double whack  sic seems work better single cr receiver determines baud rate sends cr signon message also contains cr sender notice stop sending cr send cr delay send cr modin  cr break loop cr received mark table one  connect  disconnect return baud rate detected set failsafe timer wait line clear signon message stop coming send tsync one minute elapses disconnect return print  connected  set clock zero clock le one minute modin   break loop clock  one minute disconnect return send tsync disable clock print  sent tsync  presumably connected start sending packet via xmodem xmodem timeout many try hang end fails fidonet fidonet electronic mail protocol feb page print  sending packet  xmodem send packet packet transmission complete mark memory table  succesful  attached file send otherwise send eot success attached file modem send attached file else send eot sent delay second let thing settle delay disconnect return fidonet electronic mail protocol feb page packet reception carrier detected waiting place call waiting incoming call determine baud rate first display signon message wait tsync one minute limit waiting tsync note connect watch clock waiting cr take fatal error abort go set limit example therefore assumes timeout receivepacket reset clock connect determine baud rate print modem  fidonet version xx fidonet node n processing mail  clock le one minute modin  tsync break loop one minute disconnect return connected received tsync wait incoming packet incoming packet named sequentially starting etc packet received quite sense trying get attached file packet received xmodem receive packet file received disconnect return since may taken second close write packet file sender may sent extra eots end xmodem packet transfer delay bit flush modem delay flush modem go right modem receive attached file three none sender send u eot tell modem file also hang point since packet already received last file received delay second disconnect receive modem fidonet electronic mail protocol feb page delay disconnect return fidonet electronic mail protocol feb page implementation note suggestion implementing fidonet system merely suggestion obviously want low level function mentioned low level function least probably universal idea may make easier implement  bullet proof  fidonet elapsed time clock necessity one form another accuracy need high fido implemented timer tick interrupt increment memory variable millisecs second minute function clear clock ie set counter zero millisec almost never actuall millisecond ibm pc instance clock tick  m added millisec every clock tick additional variable called limit time limit enforce particular routine setting zero effectively disables limit thirdly function called limitchk two thing watch set time limit v minute counter watch carrier detect line modem either one event happens take fatal error trap return directly instead returning normally limitchk limit minute limit frcabort dsr frcabort frcabort fatal error jump back caller directly dsr function return false carrier lost fatal error limitchk return modin n modout fidonet electronic mail protocol feb page two lowest level character io fido modin n return either character modem  timeout character available within n centiseconds avoids hanging forever waiting character may never come modout merely sends character modem function check error calling limitchk waiting input output ready modin n int n millisec l millisec n character ready return modem char limitchk return  modout c char c output ready limitchk send char modem fidonet electronic mail protocol feb page message message format fido dependent may illustrative show correspondence  normal  fido message one installed packet format fido message contained fido message area  message header structure message text long string  struct msg char   char   char subj  message subject  char date  creation date  int time  number time read  int dest  destination node  int orig  originating node  int cost  actual cost msg  int caca  extra space  unsigned reply  thread previous  int attr  message type  int  thread next   message text start byte following end structure terminated single null   bit value msgattr  define msgprivate  private message  define msgread  read addressee  define msgsent  sent ok remote  define msgfile  file attached msg  define msgfwd  forwarded  define msgorphan  unknown dest node  define msgkill  kill mailing fido message byte minimum byte header variable amount message text null terminated fairly large klunky thing pas around compacted packet much smaller example assume following message tom jennings fido john madill fido subject test message text test message hex dump test message follows note null terminated string followed garbage please ignore fidonet electronic mail protocol feb page f e e e e tom jennings  fe ff  f    f e c c  john madill f  x   wait e ae   h test me ff fc ff b sagee   af af  fc ff e ee af  ff fc ff   e   da af e f bc ze  r f  oct   b             e text  test message e   message packetized becomes much smaller entire packet header message trailer byte extra space fido dependent item removed c  e                   b      f  oct  f e c c john madill f e e e tom jenningstes  message  e text  e test message   packet header format follows possible follow hand disassemble message packet struct hdr int orig  originating node  int dest  destination node  int year month day hour minute second int rate  baud rate  int ver  packet version  int extra pkthdr fidonet electronic mail protocol feb page include stdioh include ctypeh include bbsh include xfbufh include asciih include xtelinkh define tsync xae extern char ver extern unsigned crcmode  crc mode  extern unsigned filemode  transfer type xmodem modem telink   statistic file transmission  extern unsigned totlfiles  total file sentrec  extern unsigned totlfailures  many failed  extern unsigned totlerrors  error count soft error incl  extern unsigned totlblocks  number block sent  extern int minute second extern int pktnum  incoming packet number  extern struct route route routesize  routing table  extern int maxnode  number node route table  extern struct sched sched scheds  scheduled event  extern char tag  handy local copy tag  extern int event  handy local copy current event  extern struct nmap nmap maxnodes  working node table  extern int nn  current node  extern int nodetotal  number node table  extern struct pkthdr pkthdr  fidonet packet header  extern struct mail mail  mailsys  extern struct node node  memory node descriptor  extern struct sys sys extern char txbuf  message display buff ascii upload  extern int sysfiles  total system file  extern int overwrite   allow overwriting file  extern int xferdisp   display updn load status  extern int rate  baud rate  extern int cdflag extern int limit  carrier detected determine baud rate display message tell human get sync sender sync receive mail packet kludge state tell u point reached logging  fidonet electronic mail protocol feb page rcvmail int n char pktname cp int msgpkts msgblocks int state gtod pktname cprintf  rn incoming call srn  pktname lprintf  rn incoming call srn  pktname  get abort timeout sync human caller actual file transfer error packet received sender hang totlfiles packet transferred  totlblocks totlfiles msgpkts msgblocks clrclk  reset clock  limit  limit connect  cdflag  watch carrier detect  state  nothing yet  setabort  trap carrier loss  wasabort state  cprintf  never determined baud ratern  lprintf  never determined baud ratern  else state  cprintf  caller fidonetrn  lprintf  caller fidonetrn  else msgpkts  cprintf  error packet transferrn  lprintf  error packet transferrn  else cprintf  received packetrn  lprintf  received packetrn  totlfiles lowerdtr cprintf  erceived u filesrn  totlfiles lprintf  received u filesrn  totlfiles sprintf pktname  ufli  pktnum xcreate pktname   cprintf  ca nt create srn  pktname lprintf  ca nt create srn  pktname else xwrite txbuf strlen txbuf xclose raisedtr fidonet electronic mail protocol feb page cdflag  real cd  cd discon  hang delay telco  else delay  delay telco  return msgpkts  sender whack cr get cr back wait message stop sends tsync start transfer             one minute complete              cr message must sent receiver looking quiet line delay casued logging etc foul thing  cprintf  determining baud ratern  lprintf  determining baud ratern  connect state  determined baud rate  cprintf  fidonet signon messagern   modout cr sprintf txbuf  fidonet node u version srn  mailnode ver cp txbuf cp modout cp sprintf txbuf  processing mail call back laterrn  cp txbuf cp modout cp cprintf  connected baud waiting syncrn  rate lprintf  connected baud waiting syncrn  rate  n modin  sec get tsync  n  tsync break limitchk  double check  n tsync frcabort  tsync  state  got tsync            end one minute complete             connected transfer mail packet time limit file receive abort error  limit  time limit  sprintf pktname  uin  pktnum  pick new name  cprintf  waiting mail packetrn  lprintf   pktname crcmode  crc  filemode xmodem  file xfer mode  txbuf   received file name  recieve pktname  receive packet  msgpkts totlfiles msgblocks totlblocks  number mail packet  fidonet electronic mail protocol feb page totlfiles totlblocks msgpkts   nothing received  frcabort  terminate   let extra eots etc settle flush file receive doesnt get extra eots  modin timeout  wait incoming file areent caller hang older version send eot file  filemode telink txbuf   get list uploaded file  recieve mailfilepath  get file  delay frcabort  error trap exit   send mail packet remote dial number error return indicate connection also minute upon return reflects actual connection time  sendmail char pktname floname int n f int msgpkts msgblocks int state gtod pktname cprintf  rn calling fido u srn  nodenumber nodename nodephone pktname lprintf  rn calling fido u srn  nodenumber nodename nodephone pktname sprintf floname  uflo  nodenumber txbuf   case file  f xopen floname  read file list  f  n xread f txbuf txsize txbuf n   null terminate  xclose f sprintf pktname  uout  nodenumber  local packet send  nmap nn try  log another try   get abort time dialing fail connect transmission sucessful receiver hung totlfiles tell u happened  totlblocks totlfiles msgpkts msgblocks state  connect yet  fidonet electronic mail protocol feb page setabort wasabort state nmap nn time minute second nmap nn connects state  cprintf  connectionrn  lprintf  connectionrn  else state  cprintf  disconnect synchronizationrn  lprintf  disconnect synchronizationrn  else msgpkts  cprintf  packet sent probable non fidonet systemrn  lprintf  packet sent probable non fidonet systemrn  else cprintf  sent u packet u filesrn  msgpkts totlfiles lprintf  sent u packet u filesrn  msgpkts totlfiles nmap nn success xdelete pktname  done packet  xdelete floname cdflag cd discon return msgpkts  set baud rate node list dial number dialing aborted either noconnect modem timeout modem connected  rate  assume baud  noderate rate  unless higher  baud rate cdflag  dont bomb carrier             one minute dial             limit  min dial  clrclk  reset clock  dial nodephone  frcabort rate  stupid hardware  noderate rate  dial fixed rate  baud rate cprintf  connected baudrn  rate lprintf  connected baudrn  rate state  connection made  fidonet electronic mail protocol feb page            one minute connect sync          send cr get cr back saying detected baud correctly  clrclk  reset clock  limit  min connect etc  cdflag  watch carrier  delay  let modem settle  mflush  flush buffer   extremely noisy line never settle fido delay let modem connect flush buffer garbage modin timeout  quiet line  limitchk  n  n  limited try baud test  modout cr  send cr cr  delay  get one back  modout cr modin  cr break n  cprintf  response whacking crrn  lprintf  response whacking crrn  frcabort  got cr receiver baud rate detected wait prompt junk go away send sync character say ready send  modin timeout  wait quiet line  limitchk modout tsync  send sync  state  tsync sent             end one minute connect sync         limit  limit  cprintf  sending packetrn  lprintf  sending packetrn  filemode xmodem crcmode transmit pktname msgpkts totlfiles msgblocks totlblocks totlfiles totlblocks msgpkts  frcabort  terminate nothing sent  delay  delay sec let rcvr finish  strlen txbuf   file  fidonet electronic mail protocol feb page modout eot  send eot  else filemode telink  send file  transmit txbuf delay frcabort  termination code   
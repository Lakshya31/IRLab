vulnerability skey one time password system author mudge organization lpht heavy industry aka lphtcom  may redistributed long proper credit maintained word  like nt try take credit nt like nt take credit  paper still revision modification comment feedback please email  intro  note intended extensive introduction use skey package several good resource available net paper attempt quickly summarize skey vulnerability sniffed sysadmin security specialist worst nightmare nt privy sniffing slang placing network card promiscuous mode actually look traffic coming along line packet addressed one catch password login name confidential information etc course good side able place card promiscuous mode traffic analysis debugging driver network application testing router configuration name promiscuous mode anything go plaintext fair game time telnet machine ftp another machine connect smtp port pop port read news different machine issue remote procedure call hand password private information anyone want sit line listen several way protecting oneself deslogin provides completely encrypted telnet session kerberized pop server available hardware software utility encryption different osi layer many suffer either commercial product simply difficult administer wonderful security tool presented network community provides seeming solution password sniffed theory behind never use password accomplished challenge response system system contacting issue unique challenge go compute response send back unique response host next time presented different challenge thus come back different response sound great nt even better software server side client side free widely available example look like madwandlphtcom telnet somehostsomewhere trying   connected somehostsomewhere escape character  login jdoe skey k password weld guy chimp swing gone happened telnet machine skey use logging username jdoe challenge issued jdoe computes response local machine us input password prompt let take look figure skey k skey text user know going number iteration md k seed assuming jdoe provided valid response next time would try log iteration counter would decremented ie skey k response would computed would different thus anybody sniffed ie user jdoe password weld guy chimp swing gone would able gain access machine information password longer valid  dictionary attack  one first vulnerability information broadcast plaintext mean trivial take challenge response compare result challenge applied word dictionary username jdoe challenge k response weld guy chimp swing gone jdoe real password dictionary word love challenge k response bad lost crumb hide knot well  dictionary word sex challenge k response fort hard bike hit swing either  dictionary word secret challenge k response weld guy chimp swing gone bingo know jdoe real password secret information generate valid response matter challenge particularly important since current implementation skey package neither client server side sort sanity check security chosen password mean failsafe try prevent choosing login name password silliness b another source dictionary attack come etcskeykeys file number site skey set improper permission set file quite surprising file set world readable keyinfo program would like harm outweighs good skeykeys file look like root k afaabef jun   jdoe k cfdfdaf may   etc  username iteration counter seed hex representation five word response saw three field simply date time information nt much interest right exact sort dictionary hack made information bring point home let pretend large user base say user since security conscious shadow password system using skey average account able look real password file since shadowed able standard dictionary attack however able see skeykeys file dictionary attack permission set improperly thus defeating benefit shadowed password file  spoofing attack  since iteration counter transmitted along seed one possibility masquerade server could done setting bogus gateway whatever really spoofing user let take following scenario  login jdoe jdoe telnet machine skey k password jdoe seen challenge k instead ent lower challenge k password spit loft head tear jdoe calculates response k based upon secret password login incorrect login tell jdoe login incorrect forward rest connecti actual machine really wanted talk first place response k challenge run iteration md subsequent response example information want figure response challenge k need run iteration md looking response challenge k would need run iteration md etc etc telnet machine long iteration counter challenge k compute proper response without ever know secret password many variation theme   trojan attack  problem skey simply reminder vulnerability trojanized login su program skey replacement exists regular  race attack  seems problem skey allows two simultaneous logins occur key position capturelook atmodify jdoe response go bye ie bogus gateway something open another telnet session machine since nt logged yet iteration counter nt decremented get challenge receive jdoe response simply send information process well original login little luck locking problem occur skeykeys file let challenge response easily fixable source yet investigated fully  hijacking attack  problem skey simply reminder remember connection established jdoe successfully answered challenge appropriate response check done skey side thing designed kerberos people often lulled false sens security choosing easily guessed password use skey system ip hijacking monitoring trick used jdoe session used nonskey session  outro  like skey think skey good utility great asset community general paper dissuade anyone using skey simply meant point certain vulnerability worst thing happen security conscious false sense security skey provide added security neither product currently market beall endall security paper helped remind anyone done job mudge mudge lphtcom 
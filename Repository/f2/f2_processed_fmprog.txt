hello updated doc file programming adlibsound blaster card since still getting request original decided would save time post apology nt interested                                        programming adlibsound blaster fm music chip version  feb copyright c jeffrey lee jlee smylexuucp warranty copyright policy document provided  asis  basis author make warranty representation express implied respect quality performance fitness particular purpose event author document liable direct indirect special incidental consequential damage arising use inability use information contained within use document risk file may used copied freely long applicable copyright notice retained modification made text document money shall charged distribution beyond reasonable shipping handling duplication cost shall proprietary change made document distributed freely document may included published material commercial package without written consent author overview two popular sound card ibmpc adlib sound blaster suffer real dearth clear documentation programmer adlib inc creative lab inc sell developer kit sound card expensive case sound blaster developer kit extremely cryptic document intended provide programmer free source information programming sound card information contained document combination information found sound blaster software developer kit learned painful experience information may valid adlib card apologize advance please note number given hexadecimal unless otherwise indicated number written longhand sixteen instead decimal change version file indicated use change bar lefthand margin chapter one sound card io sound card programmed sending data internal register via two io port hex addressstatus port rw hex data port wo sound blaster pro capable stereo fm music accessed exactly manner port hex address data port left speaker port hex port right speaker port hex cause speaker output sound sound card posse array two hundred fortyfour register write particular register send register number f address port desired value data port writing register port must wait twelve cycle sending data writing data eightyfour cycle must elapse sound card operation may performed adlib manual give wait time microsecond three point three  microsecond address twentythree microsecond data accurate method producing delay read register port six time writing register port read register port thirtyfive time writing data port sound card register writeonly address port also function sound card status byte retrieve sound card status simply read port status byte following structure                         tmr tmr unused tmrs                         bit set either timer expired set timer expired set timer expired chapter two register following table show function register sound card register explained detail table register listed unused address function                              test lsi enable waveform control timer data timer data timer control flag speech synthesis mode keyboard split note select  amp mod vibrato eg type key scaling multiple  key scaling level operator output level  attack rate decay rate  sustain level release rate aa frequency low bit bb key octave frequency high bit bd depth vibrato depth rhythm control cc feedback strength connection type ef wave select grouping twentytwo register   etc odd order due use two operator fm voice following table show offset within group register operator channel operator operator b c thus address attackdecay byte channel first operator second address second operator always address first operator plus three illustrate relationship address needed control channel operator amvibegksrmultiplier c operator amvibegksrmultiplier operator ksloutput level c operator ksloutput level operator attackdecay c operator attackdecay operator sustainrelease c operator sustainrelease frequency low bit b key onoctavefrequency high bit c feedbackconnection type e operator waveform ec operator waveform explanation register byte byte normally used test lsi device bit normally zero bit enabled allows fm chip control waveform operator                         unused w unused                         byte timer data timer enabled value register incremented overflow upon overflow sound card signal timer interrupt int set bit status byte value timer incremented every eighty microsecond byte timer data timer enabled value register incremented overflow upon overflow sound card signal timer interrupt int set bit status byte value timer incremented every three hundred twenty microsecond byte timer control byte                         irq unused rst msk msk ctl ctl                         bit reset flag timer set bit ignored bit mask timer set bit ignored bit mask timer set bit ignored bit clear timer operate set value byte loaded timer incrementation begin bit clear timer operate set value byte loaded timer incrementation begin byte csm mode keyboard split                         csm key unused sel spl                         bit set selects composite sinewave speech synthesis mode keyon bit must clear clear selects fm music mode bit selects keyboard split point conjunction fnumber data documentation sound blaster manual utterly incomprehensible ca nt reproduce without violating copyright byte  amplitude modulation vibrato envelope generator type keyboard scaling rate modulator frequency multiple                         amp vib eg ksr modulator frequency mod typ multiple                         bit apply amplitude modulation set depth controlled amdepth flag address bd bit apply vibrato set vibrato depth controlled vibdepth flag address bd bit set sustain level voice maintained released clear sound begin decay immediately hitting sustain phase bit keyboard scaling rate another incomprehensible bit sound blaster manual experience bit set sound envelope foreshortened rise pitch bit  bit indicate harmonic operator produce sound modulation relation voice specified frequency one octave voice specified frequency one octave octave fifth two octave two octave major third two octave fifth two octave minor seventh three octave three octave major second three octave major third b        c three octave fifth       e three octave major seventh f        byte  level key scaling total level                         scaling total level level    db                         bit  cause output level decrease frequency rise change  dbve dbve dbve bit  control total output level operator bit clear loudest bit set softest nt ask byte  attack rate decay rate                         attack decay rate rate                         bit  attack rate slowest f fastest bit  decay rate slowest f fastest byte  sustain level release rate                         sustain level release rate                         bit  sustain level loudest f softest bit  release rate slowest f fastest byte ab octave fnumber keyon                         fnumber least significant byte aa                                                 unused key octave fnumber bb sig                         bit channel voiced set silent clear bit  octave  lowest highest bit  significant bit fnumber octave fnumber value chromatic scale corresponding frequency would f number frequency note b  c   b  e ca  f e  f  g  g    b ae  c byte cc feedback algorithm                         unused feedback alg                         bit  feedback strength three bit set zero feedback present value  operator send portion output back least amount feedback bit set operator modulates operator case operator one producing sound set operator produce sound directly complex sound easily created algorithm set byte bd amplitude modulation depth vibrato depth rhythm                         vib rhy bd sd tom top hh dep dep ena cym                         bit set depth db clear depth db bit set vibrato depth cent clear vibrato depth cent bit set rhythm enabled melodic voice clear rhythm disabled melodic voice bit bass drum onoff bit snare drum onoff bit tom tom onoff bit cymbal onoff bit hi hat onoff note keyon register channel must order use rhythm section parameter attackdecaysustainrelease must also set appropriately byte ef waveform select                         unused waveform select                         bit  bit address set output waveform distorted according waveform indicated two bit try diagram medium fairly restrictive          detecting sound card according adlib manual official method checking sound card follows reset timer writing h register enable interrupt writing h register note must separate step number read status register port h store result write ffh register timer start timer writing h register delay least microsecond read status register port h store result reset timer interrupt see step test stored result step anding eh result step h result step ch correct adlibcompatible board installed computer making sound many people asked upon reading document proper register value make simple sound well first clear register setting zero quickanddirty method resetting sound card work note wish use different waveform must turn bit register reset need done start program optionally program exit make sure program nt leave note exit set following register indicated value register value description set modulator multiple set modulator level db f modulator attack quick decay long modulator sustain medium release medium set voice frequency lsb set carrier multiple set carrier maximum volume db f carrier attack quick decay long carrier sustain medium release medium b turn voice set octave freq msb turn voice set register bh h fact value leaf bit clear generally preferable course induce delay acknowledgement thanks due following people ezra dreisbach ed andrewcmuedu providing information recommended port write delay adlib manual official method detecting adlibcompatible sound card nathan isaac laredo gta prismgatechedu providing port number stereo sound sound blaster pro 
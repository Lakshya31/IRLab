extending xmodemmodem file transfer protocol support do jennings sept proposed addition de facto standard file transfer protocol used xmodem modem program addition add pcdos msdos support exact filesize original creation time date addition backwards compatible xmodemmodem program lookalikes use year internal company file transfer  outside  modem xmodem manufacturer pc compatibles looking oem purchase program time provide support soon million pc compatibles description assumes working understanding modemxmodem protocol extention course requires adding code existing new program used sucessfully year problem problem simple xmodemmodem pass file information whatsoever modem provides filename since filesize unknown receive time receiving program  round  file size next highest byte interval com file etc nt much problem spreadsheet data file text file special data file exact length required also file creation date information lost making difficult keep track version etc solution obviously pas information somehow necessary data happens much le byte size xmodem data block basically solution assemble data block containing necessary information transmit normal data block special header character limited number retries done receiving program ca nt handle wo nt get ten error causing abort user extra effort required however sender using extended protocol receiver receiver see six  header error  normal transmission resume sending protocol time file open appropriate informaton file assembled creation time date file size assembled zerofilled data block see table first data block sent block sent ascii syn character instead soh indicating data block receiver accepts block ack received data block transmission proceeds usual error nak received sender retries prevents receiver aborting leaving seven attempt get first data block work better seems first block usually get couple timeouts anyways due program syncup receiver file creation etc sender still transmit data endoffile usually receiver received special block need worry exact filesize receiver protocol receiver operates almost identically normal xmodemodem protocol however one special check made current block number zero awaiting first data block received header character syn special block received receiver pull creation time date filesize set flag indicate special block received receiver must maintain byte count filesize properly example filesize byte writes byte first four block received one byte last block creation date time must set last write file close note do version  higher setfiletime capability therefore time date field data block zero supported zero set filetimes hint way make implementation easier example initially filling special block zero set unused field version number time date supported byte order element see table order do return since program really need look filesize exception long lattice c right byte order header identical normal data block except syn instead soh including checksum sector number existing code could used send receive block addition since end transfer filesize fairly easily display time complete transmission display continuously helping eliminate one frustrating thing modem transfer  long thing take  transfer started glance display tell table data block sent sender receiver pas additional file information block sent first data block header data checksum syn ff          syn distinguishes block system info block xmodemmodem data block start therefore indicates special block ffh one complement sector number following comprises byte data block unused field initialized zero future expansion number left  offset start block  do filesize bit intel format ie filesize  byte hex byte order would  creation time date byte do packed format field zero valid ie sent system support receiver check setting creation time  filename byte asciz format ie non fcb format  foocom   foo com  used currently field left justified blank filled  version number byte current version zero somehow synchronized program content block change  file transfer program name byte program called  telink  left justified blank filled  unused rest block zero filled xx checksum entire data block generated checked identically normal data block 
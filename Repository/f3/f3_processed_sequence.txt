sequence number attack rik farrow kevin mitnick alleged attack tsutomu shimomura computer used vulnerability tcpip mistaken trust question regarding article directed author rik spiritcom december found tsutomu shimomura computational physicist san diego supercomputer center way sierra nevada go skiing left personal network computer running beach cottage del mar north san diego perhaps fortunate u two oclock afternoon shimomura home system probed successfully attacked using something new internet attack sequence number guessing shimomura also work security expert made system desirable target attack allows u understand detail happened unlike network shimomura using tcpdump monitor traffic incoming internet connection routinely sent log offsite location sequence number guessing really new steve bellovin researcher bell lab coauthor firewall internet security book addisonwesley isbn  included detail attack scenario paper entitled  security problem tcpip protocol suite  christmas day attack first known use technique better understand happened help understand little tcp transport control protocol work tcp used establishing bidirectional stream like used remote terminal connection established telnet rlogin utility tcp also used transferring large amount data example ftp connecting web server tcp provides reliable connection unlike part internet protocol suite icmp internet control message protocol udp user datagram protocol tcp establishes connection local remote site connection successfully established group byte data acknowledged sending sequence number back sending site sending site receive acknowledgement quickly enough resend data sending site resent data several time unsuccessfully send error application saying connection broken sequence number used acknowledge receipt data beginning tcp connection client sends tcp packet initial sequence number acknowledgement ca nt one yet server application running end connection server sends back tcp packet initial sequence number acknowledgement initial sequence number client packet plus one client system receives packet must send back acknowledgement server initial sequence number plus one thus take three packet establish tcp connection see part figure show timeline diagram tcp course wo nt learn tcp short article try doug comer book internetworking tcpip volume principle protocol architecture second edition prentice hall isbn  w richard steven tcpip illustrated volume addisonwesley isbn  important understand tcp packet include flag bit get set indicate condition read shimomura account attack make reference several flag syn flag shown capital   tcpdump command output indicates initiation connection initial sequence number included first packet sent client syn flag set server responds syn flag ack flag indicating valid acknowledgement included set ack flag set showing packet includes acknowledgement received packet push shown capital  p  flag mean data packet pushed application rathered queued data arrives reset  r  flag tell tcp break reset connection sent client attempt connect server application running attack reset used close halfopen connection used keep server busy fin bit  f  used close connection end connection sends packet fin flag must acknowledged four packet used close tcp connection course attack wo nt see two fin packet attacker never see response target system x terminal background ready read shimomura description nt already essentially attack begin several probe launched toadcom site registered nebula consulting although nt know sure likely toadcom broken previously using technique probe using finger showmount rpcinfo similar probe satan automatic apparently helped attacker determine trust relationship shimomura x terminal actually another workstation used x terminal local server real weakness exploited attack shimomura system trusted one another using trust mechanism exploited  r  command like rsh rcp although convenient safe behind strong perimeter defense trust used break system many year november internet worm exploited trust automated attack next phase attack thirty tcp syn packet sent rlogin port shimomura server packet come unused internet address initial sequence number incremented one instead common  purpose packet fill queue server halfopen connection spoofing begin server wo nt able respond packet sent acknowledgement x terminal next system loyola university chicago apolloitlucedu used probe x terminal synthetic series tcp packet initial sequence number incremented one get sent time response get sent back real site response attacker response contains initial sequence number x terminal shimomura paper tcpdump label response xterminalshell apolloitlucedu indicating packet syn flag set subtract first initial sequence number second  get  pattern hold twenty probe attacker know next initial sequence number  greater previous one stage set abusing trust x terminal server attacker generates packet appear come server open tcp connection x terminal rshell daemon x terminal sends acknowledgement back server acknowledgement get stuck queue next attacker generates acknowledgement server might sent really server initiating connection open tcp connection x terminal server spoofed server figure b show packet actually traveled x terminal trust server attacker masquerading root sends command  echo rhosts  x terminal extending trust root user access system attacker close connection sending packet fin set acknowledging fin packet never seen x terminal finally thirty reset sent server clear queue point server would send reset x terminal close rshell connection never made one spoofed attacker late attacked log root x terminal using rlogin attack like save taking tcp connection another day also cert advisory attack read copyright   mcgrawhill company inc right reserved edited becca thomas editor unixworldcom                                        network working group bellovin request comment research category informational may defending sequence number attack status memo memo provides information internet community memo specify internet standard kind distribution memo unlimited abstract ip spoofing attack based sequence number spoofing become serious threat internet cert advisory ca ubiquitous crypgraphic authentication right answer propose simple modification tcp implementation substantial block current wave attack overview rational morris described form attack based guessing sequence number tcp use new connection briefly attacker gag host trusted target impersonates ip address trusted host talking target completes way handshake based guess next initial sequence number used ordinary connection target used gather sequence number state information entire sequence coupled addressbased authentication allows attacker execute command target host clearly proper solution cryptographic authentication  quite long time deployed therefore necessary many site restrict use protocol rely addressbased authentication rlogin rsh unfortunately prevalence  sniffer attack   network eavesdropping cert advisory ca  rendered ordinary telnet dangerous well internet thus left without safe secure mechanism remote login propose simple change tcp implementation block sequence number guessing attack precisely attack remain possible bad guy already ability launch even devastating attack bellovin informational page                                       rfc sequence number attack may detail attack order understand particular case sequence number guessing one must look way handshake used tcp open sequence suppose client machine want talk rsh server b sends following message b syn isna sends packet syn  synchronize sequence number  bit set initial sequence number isna b reply b syn isnb ack isna addition sending initial sequence number acknowledges note actual numeric value isna must appear message concludes handshake sending b ack isnb initial sequence number intended le random precisely rfc specifies bit counter incremented loworder position every microsecond instead berkeleyderived kernel increment constant every second another constant new connection thus open connection machine know high degree confidence sequence number use next connection therein lie attack attacker x first open real connection target b  say mail port tcp echo port give isnb impersonates sends ax b syn isnx  ax  denotes packet sent x pretending b response x original syn speak b syn isnb ack isnx bellovin informational page                                       rfc sequence number attack may go legitimate anon x never see message still send ax b ack isnb using predicted value isnb guess right  usually  b rsh server think legitimate connection fact x sending packet x cant see output session execute command le user  case game x minor difficulty see b message realize b acknowledging something never sent send rst packet response tear connection variety way prevent easiest wait real possibly result enemy action course actual practice x gag exploiting common implementation bug described fix choice initial sequence number connection random rather must chosen minimize probability old stale packet accepted new incarnation connection appendix furthermore implementation tcp derived bsd contain special code deal reincarnation server end original connection still timewait state pp accordingly simple randomization suggested work well duplicate packet hence restriction initial sequence number reincarnation peculiar individual connection connection syntactic semantic sequence number used two different connection prevent sequence number guessing attack giving connection  tuple localhost localport remotehost remoteport  separate sequence number space within space initial sequence number incremented according however obvious relationship numbering different space obvious way maintain state dead connection easiest way change tcp state transition diagram end connection go timewait state would work inelegant consumes storage space instead use current microsecond timer set f localhost localport remotehost remoteport bellovin informational page                                       rfc sequence number attack may vital f computable outside attacker could still guess sequence number initial sequence number used connection therefore suggest f cryptographic hash function connectionid secret data md good choice since code widely available secret data either true random number combination perhost secret boot time machine boot time included ensure secret changed occasion data host ip address name may included hash well eas administration permitting network workstation share secret data still giving separate sequence number space recommendation fact use three item random number hardware generate administratively installed pas phrase machine ip address allows local choice secure secret note secret easily changed live machine would change initial sequence number used reincarnated connection maintain safety either dead connection state must kept quiet time observed two maximum segment lifetime change common tcp bug mentioned earlier attacker using sequence number guessing  gag  trusted machine first number strategy possible attack detected thus far rely implementation bug syn packet received connection receiving system creates new tcb synrcvd state avoid overconsumption resource bsdderived system permit limited number tcbs state per connection limit reached future syn packet new connection discarded assumed client retransmit needed packet received first thing must done search tcb connection tcb found kernel search  wild card  tcb used server accept connection client unfortunately many kernel code invoked incoming packet initial syn packet synrcvd queue full wildcard tcb new packet specifying host port number discarded even nt syn packet bellovin informational page                                       rfc sequence number attack may gag host attacker sends dozen syn packet rlogin port different port number nonexistent machine fill synrcvd queue synack packet go bit bucket attack target machine appears come rlogin port trusted machine reply  synacks target  perceived packet belonging full queue dropped silently could avoided full queue code checked ack bit legally legitimate open request rst sent reply security consideration good sequence number replacement cryptographic authentication best palliative measure eavesdropper observe initial message connection determine sequence number state may still able launch sequence number guessing attack impersonating connection however eavesdropper also hijack existing connection incremental threat nt high still since offset fake connection given real connection le constant lifetime secret important ensure attacker never capture packet typical attack could disclose include eavesdropping variety routing attack discussed random number used sole source secret must chosen accordance recommendation given acknowledgment matt blaze jim elli contributed crucial idea rfc frank kastenholz contributed constructive comment memo reference rt morris  weakness bsd unix tcpip software  cstr bell laboratory murray hill nj postel j  transmission control protocol  std rfc september kohl j c neuman  kerberos network authentication service v  rfc september atkinson r  security architecture internet protocol  rfc august bellovin informational page                                       rfc sequence number attack may postel j j reynolds  telnet protocol specification  std rfc may jacobson v braden r l zhang  tcp extension highspeed path  rfc october gr wright w r stevens  tcpip illustrated volume  addisonwesley bellovin  security problem tcpip protocol suite  april computer communication review vol pp  rivest r  md messagedigest algorithm  rfc april eastlake crocker j schiller  randomness recommendation security  rfc december l joncheray  simple active attack tcp proc fifth usenix unix security symposium author address steven bellovin research mountain avenue murray hill nj phone  email smb researchattcom                                       
line body deliverydate september  edt deliveryby networkserverdaemon neumann cslsricom athena date friday september  edt peter g neumann neumann cslsricom subject summary unix breakin message saltzer athenamitedu inreplyto message  jerome h saltzer saltzer athenamitedu  fri sep pdt risk cslsricom risksforum digest summary message unix breakins file available ftp cslsricom risk risksreid riskslist risksforum digest tuesday september volume issue reid decwrldeccom brian reid date sep pdt tuesday peter g neumann neumann cslsricom risk subject massive unix breakins stanford lesson learned recent rash unix computer breakins introduction number unix computer san francisco area recently plagued breakins reasonably talented intruder analysis breakins verified telephone conversation intruder show networking philosophy offered berkeley unix combined human nature system programmer creates environment breakins likely consequence breakins dire need people study physical security building military base believe human frailty much likely technology fault physical breakins occur often easier make friend guard notice like watch benny hill show tv wait show come try climb fence outwit burglar alarm summary berkeley unix networking mechanism userlevel networking feature built around principle  remote execution   trusted host  example want copy file computer computer b type command rcp file b file want copy file tmpxyz computer using computer c called usrspoolbreakin type command rcp tmpxyz c usrspoolbreakin decision whether permit copy command based  permission  file stored computer b c first command copy b work account computer permission file stored directory computer authorizes kind remote access  permission file  contains list computer name user login name line  scorestanfordedu reid  permission file computer  b  mean user  reid  computer  scorestanfordedu  permitted perform remote operation rcp access privilege user  reid  computer b breakins happened one stanford campus computer used primarily mail gateway unix ibm computer campus guest account user id  guest  password  guest  intruder somehow got hand account guessed password number wellknown security hole early release berkeley unix many fixed later release computer used mail gateway particular incentive keep constantly date latest greatest system release running older version system intruder instantly cracked  root  computer using ageold trojan horse trick noticed guest account happened write permission certain scratch directory noticed certain circumstance privileged job could tricked executing version program scratch directory instead normal system directory intruder cracked  root  computer able assume login identity everybody account computer particular able pretend user  x  user   guise ask remote login computer sooner later found user remotecomputer pair permission file end granting access logged another computer using kind trojan horse trick able break root new computer repeat process iteratively case intruder left trojanhorse trap behind every computer broke case created login account computer broke record kept difficult tell exactly many machine penetrated number could high stanford campus alone intruder using similar modus operandi reported installation  human nature  contributed problem three technological entry point made intrusion possible large number permission file entirely many permission stored found campus computer matter arpanet presence system directory user write permission sloppy undisciplined use search path privileged program superuser shell script permission berkeley networking mechanism encourages carelessness berkeley networking mechanism convenient use time want move file one place another type  rcp  fast efficient quite transparent sometimes need move file machine nt normally use log machine quickly create temporary permission file let copy file machine break back source machine type copy command however quite certain done moving file nt want delete permission file remote end edit entry u use display editor oftentimes file copy made remote machine display editor nt always work quite way want large nuisance factor running text editor remote end therefore effort removing one entry permission file  running text editor editing  high enough people nt often nt want delete permission file contains entry still valid often permission file rarelyused remote computer end extraneous permission installed onetimeonly operation since berkeley networking command mean prompting password asking name temporary permission file everybody edits thing permanent permission file course forget take done write permission system directory permit trojan horse attack software development always behind schedule programmer forever looking way thing faster one convenient trick reducing pain releasing new version program directory usrlocalbin usrstanfordbin usrnew new locallywritten version program kept asking user put directory search path system programmer give write access directory intall new version typing  make install  rather taking longer path involving root permission furthermore somehow seems secure able install new software without typing root password therefore nearlyuniversal practice computer used programmer program directory development programmer write permission however user write permission system directory intruder break user account intruder trivially break root using write permission install trojan horse search path people usually let convenience dominate caution search path almost universally misused example many people write shell script specify explicit search path make vulnerable inheriting wrong path many people modify root search path convenient system programmer use interactively superuser forgetting search path used system maintenance script run automatically night difficult debug failure caused incorrect search path automaticallyrun script common  repair  technique put every conceivable directory search path automaticallyrun script essentially every unix computer ever explored grievous security leak caused underspecified overlong search path privileged user summary conclusion wizard cause leak people likely cause leak wizard something go wrong remote machine often call go wizard help wizard usually busy hurry often sloppier operation remote machine people likely permission file left behind stray remote machine wizard offered help machine ala wizard people likely write access system directory home machine seems nature wizard want collect many permission possible account maybe establish level wizard net result abnormally high probability errant permission file abused intruder lead account somebody unusually large collection permission machine thereby making easier break root machine conclusion conclusion nobody matter important write permission directory system search path ever somebody carefully rethink user interface berkeley networking mechanism find way permit people type password needed rather requiring edit new permission permission file  permission file  security access mechanism seems fundamentally vulnerable would quite reasonable system manager forbid use drastically limit use mechanized checking easy programmer convenience antithesis security going become intruder convenience programmer account ever compromised especially true setting search path superuser lament mentioned introduction talked intruder telephone maddening thing intrusion happened unable convince authority serious problem could get telephone call traced one point intruder spent hour talking telephone stanford system manager bragging done way call could traced locate day later sat watched intruder log one stanford comptuer watched every keystroke typed keyboard watched break new directory nothing could catch coming telephone naturally soon started anything untoward blasted account using logged sooner later new intruder come along knowing caught considered serious nt necessarily serious could nt want throw people jail nt want let get away either want catch shout tell antisocial brian reid dec western research stanford university                riskslist risksforum digest wednesday sept volume issue davy eeecnpurdueedu dave curry risk cslsricom cc reid decwrldeccom subject massive unix breakins date wed sep  est brian feel really breakins real pain neck aside potentially hazardous system trouble convincing authority anything serious going credit learned lot much responsive year ago couple comment though griping berkeley networking utility well good yes problem however think really little initial breakins system merely compounded already exisiting breakin several fold two specific part letter take exception one stanford campus computer used primarily mail gateway unix ibm computer campus guest account user id  guest  password  guest  intruder somehow got hand account guessed password um put mildly asking  guest  probably second third login name guess trying break rank right  user   sys   admin  making password  guest   guest  like leaving front door wide open berkeley networking nothing initial breakin leaving obvious account even obvious password system cause number wellknown security hole early release berkeley unix many fixed later release computer used mail gateway particular incentive keep constantly date latest greatest system release running older version system asked nt plug hole someone come along use berkeley networking nothing intruder getting root system due purely neglect granted superuser berkeley networking scheme enables invade many many account many many machine nt get wrong trying criticize sake nasty rather emphasizing need enforcing good security measure unless particularly good reason one take  generic  guest account system let someone log without identifying never put obvious password  standard  account includes  guest  guest account  system  root account enforcing among user harder impossible past checked account machine stupid password informed everyone whose password found change measure simple easy password make thing  cracked  account  one overnight run program trying password per account think could done sophisticated attack fix security hole even  unused  machine amazing many unix site hole wide open plugged year ago even found site still running  distributed sendmail month ago  educate police authority going invite come learn computer give account documentation first time breakin dialup took u three day convince police department needed call traced understand going much quicker respond security violation deem important enough bring attention dean student office much interested handling case student breaking student account several year ago reaction   due primarily people making effort educate although sure increased attention computer security received medium effect  dave curry purdue university engineering computer network                reid decwrldeccom brian reid date sep pdt wednesday davy eeecnpurdueedu dave curry cc risk cslsricom subject massive unix breakins machine initial breakin occurred one didnt even know existed c department person control issue small leak inconsequential machine dark corner campus allowed spread machine networking code security quite good csd ee machine run folk understand security episode showed nt quite good enough                riskslist risksforum digest saturday september volume issue date thu sep  cdt  scott e preece  preece ccvaxa gswdvmsarpa risk cslsricom subject massive unix breakins stanford reid decwrldeccom brian reid machine initial breakin occurred one nt even know existed c department person control issue small leak inconsequential machine dark corner campus allowed spread machine networking code security quite good csd ee machine run folk understand security episode showed nt quite good enough      still blaming networking code something supposed fault lie allowing uncontrolled machine full access network ncsc approach networking ca nt certify networking code secure certify network machine single system pretty much approach berkeley code grafted protection realworld situation lesscontrolled machine restricted access addition nfs make singlesystem model even necessary scott preece gouldcsd urbana uucp ihnp uiucdcs ccvaxa preece                riskslist risksforum digest monday september volume issue date mon sep  edt risk forum peter g neumann  coordinator risk cslsricom subject massive unix breakins stanford jerome h saltzer saltzer athenamitedu risk dave curry gently chastises brian reid asked berkeley networking nothing intruder getting root system due purely neglect granted superuser berkeley networking scheme enables invade many many account many many machine risk scott preece pick theme suggesting stanford failed looking problem one network security light use berkeley software enforcing noattachment rule machine nt batten hatch two technically policybased response might tenable problem occurred military base university different environment difference shed light environment soon begin emerge typical commercial networked home computing setting even military base two characteristic stanford situation riskobservers keep mind choice operating system software made many factor quality network security feature university lot reason choosing bsd  made choice berkeley network code complete casual approach network security usually follows cost changing high brian noted convenience also high nature university allow individual thing insisting every machine attached network must run certifably securefrompenetration configuration counterstrategic campus may privately administered sun iii microvaxii pc rt running bsd  impractical amusing hear proposed even military site going discover soon configuration control achieved physical control every network host harder look world engineering workstation brian comment thoughtful thoughtprovoking describes expected response human being typical currentday operating system design observation make ca nt dismissed easily jerry saltzer                date mon sep  edt rob austein sra xxlcsmitedu risk cslsricom subject massive unix breakins stanford take issue scott preece statement  fault lie allowing uncontrolled machine full access network  may valid approach small isolated network military fails horribly world rest u live example take person theoreticly responsible pass security half dozen mainframe mit exact number varies control machine put onto network even across street mit main campus hollow laugh let alone machine berkeley use favorite local example banana junior belonging high school student sunnyvale california computer network come wider use private sector problem get worse better waiting see start offering long haul packet switched network common carrier rule thumb net intrinsicly insecure much cable police much knowledge take tap ethernet much money imagine anybody b good technical school could week set mind nfs  arguing case nfs approach security seems bankrupt reason conceptual bug nfs simply agravates making heavier use trusted net assumption elsewhere issue risk discussion danger transporting password net somebody scott forget right problem need nt password tranmitted via public key encryption mean fact password currently transmitted plaintext implementation problem fundamental design issue final comment shut talk security important keep mind adage  ai nt broken dont fix  case point running one least secure operating system ever written something like two decade surprisingly problem breakins seems leaving security code made boring proposition break almost nobody bother either scared realize  command processor  assembly language debugger  ca nt imagine worth thinking price paid security may obvious  rob austein sra xxlcsmitedu                date mon sep pdt andy freeman andy sushistanfordedu subject massive unix breakins stanford risk cslsricom preece ccvaxa gswdvmsarpa scott e preece preece ccvaxa gswdvmsarpa writes risk reid decwrldeccom brian reid writes issue small leak unknown inconsequential machine dark corner campus allowed spread machine networking code still blaming networking code something supposed fault lie allowing uncontrolled machine full access network ncsc approach networking ca nt certify networking code secure certify network machine single system pretty much approach berkeley code grafted protection realworld situation lesscontrolled machine restricted access addition nfs make singlesystem model even necessary ncsc certification mean nothing many situation lot network cross adminstrative boundary exception small company military installation even seemingly nt phone access often necessary network access secure phone access exception may choose disable protection many u wo nt brian nt know insecure machine would nt valid password access machine also able choose kind access additional problem network pose ability physically disrupt others communication andy redundancy contribution make novel point better read selectively edit pgn                date sep cst  scott e preece  preece mycroft gswdvmsarpa subject massive unix breakins stanford risk andy sushistanfordedu risk cslsricom csnetrelayarpa andy freeman writes response promoting view network single system ncsc certification mean nothing many situation     well site required certified system yet would nt allowed noncomplying system view single system make requirement security model feasible ca nt anything network nt part trusted computing base seems essential assumption ca nt trust code running another machine ethernet ca nt believe machine say violates basic principle ncsc model immediate disclaimer part group working secure operating system gould knowledge area superficial think also correct note word   first line paragraph interpolated pgn presumed intended meaning     network access secure phone access exception may choose disable protection many u wo nt brian nt know insecure machine would nt valid password access machine also able choose kind access additional problem network pose ability physically disrupt others communication     absolutely network access secure phone access choose work mode link outside world tightly restricted dialins berkeley networking software set support much integrated kind network network treated single system development environment much effective never allow kind access machine dont control never interpretation original note author net contained machine trustedhost access access contend represents failing software failing administration network scott preece gouldcsd urbana uucp ihnp uiucdcs ccvaxa preece                riskslist risksforum digest wednesday september volume issue date tue sep  cdt  scott e preece  preece ccvaxa gswdvmsarpa risk cslsricom subject massive unix breakins stanford addendum scott contribution risk pgn went back reviewed brian reid initial posting found agreement disagreement agree berkeley approach offer unwary added opportunity shoot foot local administrator careful rhosts file file setuid root purged justified regularly also agree possible system administrator turn rhosts capability entirely currently done source code would good idea support password check configuration option rcp remote service scott preece gouldcsd urbana uucp ihnp uiucdcs ccvaxa preece                date tue sep  cdt  scott e preece  preece ccvaxa gswdvmsarpa risk cslsricom subject massive unix breakins stanford rob austein sra xxlcsmitedu take issue scott preece statement  fault lie allowing uncontrolled machine full access network   stand said important proviso notice word  full  quote took description initial note mean network granted trusted access machine net berkeley networking code allows system administrator machine specify host network treated trusted original posting spoke people another machine masquerading different user machine possible untrustworthy machine hostsequiv file uids equivalenced connection machine allow trusted access machine nt control get deserve also note  network  speaking machine intimately connected ethernet networking using berkeley networking code uucp telephone connection normal login password check apply description original note still sound like failure administration rather failure networking code scott preece ok enough deeper issue operating system deeply flawed always risk tentative report trojan horse discovered racfacf system europe awaiting detail submission risk existence come surprise use system hostile environment could considered failure administration also shortcoming system  pgn                riskslist risksforum digest wednesday september volume issue date mon sep pdt andy freeman andy sushistanfordedu subject unix network security preece mycroft gswdvmsarpa cc risk cslsricom csnetrelayarpa preece mycroft gswdvmsarpa scott e preece writes ca nt trust code running another machine ethernet ca nt believe machine say violates basic principle ncsc model electronic signature good thing wrote andy sushi ncsc certification mean nothing many situation well site required certified system yet would nt allowed noncomplying system designer ford pinto told u dot use x costbenefit tradeoff point rear end collision ford still liable surprised ncsc certification protected company liability word right important complying case cited peter browne old ralph nader material conference risk analysis nb september ford estimated pinto gas tank would take fix  car totalling estimated people might killed result  going rate lawsuit time totalling pgn absolutely network access secure phone access choose work mode link outside world tightly restricted dialins berkeley networking software set support much integrated kind network network treated single system development environment much effective never allow kind access machine nt control never interpretation original note author net contained machine trustedhost access access contend represents failing software failing administration network interpretation brian original message nt choice berkeley network software trust host local net true administrator nt chance fail software designer done repeated scott paragraph agree say andy think implication clear network software weak administrator often unaware risk host trustworthy world full exciting challenge attacker sort unrealistic simplifying assumption generally made password typically stored transmitted clear easily readable obtained  else commonly known encryption still vulnerable key compromised flawed key distribution unprotected subject bribable courier algorithm weak lot equally devastating additional vulnerability waiting exercised particularly vanilla unix system network thereof remember previous discussion trying put blame one place pgn                riskslist risksforum digest thursday september volume issue reid decwrldeccom brian reid date sep pdt thursday risk sricslarpa replyto reid sonoradeccom subject followup stanford breakins please listen time  experience history teach people never learned anything history acted upon principle deduced   georg hegel since many throwing insult sneer direction feel ought respond startled many understand breakin message haste condemn  asking  completely misunderstood telling going bit wordy justify two count first claim topic absolutely central core purpose risk support statement bit second would like take another crack making understand problem ca nt remember name people military base secure installation coughed network administration failure completely missing point  risk technology  issue pure simple aside say system manager system broken control action user computer therefore possible explanation  fault  role helped track intruder importantly wrote guessing college graduate mean college allow remind people need badge get building guard door large number public building door even locked fence around campus guard dog patrolling perimeter university open somewhat unregulated place whose purpose creation exchange idea freedom paramount academic freedom physical freedom people must able walk need walk see need see touch need touch obviously part university need protected people door locked stanford campus building free walk almost time want point also free walk let u suppose walking linguistics building notice teenager taking book building putting car watch short conclude owner book trouble convincing policeman teenager committing crime important teenager anything resembling normal upbringing culture trouble convincing teenager committing crime part training receive citizen society training acceptable public behavior book locked door library locked general people run steal book let suppose instead reporter daily news desk huge room full desk desk empty reporter story seen scene like movie rare small town find newsroom locked palo alto walk office walk office time tribune block away walk newsroom sit desk without challenged stopped guard door door locked  people city since lived one walked newsroom started destroying stealing anything even though protected rule correct behavior society taught every child include concept private space private property thing belong people yearold daughter understands perfectly well walk neighbor house without ringing doorbell first though nt quite understand people training correct social behavior incredibly strong even among  criminal  murderer likely litterbug somebody violated one taboo mean immediately systematically break place however society break force must used washington square area new york example near nyu must lock everything stolen guantanamo must guard cuban come take thing palo alto kansa nebraska wisconsin rural delaware thousand place need guard thing get stolen sure people military base use computer network research world use computer network building block electronic community hallway electronic workplace many u spend time building network community many u spend time developing technology others use build network community exploring building studying teaching electronic world naturally u build electronic community mirror ordinary community live network pentagon built people accustomed seeing soldier gun standing hallway network stanford built people nt get bed evening ride unicycle hallway every get intruder electronic world surprise u intruder share sense societal responsibility perhaps stanford military base would simply shoot intruder done way thing two problem one immediate  stop stop people like another longterm make society understand aberrant behavior result technology build computer network free open building therefore build kind electronic community would like promised would justify risk developing technology people using technology sometimes people misuse misuse technology one primary risk technology society engineering something used public good enough engineer used properly hurt anybody must also engineer used improperly hurt anybody want avoid argument technologist responsibility end consumer responsibility begin want convince even nt believe consumer protection movement nonzero technologist responsibility let u suppose example discovered new way make screwdriver making handle plastic explosive screwdriver would work much better circumstance fact screwdriver gelignite handle much better putting screw screwdriver ever invented people buy drove one bug ever forget handle gelignite use screwdriver hit something explode blow hand inventor screwdriver moan time read newspaper article loss limb complaining people nt screwdriver suppose invented great new way make computer network significantly convenient way making computer network fact network fast convenient everybody buying one bug ever use network connect untrusted computer also forget delete permission done people break computer delete file people complain say  nt connect untrusted computer   remember delete file   fire anyone  dammit nt work way world full people care expediency getting screw driven net worked heat moment going remember caveat people never computer military base could forbid practice punish offender  computer military base need solution rest u consider scenario true story guy petroleum engineering department buy computer get bsd license hire computer science major system programming c major hasnt taken network course yet nt know risk breakins petroleum engineer nt know network rubber chicken desperation tell c student whatever want long plot done friday afternoon c student need homework much convenient homework petroleum computer homework need copy c department computer put permission file account csd computer let copy homework petroleum engineering computer csd computer c student graduate get job system programmer robotics department system programmer account lot permission long since forgotten permission file set move homework last march meanwhile somebody break petroleum engineering computer owner interested petroleum computer nt really care guest password somebody follows permission link break robotics computer deletes thing whose fault blame caused breakin network administrator  permitted  creation rhosts file person fit expedience created usrlocalbin protection idiot ucb released bsd usrspoolat protection owner petroleum engineering computer mother kid breaking failing teach respect electronic private property sure whose fault know three thing nt fault nt nt student fault nt know better  expect hour nt petroleum engineer fault nsf gave grant money asked could nt afford fulltime programmer maybe could argue fault administrator csd machine fact administrator csd machine quit form startup company fact nobody fault solution involving authority management administration work network cross organization boundary people keep designing technology convenient dangerous keep selling nonspecialists expedience always win caution convenience always win except specifically outlawed authority one primary risk technology special computer general public understand well enough evaluate risk                end risksforum digest       
introducing lxm brief history xmodem glory day cpm computer industry plagued plethora diskette format since single standard around particularly  format introduced data interchange computer difficult several manufacturer attempted provide solution giving user ability least read multiple diskette format rather promoting standard format approach encouraged manufacturer adopt proprietary format marketing tool partially response situation partially need provide data transmission capability ward christiansen developed original specification xmodem file transfer protocol xmodem protocol elegant simplicity effectiveness transcended decline cpmbased system ascendency msdos become de facto standard data transfer remote computer fact true even light nearuniversal acceptance another de facto standard diskette format popularized ibmpc family advent new p incompatible micro diskette xmodem protocol place least foreseeable future seems assured protocol fundamental transmission block fundamental building block xmodem bit byte parity please arranged transmission block exactly character never le one extension xmodem commonly called crcxmodem transmission block exactly character discus extension second known ymodem later lxm tm litecomm tm xmodem engine microsoft datalight turbo c might guess length transmission block fixed format xmodem block format look like soh rec rec  data byte  checksum soh x signal start block rec sequential block number reduced modulo rec onescompliment rec checksum bit sum preceding data byte formed adding byte accumulator dropping low order bit result intent additional character facilitate error checking recovery making xmodem protocol  errorfree  mean data transfer otherwise hostile condition block number compliment included insure block accidentally lost transmission prevent accidental duplication data block might caused spurious line noise checksum seek insure validity actual data might become garbled line noise fixed length block format tends simplify logic required implement protocol first place intercomputer dialog xmodem essentially unidirectional nature actual flow meaningful information occurs one direction time sending computer receiving computer meant imply however one computer sends computer receives contrary constant  dialog  going two computer course transmission dialog permit xmodem true  errorfree  transfer method copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c xmodem receiverdriven protocol receiving computer initiate almost exclusively control transmission series preplanned response typical though brief dialog might look like receiver sender meaning nak        ready receive       block first block sent ack        block received ok       block second block nak        error resend       block second block ack        block received ok       eot end file ack        eof understood see response sending computer receiver control link xmodem also make provision unusual circumstance providing timeout cancellation mechanism rule timeouts time period may elapse disruption transmission occurs follows waiting soh second resend last acknowledgement timeout waiting block character second replace expected character predefined value upon timeout waiting reply block second resend last block upon timeout copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c original protocol description also make possible either sender receiver cancel transmission particular value many transmission error occur rare case physical connection broken threshold beyond either side may request cancellation although specified attempt original description protocol become somewhat arbitrary time cancellation code x may sent either sender receiver place soh normal acknowledgment character respectively enhancement xmodem year several significant enhancement made protocol originally defined ward christiansen intent enhancement generally improve upon errorhandling capability protocol make protocol amenable le timeefficient communication environment particularly presented forpay service compuserve make protocol errorfree checksum employed original design replaced bit calculation called cyclical redundancy check crc based upon polynomial equation crc method mathematically demonstrated sensitive  per cent error error detection rate  percent accurate far superior approximately percent accuracy checksum approach overhead additional bit per message seems make enhancement well worth second enhancement seek improve communication packetswitched network like employed compuserve national service basically enhancement introduces relaxed timeout character block allowing additional time protocol recognizes timeout condition copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c third enhancement variant original xmodem protocol seek improve overall efficiency expanding block size character character variant commonly call ymodem reduces number time acknowledgment sequence must sent thereby increasing efficiency actual data transfer lxm xmodem engine support enhancement mentioned lxm engine overview one reason popularity xmodem protocol time simplicity implementation given reasonable communication package upon build developing basic implementation xmodem relatively simple although certain operating system unix family attempt o thing people may actually become impediment intent lxm engine provide xmodem capability flexible easy understand package built upon sound foundation litecomm communication toolbox manner lxm engine designed virtually application access xmodem errorfree protocol without relegated simply transferring file major engine component lxm engine consists primarily two function lcxrrec lcxtrec receive record transmit record respectively two function understand xmodem protocol internally assume full responsibility necessary housekeeping relying upon host program basic function copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c lcxrrec function receives one record companion system host program control checking method crc checksum timeout method normal relaxed handle ever way appropriate block data received optionally monitor flow data companion system lcxrrec assumes responsibility synchronizing companion system correctly maintaining flow information lcxtrec performs like fashion host program want send one record host program present record transmitted lcxtrec rest lcxtrec module assumes responsibility establishing synchronization receiving computer recognizing checking method crc checksum receiver want use lcxtrec also terminates transmission told host program permit host optionally monitor data flow copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c note warning modification lxm engine closely integrated litecomm toolbox every likelihood engine modified function similar package information technology ltd support lxm engine used either litecomm toolbox parity data bit xmodem protocol bit protocol say neither recognizes tolerates parity checking ie data bit plus specified parity since lxm engine determine current setting parity number data bit responsibility controlling setting rest host program using either key function lcxrrec lcxtrec host program must insure setting parity data bit using commsetup function upon final termination function host program must reset value original setting necessary internal timer function lcxrrec lcxtrec employ hardwarebased timing function connects directly normal realtime clock vector xc microsoft turbo c version function also establishes special routine using atexit function insure vector established original setting program termination occurs true datalight version however datalight library present like atexit copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c every effort made datalight user insure vector properly reset plan may thwarted abnormal termination host program resulting subsequent system crash safest method datalight user employ would use lcclrclock function host program termination alternate approach datalight user may want investigate steves library designed datalight c user excellent library equivalent function atexit buffer size restriction litecomm toolbox permit great deal freedom tailoring communication handler meet specific requirement must caution however using lxm engine minimum buffer size required commopn function adequate support lxm particularly transmitting record either low baud rate new generation highspeed mhz processor development lxm quickly discovered small transmit buffer quickly resulted buffer overflow condition recommend using lxm engine transmit buffer set minimum byte avoid overflow condition intended employ ymodem variant minimum buffer size set least xonxoff control host program employ xonxoff function litecomm must sure automatic xonxoff handing disabled attempt transmit receive record using lxm failure observe caution may result system hang requiring system rebooted useraccessible data copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c within lxm certain variable defined globally available host program may examine content variable time determine current state lxm engine correct definition variable contained litexmh except noted host program must alter content variable abortflag variable group may altered host program flag checked periodically engine function abortflag value function progress cancelled automatically sending instruction companion system see ttlc sample program example flag may set crc variable nonzero value lxm engine currently using crc error checking method zero value indicates original checksum method used checksum crcaccum variable hold currentlast calculated check value practical sense value host program rec variable contains current record block number processed event uncorrectable error rec would contain number expected block case successful transmission reception rec number block sent received value contained variable reduced modulo provides block number required xmodem protocol must never disturbed ymodem variable set true host application want transmit block ymodem mode character see discussion lcxtrec programmer reference copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c enginerelated function following page document lxm engine function currently implemented follow style content documentation litecomm toolbox use following page addendum litecomm documentation copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c lcxrrec  summary include litexmh include litecommh int lcxrrec port buff rbsize hmode hdshk unsigned port unsigned char buff int rbsize int hmode unsigned char hdshk description receive block either byte companion system using checking method specified hdshk timeout value specified hmode necessary establish synchronization companion system port parameter used throughout litecomm toolbox buff pointer array byte using xmodem mode byte ymodem mode record character received area area small lxm overwrite adjacent data without warning rbsize pointer integer variable lcxrrec return actual length received block variable approach needed since using ymodem block may either byte byte discretion sender lcxrrec automatically detects block length return caller caller process block correctly value hmode determines whether normal relaxed timeout value used please use constant provided litexm header file insure proper setting value contained initially hdshk must either crc nak defined litexmh former specifies use copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c bit crc checking mode latter specifies use original checksum method note intend operate ymodem mode hdshk must specify crc note hdshk pointer character lcxrrec us area store reply last received block set value started receive alter value circumstance may cause unpredictable result example see accompanying program ttl example lcxrrec usage return value lcxrrec may return several value defined litexmh file return value cause host program respond specific way success record successfully received buff area host program process record call lcxrrec retries maximum number attempt receive single record exceeded lcxrrec automatically cancel session host program handle appropriate manner eg issue error message err  lcxrrec detected host program requested cancellation transmission abortflag setting see fatal record sequence occurred eg block number skipped lcxrrec automatically cancel session sending program requested cancellation host program handle fashion similar retries eot sending program data transmit lcxrrec acknowledges eot message automatically host program handle like endoffile condition copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c tout lcxrrec failed establish synchronization sending program waiting receive soh stx ymodem character start block session automatically cancelled dupseq block received duplicate preceding block host program ignore data contained within block call lcxrrec proceed data transfer copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c lcxtrec  summary include litexmh include litecommh int lcxtrec port buff unsigned port unsigned char buff description transmit block byte companion system checking protocol crc checksum detected automatically receiving station issue initial handshaking sequence necessary establish synchronization companion system transmitting port parameter used throughout litecomm toolbox buff pointer byte record sent companion system typical null terminated string usually found c byte starting pointer transmitted responsibility host program provide padding might required satisfy length requirement generally short record padded null z xa lcxtrec determines block size transmitted based upon current value global variable ymodem see introduction ymodem value true buff assumed point byte record ymodem false byte record assumed feature particular value operating ymodem mode copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c using ymodem protocol block size may either byte sender discretion serf two purpose case large number error many ymodem implementation automatically switch smaller block size many error occur using larger block size effort get data revert back normal block character lcxtrec implement feature automatically generally end file final block sent exactly match transmission block size xmodem mean many wasted character might transmitted ymodem many wasted character transmitted final block however host program call lcxtrec determine block sent le byte set ymodem variable false send multiple byte block using approach amount wasted character worse original xmodem ttl sample program included package show one way approaching problem example see accompanying program ttl example lcxtrec usage return value lcxtrec may return several value defined litexmh file return value cause host program respond specific way success record successfully sent buff area host program either call lcxtrec next record transmit lcxteot indicate end transmission companion system retries maximum number attempt send single record exceeded lcxtrec automatically cancel session host program handle appropriate manner eg issue error message copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c err  lcxtrec detected host program requested cancellation transmission abortflag setting see receiving program requested cancellation host program handle fashion similar retries copyright c information technology ltd lxm tm litecomm tm xmodem engine microsoft datalight turbo c lcxteot  summary include litexmh include litecommh int lcxtrec port unsigned port description send end transmission end file receiving system function must called successfully close transmission session example see accompanying program ttl example lcxtrec usage return value lcxteot return one two value defined litexmh file success receiving station correctly acknowledged eot host program terminates transmission mode normally either receiving system responded eot message code failed respond correctly lcxteot function sent code receiving system host program handle appropriate manner eg issue appropriate error message regardless value returned invoking lcxteot always terminates current transmission session copyright c information technology ltd  
ckit door building toolkit library version  reference manual distributed datacomp information system po box maryville tenn   usr hst dual standard vbis copyright c rickie w belitz introduction introduction ckit library extensive library c runtime routine allow easy door program implementation using pcboard  x wildcat system version gap bb spitfire bb  system using standard doorsys file along rbbspc quickbbs remote access system using dorinfoxdef file ckit  also work properly mikebbs mbbs v ckit automatically work system system listed ckit deal one two way ckit utilize file called genericsys creating system file system ckit support see section genericsys information addition ckit also accept pointer structure contains needed information ckit operate could result program reading bb system file structure allow ckit work bb system providing door author read bb file ckit library feature include interrupt driven io uart support fossil support digiboard support provides information available pcboard sys file database file multinode support file sharing multibbs support local sysop function key many utility included door author ckit library routine written entirely assembly language using slr optasm routine make use c library function possible compatible microsoft c microsoft quickc turbo c turbo c ckit library support small medium large model microsoft registered trademark quickc trademark microsoft corporation turbo c registered trademark borland international inc turbo c registered trademark borland international inc pcboard registered trademark clark development company wildcat registered trademark mustang software spitfire registered trademark buffalo creek software rbbspc copyright c tom mack capital pc software exchange quickbbs copyright c adam hudson remote access copyright c andrew milner continental software mbbs copyright c mike anderson digiboard copyright c digiboard eden prarie mn registration unregistered library display  unregistered copy etc  part signoff message registered version eliminates signoff msg time door closed please see registration information lot effort gone ckit make sure would operate reliably little effort part door author find program use please register help support shareware method program distribution registering also help fund development library ckit distributed shareware registration includes ù disk latest version ckit registered small utility program easy door testing wsource ù selfregistration program future release ckit ù technical support via electronic mail large memory model ckit download datacomp bb large model also work huge model access source code reading system file become available pcboard source file available information see address phone number listed end document global variable global functionsvariable naming convention ckit library defines number variable function ckit header file made public linker able resolve reference beginning ckit  functionsvariables available library begin prefix  ck  help prevent naming conflict globals source code knowing ckit name begin  ck  prevent collision public name contained library little concern like name used library simply redefine name name desire oldckith exactly previous user library oldckith redefines new name old name used library included oldckith present source code new library name would work change present source code example name desired library name    define sputs cksputs define dumpuser ckdumpuser define color ckcolor define newline cknewline define getcmdline ckgetcmdline would cause compiler reference new name reference old name color green sputs  command  null getcmdline  read input cmdline  newline dumpuser true strlen cmdline  see oldckith ckitdemoc ckitdemoh note variable  ck  prefix progname array name ckith file global variable global variable used bb system ckit library defines number variable ckith header file proper use variable allow programmer customize ckit library function meet particular application program need ckdumpuser                                  defined short ckdumpuser description variable set user hang hisher time run carrier lost sysop want return user bb system using function key f check flag major loop door program ckforceoffhook                                  defined short ckforceoffhook description variable set true false ckith file variable true modem placed offhook carrier dropped door returning system forceoffhook false door take modem offhook see ckith ckuserfile                                  defined short ckusersfile description variable set true false ckith file variable true ckit open user file variable available pcboardsys file opened user information available see ckith ckoption                                  defined unsigned char ckoption description variable set indicate user logged system macro ckit header file describes define exitdoor normal door exit define nocarrier dropped carrier define timeout keyboard timeout define sysopo sysop request define systemtime system time expired define logoff user logged normally handled internally ckit compatibility global variable cksilent pcboardsys doorsys wildcat dorinfoxdef                                  defined short cksilent description variable true prevent keyboard timeout beep sent local console controlled via program cknofkeys pcboardsys doorsys wildcat dorinfoxdef                                  defined short cknofkeys description variable true disable local sysop keyboard fkeys alt key except alth default false fkeys enabled cknosystem pcboardsys doorsys wildcat dorinfoxdef                                  defined short cknosystem description variable true tell opendoor attempt file open read information data structure used supporting bb supported ckit see opendoor detail cknostatus pcboardsys doorsys wildcat                                  defined short cknostatus description true tell ckit create status line must set desired state opendoor called opendoor called changed cklogoffcolor pcboardsys doorsys wildcat dorinfoxdef                                  defined short cklogoffcolor description variable used specifiy color exitmsg string see see ckith file color available example cklogoffcolor green note specified default color violet ckexitmsg pcboardsys doorsys wildcat dorinfoxdef                                  defined char ckexitmsg description variable longer available ckit please see cklogoffmsgs cklogoffmsg pcboardsys doorsys wildcat dorinfoxdef                                  defined char cklogoffmsg description variable longer available ckit please see cklogoffmsgs compatibility global variable ckdisplay pcboardsys                                  defined short ckdisplay description variable set indicate status local bb display file truefalse yes useful  x pcboardsys usage ckprinter pcboardsys                                  defined short ckprinter description variable set indicate status bb printer truefalse yes useful  x pcboardsys usage ckpagebell pcboardsys                                  defined short ckpagebell description variable set indicate status bb pagebell truefalse yes useful  x pcboardsys usage ckcallalarm pcboardsys                                  defined short ckcallalarm description variable set indicate status bb caller alarm truefalse yes useful  x pcboardsys usage ckpcb doorsys pcboardsys wildcat dorinfxdef                                  defined short ckpcb description variable set indicate whether ckit found pcboardsys file truefalse yes ckgap doorsys pcboardsys wildcat dorinfxdef                                  defined short ckgap description variable set indicate whether ckit found doorsys file truefalse yes ckpcb doorsys pcboardsys wildcat dorinfxdef                                  defined short ckpcb description variable set indicate whether ckit found pcboard version  pcboardsys file truefalse yes compatibility global variable ckwildcat doorsys pcboardsys wildcat dorinfxdef                                  defined short ckwildcat description variable set indicate whether ckit found wildcat callinfobbs file truefalse yes ckrbbs doorsys pcboardsys wildcat dorinfxdef                                  defined short ckrbbs description variable set indicate whether ckit found rbbs type dorinfoxdef file truefalse yes ckgeneric bb system                                  defined short ckgeneric description variable set indicate whether ckit found genericsys file truefalse yes ckgeneric true door author stop ask user hisherfirst last name ckit longer generic sprintf  nplease enter first last name max  getcmdlineraw strncpy ckfullname cmdline ckfossil bb system                                  defined short ckfossil description variable set indicate whether fossil driver use truefalse yes use test conflict door operation may support fossil driver instance shelling zmodem file xfer ckdigiboard bb system                                  defined short ckdigiboard description variable set indicate whether digiboard intelligent async driver use truefalse yes use test conflict door operation may support digiboard instance shelling zmodem file xfer nt support digiboard compatibility global variable ckgraphics pcboardsys doorsys wildcat dorinfoxdef                                  defined short ckgraphics description variable set indicate status user graphic mode support ansi x standard command truefalse yes cknonibm pcboardsys doorsys wildcat dorinfoxdef                                  defined short cknonibm description variable set indicate whether caller using bit instead bit using bit nt allow ibm graphic character displayed correctly truefalse yes ckerrorconnection pcboardsys doorsys wildcat                                  defined short ckerrorconnection description variable set indicate status modem errorconnection truefalse yes compatibility global variable cklocal pcboardsys doorsys wildcat dorinfoxdef                                  defined short cklocal description variable set indicate status localremote operation door truefalse yes ckexpert pcboardsys doorsys                                  defined short ckexpert description variable set indicate status expertnovice mode user truefalse yes ckeventactive pcboardsys                                  defined short ckeventactive description variable set indicate status system event truefalse yes useful x pcboardsys usage ckeventslide pcboardsys                                  defined short ckeventslide description variable set indicate whether system event moved truefalse yes useful x pcboardsys useage cksysopnext pcboardsys                                  defined char cksysopnext description c string indicates status sysop next flag n sysop next x exit system space nothing pending useful  x pcboardsys usage cknetchat pcboardsys                                  defined char cknetchat description c string indicates status user netchat u unavailable available useful  x pcboardsys usage ckmemmsg pcboardsys                                   defined long ckmemmsg description memorized message pointer raw form use need convert qbasic single mks ieee long conversion routine available support bb compatibility global variable ckaport pcboardsys doorsys wildcat dorinfoxdef                                  defined char ckaport description c string ascii string com port use determined using digiboard indicate port found system file see also ckport ckbpsopen pcboardsys doorsys wildcat                                  defined char ckbpsopen description c string ascii string bb dte modem baud rate available pcboard  ckbaudrate pcboardsys doorsys wildcat dorinfoxdef                                  defined char ckbaudrate description c string ascii string caller baud rate dce rate ckuartbase pcboardsys doorsys wildcat dorinfoxdef                                  defined short ckuartbase description contains uart base address ckit currently using either default passed port command ckirq pcboardsys doorsys wildcat dorinfoxdef                                  defined short ckirq description contains irq ckit currently using either default passed port command ckfirstname pcboardsys doorsys wildcat dorinfoxdef                                  defined char ckfirstname description c string ascii string caller first name ckpassword pcboardsys doorsys wildcat                                  defined char ckpassword description c string ascii string caller password ckfullname pcboardsys doorsys wildcat dorinfoxdef                                  defined char ckfullname description c string ascii string caller fullname compatibility global variable ckpagelength pcboardsys doorsys wildcat dorinfoxdef                                  defined byte ckpagelength description page length user information available pcboard  default door author adjust desired also used displayfile setting equal continous nonstop cklanguage pcboardsys                                  defined char cklanguage description c string ascii string caller language space english cktimelogged pcboardsys doorsys wildcat                                  defined char cktimelogged description c string ascii string time caller logged onto bb ckeventtime pcboardsys doorsys                                  defined char ckeventtime description c string ascii string system event time bb hh mm available pcboard  cktimeon pcboardsys                                  defined short cktimeon description variable indicates time minute past midnight user logged ckprevused pcboardsys                                  defined short ckprevused note na pcboard  description variable indicates time minute used previous call today ckuserrecord pcboardsys doorsys wildcat                                  defined unsigned ckshort userrecord description variable hold user record number ckdloadlimit pcboardsys                                  defined short ckdloadlimit description variable hold user allowed dload kbytes system compatibility global variable cktimelimit pcboardsys                                  defined short cktimelimit description variable hold user bb system time limit minute cktimecredit pcboardsys                                  defined short cktimecredit description variable hold time user given po neg added pcboardsys returned bulletin board cktimecreditold pcboardsys                                  defined short cktimecreditold description variable hold time credit minute po neg originally found pcboardsys door opened added timecredit door closed cktimeadded pcboardsys                                  defined short cktimeadded description variable hold area user time added far minute ckminleft pcboardsys doorsys wildcat dorinfoxdef                                  defined short ckminleft description variable hold user time left system time door opened static want time remaining door would need call minsleftsystem procedure ckminremaining doorsys                                  defined char ckminremaining description thing minleft available string doorsys used see minleft static cksecremaining doorsys                                  defined char cksecremaining description variable hold second left system time door opened static want time remaining door would need call minsleftsystem procedure compatibility global variable ckport pcboardsys doorsys wildcat                                  defined short ckport description variable hold com port use equal local mode using digiboard indicate digiboard channel use cknode pcboardsys doorsys wildcat dorinfoxdef                                  defined char cknode note na pcboard  description string hold node use equal space network active ckconferences doorsys wildcat                                  defined char ckconferences description pointer string conferencesforums user registered ckparity doorsys wildcat                                  defined short ckparity description represent ascii character parity use note string either ascii x x ckprotocol pcboardsys doorsys wildcat                                  defined char ckprotocol description string containing user current protocol setting pcboardgapspitfire list st char protocol wildcat give entire protocol name cksecuritylevel doorsys wildcat dorinfoxdef                                  defined char cksecuritylevel description string containing user security level see also ckusersec ckcurrentconf doorsys                                  defined short ckcurrentconf description conference number user exited door ckcallerbday doorsys wildcat                                  defined char ckcallerbday description string containing caller birthday mmddyy available pcboard system compatibility global variable ckmaindir doorsys                                  defined char ckmaindir description string containing path main directory wherever user file located ckgendir doorsys                                  defined char ckgendir description string containing path gen directory cksysopname doorsys dorinfoxdef                                  defined char cksysopname description string containing sysop first name cksysopalias doorsys                                  defined char cksysopalias description string containing sysop alias name ckansing doorsys                                  defined short ckansing description ansi supported caller using ng mode truefalse yes ckrecordlock doorsys                                  defined short ckrecordlock description user record locking truefalse yes ckdefaultcolor doorsys                                  defined char ckdefaultcolor description string containing system default color cklastcalled doorsys                                  defined char cklastcalled description string containing user last time called hh mm cklastfilescan doorsys wildcat                                  defined char cklastfilescan description string containing user last new file scan mmddyy compatibility global variable ckdailyfiles doorsys wildcat                                  defined char ckdailyfiles description string containing number file user download far today ckdailybytes doorsys wildcat                                  defined char ckdailybytes description string containing number k byte user downloaded far today cktotaldoors doorsys                                  defined char cktotaldoors description string containing number door user opened ckmsgsleft doorsys                                  defined char ckmsgsleft description string containing total number message left user ckmaxfiles doorsys                                  defined char ckmaxfiles description string containing max number file allowed ckuploadkbytes doorsys                                  defined char ckuploadkbyte description string containing total  k  byte uploaded ckdownloadkbytes doorsys wildcat                                  defined char ckdownloadkbyte description string containing total  k  byte downloaded ckdloadtotal doorsys wildcat                                  defined char ckdloadtotal description string containing total file downloaded ckuploadtotal doorsys wildcat                                  defined char ckuploadtotal description string containing total file uploaded compatibility global variable ckmonitortype wildcat                                  defined char ckmonitortype description string containing monitor type monocolor note ckit set graphic truefalse depending setting see graphic ckmaxsec wildcat                                  defined char ckmaxsec description string containing system maximum user security level wildcat system ckhighmsg wildcat                                  defined char ckhighmsg description string containing user highest message read cknameinuse wildcat                                  defined byte cknameinuse description set truefalse called alreadyconnected wildcat def file ckdooropened wildcat                                  defined short ckdooropened description door opened run door ckbbsname dorinfoxdef                                  defined char ckbbsname description name bb system running door ckpcbsysbuf pcboardsys                                  defined byte ckpcbsysbuf description pointer buffer holding pcboardsys file read buffer written back pcboardsys closedoor called provided door author manipulate byte pcboardsys file turn written back pcboardsys file global variable part structure  ckuser  defined ckith file user structure member available door author specifies userfiles true see system pcboard version x member available author specifies userfile true used pcboard version  door author specify userfile file true use structure plan using structure andor updateuser must using word alignment compiling door program ckit version  ckit version  greater must use byte alignment ckusername see also fullname                                  defined char ckusername description c string ascii string caller fullname ckusercity                                  defined char ckusercity description c string ascii string caller city state ckuserpwrd                                  defined char ckuserpwrd description c string ascii string caller password ckuserbphone                                  defined char ckuserbphone description c string ascii string caller business phone number ckuserphone                                  defined char ckuserphone description c string ascii string caller home phone number ckuserlastdate                                  defined char ckuserlastdate description c string ascii string caller last date system format yymmdd global variable part structure  ckuser  defined ckith file information available user file ckuserlasttime                                  defined char ckuserlasttime description c string ascii string caller last time system format hh mm ckuserexpert see also expert                                  defined char userexpert description c string ascii string caller expert mode n ckuserprotocol                                  defined char ckuserprotocol description c string ascii string caller protocol type effect ckuserpackedbyte                                  defined byte ckuserpackedbyte description hold pcboard packed byte indicate various user option user file ckuserfiledate see also lastfilescan                                  defined char ckuserfiledate description c string ascii string caller last dir scan yymmdd format ckusersecurity                                  defined byte ckusersecurity description variable hold user security level determined user file ckusertotalcalls                                  defined short ckusertotalcalls description variable hold user total call system ckuserpagelength see also pagelength                                  defined byte ckuserpagelength description variable hold user page setting ckuseruploads see also uploadtotal                                  defined short ckuseruploads description variable hold user total uploads global variable part structure  ckuser  defined ckith file information available user file ckuserdownloads see also dloadtotal                                  defined short ckuserdownloads description variable hold user total downloads ckuserdloadbytes see also dloadtotal                                  defined double ckuserdloadbytes description variable hold user total daily downloaded byte determined user file variable raw qbasic mkd use c need converted qbasic real c ieee float conversion routinesexamples available support bb changing variable also converted back qbasic real ckusercomment                                  defined char ckusercomment description c string ascii string caller user maintained comment ckusercomment                                  defined char ckusercomment description c string ascii string caller sysop maintained comment ckusertimeused                                  defined short ckusertimeused description elapsed time system minute ckuserexpiredate                                  defined char ckuserexpiredate description c string ascii string caller expiration date yymmdd format ckuserexpirelevel                                  defined byte ckuserexpirelevel description user expired security level read pcboard user file global variable part structure  ckuser  defined ckith file information available user file ckusercurrentconf                                  defined byte ckusercurrentconf description last conference user read pcboard user file ckuserconferences                                  defined byte ckuserconferences description byte containing bitmap conference user registered  raw  form decoded used encoded storing routine available support bb ckuserexpireconf                                  defined byte ckuserexpireconf description byte containing bitmap conference user registered hisher expiration date  raw  form decoded used encoded storing routine available support bb ckuserscanconf                                  defined byte ckuserscanconf description byte containing bitmap conference user registered desire mail scan  raw  form decoded used encoded storing routine available support bb ckuserdloadtotal see also dloadtotal                                  defined double ckuserdloadtotal description variable hold user total downloaded byte determined user file variable raw qbasic mkd use c need converted qbasic real c ieee float conversionexample routine available support bb changing variable also converted back qbasic real global variable part structure  ckuser  defined ckith file information available user file ckuseruploadtotal see also dloadtotal                                  defined double ckuseruploadtotal description variable hold user total uploaded byte determined user file variable raw qbasic mkd use c need converted qbasic real c ieee float conversionexample routine available support bb changing variable also converted back qbasic real ckuserdeleteuser                                  defined char ckuserdeleteuser description c string ascii string delete user flag n ckuserlastmsgread see also dloadtotal                                  defined long ckuserlastmsgread description variable hold user last message read main conference variable raw qbasic mks use c need converted qbasic real c ieee float conversionexample routine available support bb changing variable also converted back qbasic real ckuserlastread see also dloadtotal                                  defined long ckuserlastread description variable array contains last read message pointer conference  raw qbasic mks use c need converted qbasic real c ieee float conversionexample routine available support bb changing variable also converted back qbasic real system global variable variable available bb system used customization door program must defined others using meant read variable available globally used conjuction high level function noted char progname pcboardsys doorsys wildcat generic                                  defined char progname description set door program name display status line sysop screen maximum length character exceed note option must define progname even plan using ckcmdline pcboardsys doorsys wildcat generic                                  defined byte ckcmdline description used getcmdline read user keyboard input please see ckitdemoc usage see also ckgetcmdline ckpar pcboardsys doorsys wildcat generic                                  defined char ckpar description used getnextpar parse stacked command please see ckitdemoc usage see also ckgetcmdline ckgetnextpar ckscancode pcboardsys doorsys wildcat generic                                  defined sizet ckscancode description variable nonzero contain keycode nonstandard key ibm keyboard ff pgdn pgup etc remote user must type terminal program allow passing keycodes qmodem  doorway  mode one example please see ckinput ckgetcmdline ckitdemoc example see also ckgetcmdline ckkeysource pcboardsys doorsys wildcat generic                                  defined short ckkeysource description variable input getcmdline came local console came remote console see also ckgetcmdline ckinput system global variable cklinenum pcboardsys doorsys wildcat generic                                  defined short cklinenum description variable incremented time call newline made see also ckpagelength cknewline cklogoffmsgs pcboardsys doorsys wildcat generic                                  defined char cklogoffmsgs description pointer array pointer printed time door closed array pointer length element message printed depends value ckoption code look array pointer exit message us ckoption variable pick one print pointer array pointer allows define array pointer exit message allows message length message printed based value ckoption  respectfully see also variable ckoption must order example create log message size source code char option  new returning system msg sizen  char option  new carrier dropped msg sizen  char option  new keyboard timeout msg sizen  char option  new sysop request return bb msg sizen  char option  new system time expired msg sizen  char option  new thanks calling msg size  static char logoffs  create array ptrs  option option option option option option cklogoffmsgs logoffs  set ckit pointer custom message system global variable cklogoffmsgs cont                                  define log message ckit internal default want change one individual log message leave rest alone use pointer initially contained cklogoffmsgs index one want change limit size max indicated message limit changing individual logoff internal library message max size  option  internal  returning board  msg  option  internal  carrier  msg  option  internal  keyboard timeout  msg  option  internal  sysop request  msg  option  internal  time expired  msg  option  internal  goodbye  msg  change one internal logoff library message use pointer originally contained cklogoffmsgs indexing use strcpy change example change  returning board  msg source code char exitmsg  returning systemn   max allocated lib  strcpy cklogoffmsgs exitmsg  using orignal pointer copy new string  change  goodbye  msg source code char logoffmsg  thanks callingn   max allocated lib  strcpy cklogoffmsgs logoffmsg  use original pointer  provide array pointer change message size desired look ckitdemoc ckitdemoh system global variable ckgenmsgs pcboardsys doorsys wildcat generic                                  defined char ckgenmsgs description pointer array pointer ckit internal message array pointer length element code look array pointer index message print pointer general array pointer allows define array pointer internal message message length message printed based position array ordering array screen display message event pending warning time adjusted press enter continue message used forceenter sysop chat active msg sysop chat end msg sysop exited do msg sysop back do msg enternone msg used getdefn getdefen enteryes msg used getdefyn enterno msg used getdefyn enter e n n nonstop msg used nomore displayfile msg used nomore displayfile ckgenmsgs ckitmsgs  set pointer custom message ptrs  define message ckit internal default want change one individual message leave rest alone use pointer initially contained ckgenmsgs index one want change limit size max indicated message limit changing individual general internal library message max size  msg  internal  screen  msg  msg  internal  event pending  msg  msg  internal  enter cont  msg  msg  internal  sysop chat  msg  msg  internal  chat end  msg  msg  internal  exit do  msg  msg  internal  return do  msg  msg  internal  prompt  msg  msg  internal  prompt  msg  msg  internal  prompt  msg  msg  internal  prompt  msg  msg  internal   msg  system global variable ckgenmsgs cont                                  change one internal general library message use pointer originally contained ckgenmsgs indexing use strcpy change example change  screen display  msg source code char displaymsg  screen   max allocated lib  strcpy ckgenmsgs displaymsg  using orignal pointer copy new string  change  exited do  msg source code char dosretmsg  sysop exited dosn   max allocated lib  strcpy ckgenmsgs dosretmsg  use original pointer  provide array pointer change message size desired look ckitdemoc ckitdemoh cksystemtimehhmmss pcboardsys doorsys wildcat generic                                  defined char cksystemtimehhmmss description string contain current system time form hh mm s available general use cktodaysdatemmddyy pcboardsys doorsys wildcat generic                                  defined char cktodaysdatemmddyy description string contain current system date form mm dd yy available general use ckerrormsg pcboardsys doorsys wildcat generic                                  defined char ckerrormsg description error message used displayfile define ckit default standard error message max char including null ckchatmode pcboardsys doorsys wildcat generic                                  defined short ckchatmode description variable true chat mode sysop drop do active use refresh screen needed responsiblity deassert variable used set false system global variable ckdots                                  defined byte ckdots description variable set nonzero value echo value character remote local screen using input getcmdline instance setting ckdots cause dot echoed screen handy using password etc resetting back null resume normal operation standard data type standard data type ckith defines number useful data type byte                                  defined typedef unsigned char byte description byte data type useful serial communication since provides easier logical way handling bit data uart used serial communication function function ckit library contains variety function described follows summary present exact syntactic model ckit library function description describes function purpose used application program return value explains possible return value ckit library function see also list similar related ckit library function example illustrates ckit library function could actually used application program function listed example simply listed function may indicate called see prototyped called go function page ie opendoor used example example may simply refered opendoor reality opendoor really opendoor char  library function classified different type high level intermediate low level normally door would need make use function except high level function handle watch system timeouts carrier detects keyboard timeouts etc need control function available warn lower level function use le check automatically use unless function ckopendoor                                  summary include  ckith  short ckopendoor description open door function initializes vector read bb system information must called first first pointer pathname system file second pointer pathname user file designated usersfiletrue opendoor also accept pointer data structure cknosystem true pcboard system long defined usersfile false ckit attempt use second pointer ever specify port aaaa x used must last parameter passed opendoor closedoor must called exiting program call opendoor see ckitdemoc example return value return null successful otherwise return error code listed see also ckclosedoor example example assumes pathfilenames passed command line ie programname pathfilename pathfilename port include  ckith  short result main int argc char argv argc ckopendoor argv argv argv  note displayinfo argv yourmainprogram argv else optional printf  error opening door  see ckclosedoor exit opendoor return code successful unable open bb system file pcboardsys doorsys etc problem reading bb system file unrecognized bb file type unable open pcboard user file invalid user record problem seeking user record problem reading user record port command syntax error fossil driver specified fossil driver installed digiboard driver installed memory allocation problem function ckopendoor cont                                  note port usersfile optional user door needed specify nonstandard port address irq syntax port aaaa x aaaa base address x irq nt matter whether port aaaa x second third parameter depending opening user file passed opendoor long last parameter passed note also matter order cmd line argument listed thing matter order passed opendoor function could also system path part config file door would read config file pas path read opendoor string ptr port optional ckit default standard address irqs port used based port number read bb file ckit assume com f irq com e irq com e irq com e irq sysop different nonstandard port address irq could use port cmd change default reason include usage port door program documenation example program wouldcould called opendoor function would called notice port always second third last argument passed user door program wanted use ckit also support use fossil driver syntax fossil driver port f p f tell ckit use fossil driver communication p following tell port use fossil example port f tell ckit use fossil driver port digiboard intelligent async board supported thru universal do driver digiboard syntax fossil driver except replace f give channel number use example port tell ckit door connected digiboard use channel digiboard door author also include information door documentation file include call opendoor opendoor work like expect first pointer string pointer bb system file always next check see usersfile true expect second pointer string pointer pcboard user file usersfile false look user file either case opendoor search stack frame pointer word  port  nd rd string pointer passed find utilize use default port addressesirq defined com port read system file reason opendoor work whether actually port command passed door author provide user door ability pas port command using nonstandard port function ckopendoor cont                                  example assume doorcfg config file door program read depends desired door program would need document door documentation order cmd line door program read config file pas system name path opendoor also include info port aaaa x doc include argument opendoor well short example reading config file passing system name path assuming st line config file system pathname main int argc char argv short handle bytesread char bbssyspath handle open argv ordonly  open config file  bytesread read handle bbssyspath  read system pathname  bbssyspath bytesread   null terminate  close handle  close config file  ckopendoor bbssyspath argv  include arg port cmd  ckclosedoor program cmd line could one following doorprgm configcfg using standard port doorprgm configcfg porte using nonstandard port doorprgm configcfg port f using fossil driver port doorprgm configcfg port using digiboard channel may need want config file door program could simply sysop pas system infomation command line case program cmd line could following doorprgm c wccallinfobbs using standard port doorprgm c wccallinfobbs portf using nonstandard port doorprgm c wccallinfobbs port f using fossil driver port doorprgm configcfg port using digiboard channel door author would explain documentation sysop would set door program depending decide handle reading system file sure include information port aaaa x port f x port x command well function ckopendoor cont                                  highly recommeded include door source code c atexit function call function test dooropen called closedoor already called program runtime error call closedoor interrupt vector restored prevent system crash take look ckitdemoc example short opened  flag know opendoor called  short closed  flag know closedoor beeb called  void shutdown void  shuts door normal error occurs  main int argc char argv opendoor argv argv opened true  door opened  atexit shutdown  close door reset vector etc need case run time error occurs door check call closedoor need made  void shutdown void opened closed closedoor closed true function ckopendoor cont                                  another way opendoor used thru use data structure defined typedef struct ckitgeneric char port  com  short minleft  minute left  allows support bb program door program supported directly ckit would read bb system file obtain necassary information data structure set cknosystem true call opendoor short example reading wwiv file wwiv directly supported ckit typedef struct ckitgeneric char port  com x com local  short minleft  minute left  struct ckitgeneric ckgen  name whatever want  char ptr wwiv openfile bbssystemfile readfile bbssystemfile setupckgen  set data structure  cknosystem true ptr bbssystemfile else ptr bbssystemfile cknosystem false opendoor ptr argv nd arg passing port aaaa x cmd take look ckitdemoc file complete example function ckclosedoor high level                                  summary include  ckith  void ckclosedoor void description close door function reset vector close file opened print log message must called last opendoor closedoor must called exiting program call made opendoor certainly cause system lock see using c atexit function version  closedoor check opendoor called closedoor already called help prevent system hangups return value value returned see also ckopendoor example include  ckith  main int argc char argv argc ckopendoor  wccallinfobbs  door program ckclosedoor function ckupdateuser pcboard  high level                                  summary include  ckith  void ckupdateuser description update user accept pointer user structure member update see user structure function work pcboard  usersfile must set true ckit update user file door closed want ckit update user record change made set usersfile false calling closedoor use function set compiler use word alignment ckit v note version  need use byte alignment return value value returned see also ckuser structure example change user security comment field motice must pas address member update user structure include  ckith  main int argc char argv usersfile true static char newcomment  ckituser  argc ckopendoor argv argv pas system file port cmd ckusersecurity ckupdateuser ckusersecurity strcpy ckusercomment newcomment ckupdateuser ckusercomment ckclosedoor function cksputs high level                                  summary include  ckith  void cksputs char description sputs function display single null termintated c string local remote console expects pointer string type byte char displayed handle ansi see cksputstd ansi usage return value value returned see also sprintf cksputv cksputc cksputsn example include  ckith  static byte string  test  main int argc char argv argc ckopendoor argv  pas system file  cksputs string cksputs  also test  ckclosedoor function cksputstd high level                                  summary include  ckith  void cksputstd char description sputstd function display single null termintated c string local remote console expects pointer string type byte char displayed function identical sputs except us std output function used ansi code ctrl char needed sent local remote console return value value returned see also sprintf cksputv cksputc cksputsn example use sputstd change backgroundforeground color include  ckith  define cyanblue define yellowbrown define redgreen define redcyan define cyanred define cyanmagenta define bluegrey static char ansicolor   mcyan blue    myellow brown    mred green    mred cyan    mcyan red    mcyan magenta    mblue grey  main int argc char argv argc ckopendoor argv  pas system file  cksputstd ansicolor cyanblue cksputstd ansicolor yellowbrown cksputstd ansicolor redgreen cksputstd ansicolor redcyan cksputstd ansicolor cyanred cksputstd ansicolor cyanmagenta cksputstd ansicolor bluegrey ckclosedoor function cksputv high level                                  summary include  ckith  void cksputv description sputv function display single null terminated c string local remote console expects variable argument pointer string type byte char displayed list pointer must end null pointer likely either cause garbage printed even hangup return value value returned see also sprintf cksputs cksputc cksputsn example example print string pointer list terminated null pointer include  ckith  static byte string  test  main int argc char argv argc ckopendoor argv  pas system file  static byte string  test  cksputv string  also test  null ckclosedoor note alternative using sputv would include function sprintf source code could use function would printf function already protyped ckith function sprintf high level                                  summary include  ckith  void sprintf char  description sprintf function used format output sent local remote console exactly cprintf function c use must include source code listed door program since sprintf actual part ckit library note want send ansi string change sputs sprintf function sputstd create another stdprintf function using sputstd output return value value returned see also sprintf sputs sputv include source code door program use sprintf function already prototyped ckith modify need  printf function sending output port  void sprintf char sformat  valist argpointer char buffer  string buffer char  vastart argpointer sformat vsprintf buffer sformat argpointer sputstd buffer  change sputstd ansi  vaend argpointer example  sending string port using sprintf  include  ckith  short number main int argc char argv argc ckopendoor  c rbbsdorinfodef  argv sprintf  hello number  firstname number ckclosedoor function cksputsn high level                                  summary include  ckith  void cksputsn char description sputsn function display single null terminated c string local console expects pointer string type byte char displayed return value value returned see also sprintf cksputv cksputc cksputstd example include  ckith  static byte string  test  main int argc char argv argc ckopendoor argv argv include arg port cmd static byte string  test  cksputsn string cksputsn  also test  ckclosedoor function cksputc high level                                  summary include  ckith  void cksputc byte description sputc function display single byte char local remote console return value value returned see also sprintf cksputs cksputc example example print single byte ascii local remote console include  ckith  byte bytetosend x short handle bytesread char pcbsyspath main int argc char argv argc handle open argv ordonly bytesread read handle pcbsyspath pcbsyspath bytesread  close handle opendoor pcbsyspath argv include arg port cmd cksputc bytetosend ckclosedoor function cknewline high level                                  summary include  ckith  void cknewline void description newline function sends carriage return line feed local remote console increment cklinenum return value value returned see also sprintf cksputs cksputc cklinenum example example print single crlf local remote console include  ckith  main int argc char argv argc ckopendoor argv argv cknewline ckclosedoor function ckclearrow high level                                  summary include  ckith  void ckclearrow short description clearrow function clear given row screen local remote console row used caller graphic ansing mode return value value returned see also ckcleareol ckclrscreen example example print string line era string include ckith char prompt  enter filename view  main int argc char argv argc ckopendoor argv argv pas system file port cmd ckposcursor cksputs prompt ckposcursor cksputs  ready clear row press key  waitkeypress ckclearrow  clear row  cknewline ckclosedoor function ckcleareol high level                                  summary include  ckith  void ckcleareol void description cleareol function clear end line current cursor position used caller graphic ansing mode return value value returned see also ckcleareol ckclrscreen example example clear end line screen local remote console include ckith char prompt  enter filename view  main int argc char argv argc ckopendoor  c wildcatcallinfobbs   porte  cknewline cksputs  press key clear end line  cknewline cksputv prompt  r  null waitkeypress ckcleareol cknewline ckclosedoor function ckclrscreen high level                                  summary include  ckith  void ckclrscreen void description clrscreen function clear entire screen local remote console either ascii graphic ansing mode return value value returned see also ckclearscreen example example clear screen localremote console include ckith main int argc char argv argc ckopendoor argv ckclrscreen ckclosedoor function ckclearscreen high level                                  summary include  ckith  void ckclearscreen void description clearscreen function clear entire screen local console including status line return value value returned see also ckclrscreen example example clear screen local console include ckith main int argc char argv argc ckopendoor argv ckclearscreen ckclosedoor function ckposcursor high level                                  summary include  ckith  void ckposcursor short short description poscursor function position cursor row column using ansi caller must graphic ansing mode action take place row column ckit let local screen position cursor status line area return value value returned example example position cursor row column localremote console include  ckith  short row short column main int argc char argv argc ckopendoor argv ckposcursor row column ckclosedoor function cksetrc high level                                  summary include  ckith  void cksetrc short short description setrc function position cursor row column using bios local screen row column ckit let cursor placed status line area local screen return value value returned example example position cursor row column local console include  ckith  short row short column main int argc char argv argc ckopendoor argv cksetrc row column ckclosedoor function ckbackspace high level                                  summary include  ckith  void ckbackspace short description backspace function backspace cursor short number space st char row whichever st destrutive backspace return value value returned example example backspace cursor prompt user input localremote console include ckith char prompt  enter filename view  main int argc char argv argc ckopendoor  c pcbpcboardsys   porte  cksputs  rnready test backspace  cksputs  press key ready  cknewline waitkeypress ckcolor yellow cksputs prompt ckcolor red ckgetcmdline ckbackspace strlen prompt strlen cmdline ckclosedoor function ckcolor high level                                  summary include  ckith  void ckcolor short description color function selects color use using ansi caller must graphic mode action taken ckcolor set forground color leave background color return value value returned see also color macro macro section used ckit example example set color red localremote console see color macro ckith include  ckith  main int argc char argv argc ckopendoor argv ckcolor red ckclosedoor function cksetansi high level                                  summary include  ckith  short cksetansi short description allows manual program changing ansi capability excepts either truefalse normally ckit first open system file determines file whether user want ansi control ansing set graphic false wanted ansi control graphic ansing false graphic true information available genericsys cksetansi allows people using genericsys file select ansi control andor ansi control graphic return value return whatever passed see also ckgraphics ckansing example example turn ansi capability without graphic include  ckith  main int argc char argv argc ckopendoor argv ansing  true  set ansing  graphic false cksetansi ansing graphic ckclosedoor function ckgetcmdline high level                                  summary include  ckith  void ckgetcmdline void description read line input max byte echo screen leave cursor last key typed cr automatically check timeleft carrier call ckinput read array cmdline automatically map input uppercase also set keysource source input defined ckith function one would normally use user input input function intermediate low level function setting ckdots char cause char echoed remotelocal console filter ascii control charactors dec return value value returned see also ckinput ckgetnextpar ckkeysource ckwaitkeypress example example read keyboard localremote console array getcmdline also check scancodes receieved see ckitdemoc also include  ckith  main int argc char argv ckopendoor argv cknewline displaytime ckcolor green cksputs  command  ckgetcmdline  read input cmdline  ckdumpuser true strlen ckcmdline  ckscancode  ckdumpuser  true ckclosedoor exit ckscancode null ckcolor white readscancode cknewline ckgetnextpar  scan next parameter cmdline par  cknewline  process command  switch par case ansidemo break default ckcolor magenta cksputv   par  allowed try  null ckcmdline null function ckwaitkeypress high level                                  summary include  ckith  short ckwaitkeypress void description wait keypress wait cr autochecks carrier timeouts etc return ascii code key pressed true ckdumpuser go true otherwise return false also return true extended key pressed sysop function key pressed useful  hotkey  application also set keysource proper value return value ascii code keypressed true false see also ckcheckcr ckcheckkeypress ckinput ckgetcmdline example example wait keypress ckdumpuser include  ckith  prompt   press key continue  main int argc char argv argc ckopendoor argv ckcolor yellow cknewline cksputs prompt ckwaitkeypress ckbackspace strlen prompt ckclosedoor function ckforceenter high level                                  summary include  ckith  void ckforceenter void description prompt  press enter continue  wait cr automatic carrier timeleft sysop check return value none example example display string prompt force user press cr continue include  ckith  main int argc char argv argc ckopendoor argv ckcolor yellow cksputs  display stringrn  ckforceenter ckclosedoor function displaytime high level                                  summary include  ckith  void displaytime void description display xxxx used xxx left ckit function library instead using source code thing previous displaytime return value none see also minsleftsystem systemtimeused example see ckitdemoc also include  ckith  main int argc char argv ckopendoor argv argc ckopendoor systemptr portcmdptr displaytime void displaytime void color yellow cksputs   ckcolor green sprintf  used  systemtimeused prevused ckcolor red sprintf  left  minsleftsystem timecredit ckcolor yellow cksputs   function ckgetcmdlineraw high level                                  summary include  ckith  void ckgetcmdlinaw short description getcmdline era prompt input user input also expects length prompt passed return value value returned see also ckgetcmdline ckgetnextpar ckgetcmdline ckinput example example read keyboard localremote console array cmdline filename display file include  ckith  char prompt  enter filename display  main int argc char argv argc ckopendoor argv cksputs prompt ckgetcmdlineraw strlen prompt cknewline ckdisplayfile cmdline ckclosedoor function ckgetnextpar high level                                  summary include  ckith  char ckgetnextpar void description scan next stacked command cmdline array  par  par defined ckith return value return none available nonzero cmd available see also input getcmdline cmdline par global section example example read keyboard localremote console array getcmdline call getnextpar scan cmds entered include  ckith  main int argc char argv argc ckopendoor argv ckgetcmdline  read input cmdline  ckdumpuser true strlen cmdline  ckgetnextpar  scan next parameter cmdline par   process command  switch ckpar case ansidemo break default break ckclosedoor function cknomore high level                                  summary include  ckith  short cknomore void description display prompt  enter e n n nonstop  return nonstop yes also check ctrl k   prompt yellow rest green return value short value meaning described see also ckgetdef ckgetdefyn ckgetdefen example example loop time show keypress n n return include  ckith  short result main int argc char argv argc ckopendoor argv cksputs  rnready test nomore time  cknewline ckwaitkeypress result cknomore printf  nomore returned  result cknewline ckclosedoor function ckgetdefyn high level                                  summary include  ckith  void ckgetdefyn char short description display prompt string either  enteryes   enterno  based short value st prompt yellow default green short nonzero display  enteryes  short zero null display  enterno  call getcmdline user input return value none see also ckcmdline ckgetdef ckgetdefyn ckgetdefen example example loop time show value display include  ckith  short main int argc char argv argc ckopendoor argv cksputs  rnready test getdefyn  cknewline ckgetdefyn  continue  cksputv  entered  cmdline null cknewline ckclosedoor function ckgetdefen high level                                  summary include  ckith  void ckgetdefen char description getdefyn except default string  enternone  appended st prompt yellow default green call getcmdline user input return value none see also ckcmdline ckgetdef ckgetdefyn ckgetdefen example include  ckith  main int argc char argv argc ckopendoor argv cksputs  rnready test getdefne  cknewline ckgetdefne  enter filename  cksputv  entered  cmdline null cknewline ckclosedoor function ckgetdef high level                                  summary include  ckith  void ckgetdef char char description getdefen except colored prompt user defineable st prompt yellow nd one green call getcmdline user input return value none see also ckcmdline ckgetdef ckgetdefyn ckgetdefen example print prompt print user input static char prompt  enter filename  static char prompt  enter quit  include  ckith  main int argc char argv argc ckopendoor argv cksputs  rnready test getdef  cknewline ckgetdef prompt prompt cksputv  entered  cmdline null cknewline ckclosedoor function ckpromptdef high level                                  summary include  ckith  void ckpromptdef char char description getdef except call getcmdline st prompt yellow nd prompt green return value none see also ckcmdline ckgetdef ckgetdefyn ckgetdefen example print prompt static char prompt  enter filename  static char prompt  enter quit  include  ckith  main int argc char argv argc ckopendoor argv cksputs  rnready test promptdef  cknewline ckpromptdef prompt prompt ckgetcmdline cknewline ckclosedoor function ckgetdefn high level                                  summary include  ckith  void ckgetdefn char char description getdef except appends  enternone  end call getcmdline user input return value none see also ckcmdline ckgetdef ckgetdefyn ckgetdefen function ckdosshell high level                                  summary include  ckith  short ckdosshell char char description execute program pointed arg arg passed command line argument program arg must char do limit function us spawnlp execute program plan shell need use function since disable keyboard timer shell taking place perform clean upon reentry call us c spawnlp function pwait return value  error check c global errno null error see also f local shell do ckitdemoc example download file using zmodem taken ckitdemoc include  ckith  char zmodemcmds  buffer build zmodem command  main int argc char argv argc ckopendoor argv color green sprintf  nready send press enter begin  docfilename dumpuser true checkcr break sprintf zmodemcmds  portx x x pb pa handshake ct sz  uartbase irq docfilename dosshell  dsz  zmodemcmds sputs  natransfer aborted  else sputs  ntransfer complete  ckclosedoor function ckdisplayfile high level                                  summary include  ckith  short ckdisplayfile char description display file localremote console automatic use pagelength control k check prompting close file done expects pointer namepath file display pagelength prompting disabled use advantage file want prompting setting ckuserpagelength calling displayfile make sure save original value ckuserpagelength need later function automatically attempt display graphic file user graphic display noninterruptable menu set pagelength null calling function door author decide want handle see call done borland open msc dosopen library open filename ordonly odenynone share compatible mode return value return nonzero error desired check c global errno cause problem see also none example example display file ckitm force user press enter done include  ckith  main int argc char argv argc ckopendoor argv strcpy filename  ckitm  ckgraphics ckdisplayfile filename else strcat filename  g  ckdisplayfile filename ckforceenter ckclosedoor function ckdebugon high level                                  summary include  ckith  void ckdebugon void alias ckcarrieron description call function debugging door disable keyboard timer among thing trying debug door make sure remove call releasing door keyboard timeout function called opendoor also used needed use transmitmodem door opened disable ckdumpuser going true make sure turn debug back using debugoff return value none example include  ckith  main int argc char argv argc ckopendoor argv ckdebugon cklowerdtr  drop user  ckraisedtr ckwait  wait modem reset  ckflushrqueue  flush receive queue  cktransmitmodem  atdt  ckdebugoff cktqueuelen  wait modem  cknewline delay ckdumpuser true  wait modem  ckgetcmdline cknewline cksputv  modem returned  cmdline null break ckclosedoor function ckdebugoff high level                                  summary include  ckith  void ckdebugon void alias ckcarrieroff description call debugon reenable keyboard timer etc called opendoor return value none example include  ckith  main int argc char argv argc ckopendoor argv ckdebugon  debugging door  ckdebugoff ckclosedoor function ckinput intermediate level                                  summary include  ckith  void ckinput byte short description read line input specified length echo screen leave cursor last key typed cr automatically check timeleft carrier expects char array pointer store input max length input read note call input purge buffer use null max length must exceed size array must include null char sizeof array also set keysource setting ckdots char cause char echoed localremote console return value value returned see also ckgetcmdline ckinkey ckgetkey ckkeysource ckwaitkeypress ckcheckctrlk example example read keyboard input localremote console array usrinput max byte read equal byte set keysource equal source input note  intermediate  level function would normally need use function getcmdline would normally used handle input include  ckith  main int argc char argv argc ckopendoor argv ckinput usrinput sizeof usrinput ckclosedoor function ckchecktimeleft intermediate level                                  summary include  ckith  void ckchecktimeleft void description check time left system automatically set ckdumpuser time expired included major program loop going use return value none see also displaytime ckgetcmdline example function normally handled getcmdline input normally need use include  ckith  main int argc char argv argc ckopendoor argv ckchecktimeleft ckdumpuser  true ckclosedoor ckclosedoor ckminsleftsystem intermediate level                                  summary include  ckith  short ckminsleftsystem void description return time left door including timecredit given set ckdumpuser expired time returned negative minute include time credit given door return value short value minute remaining door see also displaytime ckgetcmdline timecredit example include  ckith  minutesleft main int argc char argv argc ckopendoor argv color yellow sputs   color green sprintf  used  systemtimeused prevused color red sprintf  left  minsleftsystem timecredit color yellow sputs   ckclosedoor cksystemtimeused intermediate level                                  summary include  ckith  short cksystemtimeused void description return time used minute since door opened set ckdumpuser include time prev used door return value short value minute used since door opened see also displaytime prevused example include  ckith  minutesleft main int argc char argv argc ckopendoor argv color yellow sputs   color green sprintf  used  systemtimeused prevused color red sprintf  left  minsleftsystem timecredit color yellow sputs   ckclosedoor function ckadjusttimeallowed intermediate level                                  summary include  ckith  void ckadjusttimeallowed short description adjust user time left system automatically update pcboardsys reflect change function effective system using pcboardsys return value none see also example complete example see ckitdemoc included ckgetnextpar  scan next parameter cmdline par  strcmpi thinkingof par ckcolor green cksputs  right get minute bonus  ckadjusttimeallowed else ckcolor blue cksputv  wrong lose minute thinking  thinkingof   null adjusttimeallowed  function ckcheckevent intermediate level                                  summary include  ckith  short ckcheckevent void description check time left conflict event return value conflict otherwise return minute left event see also ckeventminutes ckminsbeforeevent example ckit automatically check event conflict function would normally used function ckeventminutes intermediate level                                  summary include  ckith  short ckeventminutes void description check minute past midnight event scheduled function normally handled ckit function would normally used return value number minute past midnight event scheduled run see also ckcheckevent ckminsbeforeevent include  ckith  main int argc char argv argc ckopendoor argv ckshort eventmins ckeventmins eventminutes ckclosedoor function ckminsbeforeevent intermediate level                                  summary include  ckith  short ckminsbeforeevent void description check minute left event current time return value minute event current time see also ckcheckevent ckeventminutes example include  ckith  main int argc char argv argc ckopendoor argv short minsbeforeevent minsbeforeevent ckminsbeforeevent ckclosedoor function ckdelay intermediate level                                  summary include  ckith  void ckdelay short description general purpose delay millisecond minumum m short must function good msc library turbo library use borland delay function see also ckwait return value none function ckwait intermediate level                                  summary include  ckith  void ckwait short description general purpose delay second minumum sec short must le one result  second delay use ckdelay return value none see also ckdelay function ckpurgebuffer intermediate level                                  summary include  ckith  void ckpurgebuffer byte short description purgebuffer purge buffer null passing pointer buffer size buffer ie purgebuffer buffer x may may useful available note seperate purge function serial port input buffer wish purge calling input see flushrqueue return value none see also flushrqueue example include  ckith  static byte buff  purge buffer test  main int argc char argv argc ckopendoor argv ckpurgebuffer buff ckclosedoor function ckcheckcr intermediate level                                  summary include  ckith  void short ckcheckcr void description check carriage return wait display prompt return true false return value true false see also ckforceenter ckgetcmdline ckcheckkeypress function ckcheckctrlk intermediate level                                  summary include  ckith  short ckcheckctrlk void description check control k ascii entered return true false return value true false see also ckctrlkoff ckctrlkon function ckctrlkon intermediate level                                  summary include  ckith  void ctrlkon void description enables control k ascii checking normally since menu type noninterruptable turned ctrl k recognized must call ctrlkoff see disable ctrl k also put input buffer use checkctrlk function see determine ctrl k pressed see also ckctrlkoff ckcheckctrlk function ckctrlkoff intermediate level                                  summary include  ckith  void ckctrlkoff void description disables control k ascii checking see also ckctrlkon ckcheckctrlk cksetkybdtime intermediate level                                  summary include  ckith  void cksetkybdtime byte byte description set keyboard timer desired value default minute beep minute timeout allows door author set keyboard timer time resolution minute minimum minute maximum routine expects two number first number beep time set many minute pas keyboard timer give warning beep continue beep afterwards one minute interval second number actual keyboard timeout value normally set number higher beep time note call cksetkybdtime reset current keyboard timer zero example set beep time minute timeout minute include  ckith  main int argc char argv argc ckopendoor argv cksetkybdtime ckclosedoor function note low level function normally needed handled automatically ckit higher level function function carrier detects etc provided special case may need use caution ckinkey low level                                  summary include  ckith  byte ckinkey void description read character available localremote console wait input also set keysource equal sysop userkey inkey also keep track time left set ckdumpuser time expires return value return none available otherwise return key pressed see also input siogetbyte keysource globals checkctrlk example example check keyboard localremote console return true false include  ckith  main int argc char argv argc ckopendoor argv ckinkey return false else return true ckclosedoor function ckkeystat low level                                  summary include  ckith  short ckkeystat void description check character available local console wait input return value return none available nonezero available see also ckinput ckrcount ckkeysource example example check keypress keyboard local console return true false include  ckith  main int argc char argv argc ckopendoor argv ckkeystat return false else return true ckclosedoor function ckrcount low level                                  summary include  ckith  short ckrcount void description return number character receive queue wait input return value return null none available else return number character recieve queue see also ckinput ckrcount ckkeystat example see ckflushrqueue function ckgetkey low level                                  summary include  ckith  sizet ckgetkey void description read character available local console wait input return value return false none available see also ckinput ckgetkey ckkeystat ckcheckctrlk example example read key local console buffer print screen include  ckith  sizet ch main int argc char argv argc ckopendoor argv ch getkey cksputc ch ckclosedoor function cksiogetbyte low level                                  summary include  ckith  byte cksiogetbyte void description read character available remote console wait input return value return null none available else return character read see also ckinput cksiogetbyte ckkeystat ckcheckctrlk example example read byte remote console buffer display one available include  ckith  byte ch main int argc char argv argc ckopendoor argv ch cksiogetbyte ch cksputc ch ckclosedoor cklowerdtr low level                                  summary include  ckith  void cklowerdtr void description drop dtr com port causing modem hang return value none see also ckraisedtr cktransmitmodem cktransmitdata example see cktransmitmodem function ckraisedtr low level                                  summary include  ckith  void ckraisedtr void description raise dtr com port causing modem hang return value none see also cklowerdtr cktransmitmodem cktransmitdata example see cktransmitmodem function ckforceoffhook low level                                  summary include  ckith  void ckforceoffhook void description drop dtr com port causing modem hang tell modem go back offhook function wait second dropping dtr second raising dtr telling modem go offhook normally handled automatically ckit depeding ckforceoffhook setting return value none see also ckforceoffhook example send string reset modem carrier lost include  ckith  main int argc char argv argc ckopendoor argv ckforceoffhook  dump user offline  ckclosedoor function cktransmitdata low level                                  summary include  ckith  void cktransmitdata byte description send c string remote console echo local console expects pointer either null terminate c string type byte char check carrier included send single byte use sample code return value none see also cktransmitmodem example include  ckith  define beep x static char remotemsg  hello  main int argc char argv argc ckopendoor argv cktransmitdata remotemsg sendbyte bell ckclosedoor  send single byte remote use code  void sendbyte byte data byte byteout byteout data byteout x  make c string  transmitdata byteout cktransmitmodem low level                                  summary include  ckith  short cktransmitmodem byte description send c string modemremote echo local console expects pointer either null terminate c string type byte char carrier checking included return nonzero error occured otherwise return null return value none see also cktransmitdata example include  ckith  static char dialnumber  atdt  include  ckith  main int argc char argv argc ckopendoor argv ckdebugon cklowerdtr  drop user  ckraisedtr ckwait  wait modem reset  ckflushrqueue  flush receive queue  cktransmitmodem dialnumber ckdebugoff cktqueuelen  wait modem  ckgetcmdline strcmp ckcmdline  carrier  ckclosedoor function cktqueuelen low level                                  summary include  ckith  short cktqueuelen void description check number byte left transmit rqueue normally routine needed available needed return value byte left xmit queue see also example include  ckith  static char modemmsg  atx  main int argc char argv argc ckopendoor argv ckdebugon cktransmitmodem message cktqueuelen ckdebugoff ckclosedoor function ckflushrqueue low level                                  summary include  ckith  byte ckflushrqueue void description flush byte receive queue buffer also return near pointer receive queue buffer return value none see also rcount tqueuelen example include  ckith  static char message  ath  main int argc char argv argc ckopendoor argv ckflushrqueue  flush buffer  cktransmitmodem message ckrcount  wait response back  ckclosedoor function ckflushtqueue low level                                  summary include  ckith  void ckflushtqueue void description flush byte transmit queue buffer return value none see also tqueuelen example include  ckith  static char message  ath  main int argc char argv argc ckopendoor argv ckflushrqueue  flush buffer  cktransmitmodem message ckrcount  wait response back  ckflushtqueue  flush buffer  ckclosedoor function ckcheckcd low level                                  summary include  ckith  byte ckcheckcd void description check carrier present present return nonzero zero null mean carrier present return value byte indicator carrier present see also ckdumpuser cktransmitdata cktransmitmodem function ckcheckkeypress low level                                  summary include  ckith  short ckcheckkeypress byte description check specific ascii character entered wait character function may may useful available needed  hotkey  function door carrier checking return value true false see also ckcheckcr ckinput ckgetkey ckwaitkeypress ckcheckctrlk example include  ckith  byte result main int argc char argv argc ckopendoor argv result ckcheckkeypress x printf  keypress returned  result ckclosedoor ckit based door program many feature available door author sysop using standard function key function key       f shell do f return user system f toggle display onoff f chat mode use escape key exit f toggle printer onoff f toggle pagebell onoff f toggle caller alarm onoff alternate key       alth toggle different status line altn toggle sysop next altx toggle exit do call help line alternately pressing alth key bring next status line screen st screen help screen second second screen show com port status function key marked   use system using pcboardsys rest functional system command stacking also available easily disabled desired see ckitdemoc example disabling command stacking attention turbo c user version  use word alignment ckit  use byte alignment applies planning use ckusers structure andor ckupdateuser function default borland byte alignment work correctly two item using either ckusers file structure ckupdateuser function nt use word alignment byte alignment work ok see file tcreadme ckittczip file addition turbo cbc user also select standard stack frame alignment make dir work copy ckitdemoc ckitdemoh ckith ckitt lib tcppckitprj ckitsprj dir bring turbo c ide select proper project file test ckitdemoc create exe file get started take  package freely distributed long modified sold profit find program valuable send donation think worth suggest least  usa exchange receive program ckitregexe register future copy ckit registration number mean would download new version favorite board saving long distance charge registration  full access node datacomp made available source code module available registered user reading system file may want include door program become available complete set pcboard source code module userssys pcboarddat etc send contribution rickie w belitz po box maryville tn  support      question suggestion bug report contact datacomp bb  usr hst dual standard vbis also reached via mail network thru intelec bbsdoors conference rime relaynet door conference acknowledgement           would like give special thanks cosysop dean mcguire patiently tested door routine help preparing documentation genericsys              maximum compatibility ckit also read file called genericsys file created sysop desiring run door allow ckit operate would allow door operate bb system see compatibilty issue genericsys file standard ascii file contains line followed carriage return line feed format line bb operator name line com port use line time allowed door example genericsys file sysop name rickie using com port allowing minute door rickie com line followed cr lf com port follows format standard doorsys com local mode doorsys see compatibilty issue information note include information door documentation also compatibility issue              although ckit make lot information available user author decide particular information door require general guideline may help decide exactly information door need operate keeping minimum increase chance maintaining compatibility thruout different bb system version thereof ckit support example let assume designing standard bb game ckit handle detailed information time left carrier detect etc would really need basic information perhaps user name sysop name keeping type information minimum door would work regardless whether sysop running door used pcboardsys doorsys callinfobbs genericsys command lineie gameexe c pcbpcboardsys gameexe c pcbdoorsys gameexe c wccallinfobbs gameexe c genericsys gameexe c rbbsdorinfoxdef would work sysop running pcboard  would able use pcboardsys case ckit would take care deciding pcboardsys file doorsys file wildcat callinfobbs dorinfoxdef also pcboardsys file whether pcboard  sys file later would read properly would make door compatible full spectrum pcboard  wildcat gap spitfire  system using standard doorsys file rbbs others using dorinfodef bb using genericsys minimum effort part sysop running door written fantastic new door snap sysop install might make bit inclined register right another senario would door need somewhat basic information would recommend using variable available doorsys wildcat info file case would give broadest coverage door notice variable description manual compatibility list right variable tell type information available depending whether door found doorsys pcboardsys version pcboard wildcat info file dorinfoxdef file summary quick guide pcboardsys version doorsys wildcat dorinfoxdef info file information variable available need even information tell ckit open user file read information limit door pcboard system ckit record information user file unless call updateuser made also record anything sysop record compatible                                ck  pcboardsys variable   doorsys wildcat dorinfoxdef genericsys                               conference x x aport x x x x x x ansing x bbsname x bpsopen x x x baudrate x x x x x callalarm x x x currentconf x x x callerbday x x display x x x x x defaultcolor x dailybytes x x dailyfiles x x downloadkbytes x x dooropened x dot x x x x x x dloadtotal x x x errorconnection x x x x expert x x x x eventactive x eventslide x eventtime x x x firstname x x x x x x fullname x x x x x x graphic x x x x x gendir x highmsg x keysource x x x x x local x x x x x logoffcolor x x x x exitmsg x x x x x language x x lastfilescan x x x x minleft x x x x x x maindir x maxfiles x maxsec x monitortype x msgsleft x nameinuse x netchat x x node x x x x nofkeys x x x x x x nosystem x x x x x x printer x x x protocol x x x x pagebell x x x password x x x x pagelength x x x x x pcb x x x x x pcb x x x x x prevused x port x x x x x parity x x rbbs x x x x x x recordlock x scancode x x x x x securitylevel x x x silent x x x x x x sysopnext x x sysopname x x x sysopalias x timelogged x x x x x timeon x x timelimit x x timeadded x x totaldoors x userrecord x x x x uploadkbytes x uploadtotal x x x ckusercomment x wildcat x x x x x one last note four variable pcb pcb wildcat gap ckit read pcboardsys file set pcb variable true pcboardsys file read  file set pcb variable true ckit find wildcat system set variable wildcat true may useful making adjustment program depending system file read pcb doorsys pcb wildcat andor sysop running pcboard  normally expected doorsys wildcat info file ckit find doorsys file gap set true also see user file information earlier doc file user structure information available even using doorsys tell ckit open user file user file information available ckit find version x pcboardsys find pcboard  pcboardsys file user structure information available member user structure marked indicate available depending thing mentioned warranty warranty       make warranty kind express implied including without limitation warranty merchantability andor fitness particular purpose shall held liable damage whether direct indirect special consequential arising failure program operate manner desired user shall held liable damage data property may caused directly indirectly use program event held liable damage including limited lost profit lost saving incidental consequential damage arising use inability use program claim party warranty governed law state tennessee orderfrm v       return rickie belitz po box maryville tn  name  company  address   phone  register ckit name diskette size    acceptable    required order outside usa add   add     please find enclosed check money order usa   suggested payable rickie belitz show support shareware product shareware concept also show encouragement help development ckit understand ckit provided asis warranty kind expressed otherwise included using risk signed  date  release history          see history file common problemsquestions                q test door  local  mode doorsys file included ckit library first line doorsys file com accordance doorsys spec specifies  local  mode use file testing door modify doorsys file also use com port online testing see doorsystxt information could also make genericsys file use com port see section genericsys q linking code library get linker error unresolved external progname ckitasm ckit look c string array called progname name door program appear bottom local line option must declare kind name ckit use even space char nt want progname bottom see ckidemoh file example variable progname doc file q linking ckitdemo program get error unresolved external random ckitdemoc ckitdemoc door written compiled either microsoft c turbo c compiler directive ckitdemoc file take appropriate action depending compiler therefore compiling ckitdemoc program must statement dcompilermicrosoft dcompilerturboc command line needed compiling ckitdemoc program needed compiling door program q include dcompilermicrosoft dcompilerturboc command line every time compile door program needed ckitdemoc source code also modify ckitdemoc ckitdemoh file take compiler directive like would use compiling ckitdemoc make sure take right one whichever compiler using matter fact way default defined ckitdemoc ckitdemoh dont need dcompilerturboc using turbo c compile ckitdemoc file using turbo c ide q f f f alt x alt n key effect returning bb key valid door sysops using pcboardsys file code find doorsys wildcat info file make attempt update pcboardsys file f shell do f return bb f screen onoff work system try write door sysop use pcboardsys pcboard sysop also run system well future update take consideration system permitted see compatibility chart q formfeeds documentation people access copier print run printed sheet thru copier duplex print side sheet manual want form feed global replacement favorite editor get rid q thought ckit required user file path listed also used ckitdemo file ckit library care one way another user file open ckitdemo also written work system ckitdemo demostration door written accept command line given make adjustment accordingly ckitdemo accept either ckitdemoexe c pcbpcboardsys c pcbmainusers ckitdemoexe c pcbdoorsys ckitdemoexe c wccallinfobbs porte see opendoor function information q ckit work system user file require information user file must pcboard x pcboard  however limiting door number system ran would recommend using user file info unless door written specifically pcboard system file pcboarddat msg system user file included form source code later date allow link existing ckit library function q baud rate ckit handle ckit handle baud rate baud k baud baud rate used highest baud standard ibm compt system produce k baud k baud done modified ibm changing uart xtal using uarts q using msc  compile program get message  warning null macro redefinition  problem actually carry msc wish remove line define null ckith header file msc  redefined null assignment stdlibh file cause get warning msc  lower turbo c q using turboc compile small model demo program work fine recompile using medium model get stack overflow fixup error linker turboc delete recompile ckitdemoc module attempt link older small model obj file created earlier medium library get error switch memory model must delete previous obj file created using small memory model happened ckitdemoc would need delete ckitdemoobj changing memory model q function key trapped locally key reserved local keyboard sysop function try design door without using f f f f f f alth altn altx use key used remote keyboard aware would able use local keyboard q linking program get error unresolved external wait function renamed ckwait v need using ckith header file conflict one borland library name q user security level somtimes show status line sometimes nt pcboardsys file provide information security level show using doorsys callinfobbs wildcat using pcboardsys open user file status line indicator pagebell printer caller alarm also show using doorsys callinfobbs using version pcboardsys  q kind sign message ckit program registered ckit registered message displayed closing door one defined using cklogoffmsgs default  returning system   
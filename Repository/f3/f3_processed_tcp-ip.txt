archivename tcpipfaq lastmodified  internet protocol frequently asked question maintained george v nevilleneil gnn wrscom contribution ran atkinson mark bergman stephane bortzmeyer rodney brown dr charles e campbell jr phill conrad alan cox rick jones jon kay jay kreibrich william manning barry margolin jim muchow subu rama w richard stevens version   following list frequently asked question answer people interested internet protocol including tcp udp icmp others please send addition correction complaint kudos address faq posted first every month faq available anonymous ftp ftpnetcomcom pubgnntcpipfaq may get home page ftp ftpnetcomcompubgnngnnhtml read faq html format netcom mirror site http webcnamfrnetworktcpiptcpiphtml  table content glossary good book ip find example source code tcpudpip public domain program check performance ip link find rfcs detect end tcp connection crashed use  keepalives  keepalive timeouts configured set gateway internet translates ip address nt change internal address official network objectoriented network programming tool faq related one newsgroups contain information networksprotocols van jacobson explains tcp congestion avoidance use single bit subnet glossary felt first given plethora acronym used rest faq ip internet protocol lowest layer protocol defined tcpip base layer protocol mentioned herein built ip often referred tcpip well udp user datagram protocol connectionless protocol built top ip provide guarantee ordering delivery message protocol layered top ip tcp transmission control protocol tcp connection oriented protocol guarantee message delivered order sent message delivered tcp connection deliver message close connection informs entity created protocol layered top ip icmp internet control message protocol icmp used diagnostics network unix program ping us icmp message detect status host net icmp message either query case ping error report network unreachable rfc request comment rfcs document define protocol used ip internet suggestion even joke others published standard several site internet store rfcs make available anonymous ftp slip serial line ip implementation ip use serial link modem cslip optimized compressed version slip give better throughput bandwidth amount data pushed link unit time usually measured bit byte per second latency amount time message spends network going point point b jitter effect seen latency constant message experience different latency two point network rpc remote procedure call rpc method making network access resource transparent application programmer supplying  stub  routine called way regular procedure call stub actually performs call across network another computer marshalling process taking arbitrary data character integer structure packing transmission across network mbone virtual network multicast backbone still research prototype extends core internet including north america europe australia us ip multicasting defined rfc mbone faq available via anonymous ftp ftpisiedu  frequent broadcast multimedia program audio low bandwidth video mbone though mbone used mutlicasting long haul part mbone use pointtopoint connection unicast tunnel connect various multicast network worldwide good book ip yes please see following internetworking tcpip volume principle protocol architecture douglas e comer prentice hall isbn  volume cover protocol including ip udp tcp gateway protocol also includes discussion higher level protocol ftp telnet nfs internetworking tcpip volume ii design implementation internals douglas e comer david l stevens prentice hall isbn  discus implementation protocol give numerous code example internetworking tcpip volume iii bsd socket version client server programming application douglas e comer david l stevens prentice hall isbn  book discus programming application use internet protocol includes example telnet ftp client server discus rpc xdr length tcpip illustrated volume protocol w richard stevens c addisonwesley isbn  excellent introduction entire tcpip protocol suite covering major protocol plus several important application  tcpip illustrated volume implementation  gary r wright w richard stevens c addisonwesley isbn x complete lenthy discussion internals tcpip based net release bsd unix network programming w richard stevens prentice hall isbn  excellent introduction network programming unix design implementation  bsd operating system samuel j leffler marshall kirk mckusick michael j karels john quarterman addisonwesley isbn  though book reference entire operating system eleventh twelfth chapter completely explain networking protocol implemented kernel stevens w richard unix network programming prenticehall excellent introduction network programming unix widely cited usenet bulliten board  best place start  want actually learn write unix program communicate network rago steven unix system v network programming addisonwesley book cover kind topic w richard stevens unix network programming specific unix system v release svr perhaps useful date working specifically implementation stevens book cover unix system v release x much extensive coverage stream rago book chapter stevens provides couple subsection design project end book implementation slip find example source code tcpudpip code internetworking tcpip volume iii available anonymous ftp arthurcspurdueedu pubdls code used net version berkeley unix available anonymous ftp ftpuunet systemsunixbsdsourcessysnetinet gatekeeperdeccom pubbsdnetsysnetinet code richard steven book available ftpuunet publishedbooksstevens example source code library make coding quicker available simple socket library written nasa simple socket library make socket easy use come source code tested unix sgi decstation aix sun sparcstation version  solaris  sco vms msdos client since background provided source code form course sits atop berkeley socket tcpip order  simple socket library  austin code work leafwood lane austin tx  usa phone  ask  ssl simple socket library  last checked asking u do wattcpzip numerous site wattcp do tcpip stack derived ncsa telnet program much enhanced come example program complete source code interface nt bsd socket well suited pc type work also written used memory allocation public domain program check performance ip link ttcp available anonymous ftp  wuarchivewustledu graphicsgraphicsmirrorssgicomsgisrcttcp ftpsgicom netperf rick jones hp nettest dave borman cray ttcp also availabel ftpsgicom get netperf home page via http wwwcuphpcomnetperfnetperfpagehtml suite bandwidth measuring program gnn netcomcom available anonymous ftp ftpnetcomcom ftpgnnbwmeastarz several program meausre bandwidth jitter several kind ipc link including tcp udp find rfcs latest info obtaining rfcs detail obtaining rfcs via ftp email may obtained sending email message rfcinfo isiedu message body help waystogetrfcs example rfcinfo isiedu subject getting rfcs help waystogetrfcs response mail query quite long omitted rfcs obtained via ftp dsinternicnet nisnsfnet niscjvncnet ftpisiedu wuarchivewustledu srcdocicacuk ftpconcertnet ftpsesquinet using web wais gopher web http webnexorcoukrfcindexrfcindexsearchformhtml wais access keyword wais waiscnamfrrfc excellent presentation fulltext search http wwwcisohiostateeduhypertextinformationrfchtml gopher gopher rdjvncnetinternet resourcesrfc gopher muspingsfcnasagovggo dsinternicnet d internetdocs detect end tcp connection crashed use  keepalives  detecting crashed system tcpip difficult tcp nt require transmission connection application nt sending anything many medium tcpip used eg ethernet nt provide reliable way determine whether particular host server nt hear client could nothing say network server client may server client network interface may disconnected client may crashed network failure often temporary thin ethernet appear someone adding link daisy chain often take minute new route stabilize router go tcp connection nt dropped result keepalives feature socket api request empty packet sent periodically idle connection evoke acknowledgement remote system still reset rebooted timeout normally sent connection idle hour purpose nt detect crash immediately keep unnecessary resource allocated forever rapid detection remote failure required implemented application protocol standard mechanism example requiring client send  noop  message every minute two example protocol us x display manager control protocol xdmcp part x window system version xdm server managing session periodically sends sync command display server evoke applicationlevel response reset session nt get response actually example poor implementation timeout occur another client  grab  server long keepalive timeouts configured varies operating system program work many unices though linux solaris called netconfig allows one document many variable available anonymous ftp csucsdedu pubcslnetconfignetconfigtarz addition richard stevens tcpip illustrated volume includes good discussion setting useful variable many platform set gateway internet translates ip address nt change internal address official network general solution many protocol include ip address applicationlevel data ftp  port  command notable nt simply matter translating address ip header also network number using match assigned another organization gateway wo nt able communicate organization rfc proposes network number reserved private use avoid conflict already using different network number wo nt help however willing live limited access internet internal host  proxy  server developed firewall used substitute addresstranslating gateway see firewall faq objectoriented network programming tool yes one system called ace adaptive communication environment get information software obtaining ace html version readme file available url http wwwcswustleduschmidtacehtml software documentation available via anonymous ftp web ace available anonymous ftp icsuciedu  host gnucwrapperstarz file approximately  meg compressed release contains contains source code documentation example test driver c wrapper libra faq might want look compprotocolstcpipibmpc aboba bernard  compprotocolstcpipibmpc frequently asked question faq  usenet newsanswers available via file ftpnetcomcompubmamailcomibmtcpibmtcpzip page compprotocolsppp archivename pppfaqpart  url http csunibonndeppppart  html compdcomlansethernet ftp site dormrutgersedu pubnovelldocs ethernet network question answer summarized usenet group compdcomlansethernet newsgroups deal networking compdcomcabling cabling selection installation use compdcomisdn integrated service digital network isdn compdcomlansethernet discussion ethernetieee  protocol compdcomlansfddi discussion fddi protocol suite compdcomlansmisc local area network hardware software compdcomlanstokenring installing using token ring network compdcomservers selecting operating data communication server compdcomsyscisco info cisco router bridge compdcomsyswellfleet wellfleet bridge router system hardware software compprotocolsibm networking ibm mainframe compprotocolsiso iso protocol stack compprotocolskerberos kerberos authentication server compprotocolsmisc various form type protocol compprotocolsnfs discussion network file system protocol compprotocolsppp discussion internet point point protocol compprotocolssmb smb file sharing protocol samba smb serverclient compprotocolstcpip tcp ip network protocol compprotocolstcpipibmpc tcpip ibm like personal computer compsecuritymisc security isuipment pc composmswindowsnetworkingmisc window network composmswindowsnetworkingtcpip window tcpip networking composmswindowsnetworkingwindows window builtin networking compososnetworkingmisc miscellaneous networking issue o compososnetworkingtcpip tcpip o compsysnovell discussion novell netware product van jacobson explains tcp congestion avoidance attached van j original posting seem repost every month want see real example action take look chapter  tcpip illustrated volume  rich stevens                                      van helioseelblgov mon apr  endendinterest isiedu subject modified tcp congestion avoidance algorithm date mon apr  pdt van jacobson van helioseelblgov status ro description modified tcp congestion avoidance algorithm promised teleconference btw rereading noticed several error lixia note besides problem noted teleconference nt know whether miscommunicated algorithm dinner recall wine convinced tcp ultimately irrelevant either way probably disappointed experiment note first point two completely independent window adjustment algorithm running sender slowstart run pipe empty ie first starting restarting timeout goal get  ack clock  started packet metered network reasonable rate algorithm congestion avoidance run time starting responsible estimating dynamically varying pipesize cause end confusion lump separate algorithm lixia message modification described congestion avoidance algorithm slowstart intended apply large bandwidthdelay product path though dont harm path remember regular tcp slowstartca tcp throughput really start go hell probability packet loss order bandwidthdelay product eg might expect packet loss rate translate lower throughput say tcp connection packet bd p window result  throughput loss make tcp effective fat pipe would nice throughput degraded function loss probability rather product loss probabilty bd p assuming course without sacrificing congestion avoidance mod two thing prevent pipe going empty loss pipe nt go empty wo nt waste roundtrip time refilling correctly account amount data actually pipe since congestion avoidance supposed estimating adapting remember use packet loss signal pipe overfull congested packet loss detected one two different way via retransmit timeout b small number  consecutive duplicate acks received  fast retransmit  algorithm case pipe guaranteed empty must slowstart case b duplicate ack threshhold small compared bandwidthdelay product detect loss pipe almost full ie given threshhold packet lblmit bandwidthdelay around kb packet assuming byte mtus pipe full fastretransmit detects loss actually gateway start sort congestion control pipe overfull loss detected least packet needed ack clocking transit fastretransmit happens since pipe full need slowstart fastretransmit consider duplicate ack mean either network duplicated packet ie nsfnet braindead ibm token ring adapter receiver got outoforder packet usual cause outoforder packet receiver missing packet ie w packet transit one dropped receiver get w outoforder tahoe tcp generate w duplicate acks consecutive duplicate threshhold set high enough reasonably assume duplicate acks mean dropped packet information ack receiver generate one response packet arrival ie duplicate ack mean packet left network cached receiver sender limitted congestion window packet sent congestion window count many packet fit pipe ack say packet left pipe new one added take place put another way say current congestion window c ie c packet fit pipe duplicate acks received cd packet actually pipe sender want use window cd packet fill pipe estimated capacity cd sent received c pipe conceptually slowstartcongavoidfastrexmit change sender input routine changed set cwnd ssthresh dup ack threshhold reached used set cwnd ms force slowstart everything else stay sender output routine changed use effective window min sndwnd cwnd dupacksmss change addition dupacksmss term dupacks zero rexmit threshhold reached zero except receiving sequence duplicate acks actual implementation slightly different wanted avoid multiply output routine multiplies expensive risc machine diff old new fastrexmit code attached line number vary note still congestion avoidance ie window reduced detect packet loss long receiver offered window large enough need twice bandwidthdelay product continue sending packet exactly half rate sending loss even loss detected pipe stay full exactly level want slowstart nt necessary algebra might make last clear say u sequence number first unacked packet using window size w packet u dropped packet uuw transit loss detected send packet u pull window back w roundtrip time take u retransmit fill receiver hole ack get back w dup acks arrive one packet transit window effectively inflated one packet acks packet uuww sent dont resend packet unless know lost amount actually sent loss detection recovery ack uww uw w exactly amount congestion avoidance allows u send add rexmit u recovery ack packet uw effective window pulled back ww w happens recovery ack new set dupack zero allowed send packet uww exactly first packet nt yet sent ie sudden burst packet hole filled also sending packet loss detection recovery ack nothing first w dup acks allow u send packet already sent bottleneck gateway given w packet time clean backlog thus start sending w new packet bottleneck queue empty nt know get flavor happens description  hard see without picture delighted beautifully worked  like watching innards engine separate motion crank piston valve suddenly fit together everything appears exactly right place right time also note algorithm interoperates old tcp pretahoe tcp nt generate dup acks outoforder packet nt get dup acks fast retransmit never fire window never inflated everything happens old way via timeouts everything work without new algorithm slow want simulate intended environment large bandwidthdelay product say packet receiver advertising window two bd p equivalently advertised window unloaded bd p two connection simultaneously sharing path average loss rate congestion source le one lost packet per roundtriptime per active connection algorithm work higher loss rate tcp selective ack option implemented otherwise pipe go empty waiting fill second hole throughput degrade product loss rate bd p selective ack throughput insensitive bd p loss rate course always remember good engineering practise suggests bd p worth buffer bottleneck  le buffer simulation exhibit interesting pathology poorly engineered network probably tell little working algorithm unless algorithm misbehaves badly condition simulation measurement say nt day megabyte memory dearly hope particular example bad engineering historical interest van          tmp rcsta mon apr   tcpinputc mon apr      kludge sndnxt congestion window send one packet packet fill hole receiver seq space next real ack fully open window mean usual slowstart overwhelm intermediate gateway burst packet leave congestion window set allow packet next real ack exptolinear thresh set half current window size since know losing current window size  tp ttimer tcptrexmt       kludge sndnxt congestion window send one packet know losing current window size congestion avoidance set ssthresh half current window pull congestion window back new ssthresh dup acks mean packet left network cached receiver bump cwnd amount receiver keep constant cwnd packet network  tp ttimer tcptrexmt       else tp tdupacks  tcprexmtthresh tcpseq onxt tp sndnxt uint win min tp sndwnd tp sndcwnd tp tmaxseg win win tp sndssthresh win tp tmaxseg tp ttimer tcptrexmt tp trtt     else tp tdupacks  tcprexmtthresh tcpseq onxt tp sndnxt uint win min tp sndwnd tp sndcwnd win  tp tmaxseg win win win tp sndssthresh win tp tmaxseg tp ttimer tcptrexmt tp trtt     tp sndcwnd tp tmaxseg void tcpoutput tp seqgt onxt tp sndnxt tp sndnxt onxt goto drop else     tp sndcwnd tp tmaxseg void tcpoutput tp tp sndcwnd tp sndssthresh tp tmaxseg tp tdupacks seqgt onxt tp sndnxt tp sndnxt onxt goto drop else tp tdupacks tcprexmtthresh tp sndcwnd  tp tmaxseg void tcpoutput tp goto drop else         tp tdupacks break tp tdupacks  congestion window inflated account side cached packet retract  tp sndcwnd tp sndssthresh tp tdupacks  tmp rcsta mon apr   tcptimerc mon apr          tp sndcwnd tp tmaxseg tp sndssthresh win tp tmaxseg tp tdupacks void tcpoutput tp van helioseelblgov mon apr  endendinterest isiedu subject modified tcp congestion avoidance algorithm correction date mon apr  pdt van jacobson van helioseelblgov status ro nt make last minute fix code sent last night small error  tc mon apr   tcpinputc mon apr      congestion window inflated account side cached packet retract  tp sndcwnd tp sndssthresh tp tdupacks seqgt ti tiack tp sndmax tcpstattcpsrcvacktoomuch goto dropafterack     congestion window inflated account side cached packet retract  tp sndcwnd tp sndssthresh tp sndcwnd tp sndssthresh tp tdupacks seqgt ti tiack tp sndmax tcpstattcpsrcvacktoomuch goto dropafterack use single bit subnet would seem consensus best citable answer follows rfc   broadcast section  defined four standard ip broadcast address form limited broadcast   directed broadcast networknumber  subnet directed broadcast networknumber subnetnumber  allsubnets directed broadcast networknumber    allsubnets directed broadcast deprecated favor ip multicast much defined time rfc written thus subnet directed broadcast subnet one distinguishable allsubnets directed broadcast old system used zero broadcast ip address similar argument made subnet zero also old routing protocol like rip route subnet zero distinguishable route entire network number except possibly context today system nt support variable length subnet mask vlsm system true however major router vendor unix system bsd  based one support vlsms case situation complicated vlsms necessary support cidr see rfc utilize address space efficiently routing lookup based longest match mean instance subnet class c net mask  bit addition subnet mask  bit given able use address xxx xxx first three bit address xxx xxx first three bit new subnet mask continue subnet mask bit etc note also way noncontiguous subnet mask deprecated nicely covered paper havard eidnes practical consideration network address using cidr block allocation proceeding inet  paper available anonymous ftp aununinettno pubmisceidnescidrps paper minor revision one article special internetworking issue communication acm last month believe told network equipment cisco think vendor named correctly handle subnets violated standard far know cisco one router vendor handle vlsms correctly could substantiate claim steinar haug sintef runit university trondheim norway email steinarhaug runitsintefno  george v nevilleneil work gnn wrscom home gnn netcomcom nic gn signature kept blank due cda 
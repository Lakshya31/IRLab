chapter compatibility assembler gave heavy priority compatibility designed priority shade behind higher priority reliability speed convenience power feel  close incompatible  like saying  little bit pregnant  sorry report assemble intelibmmasm program unmodified think vast majority program little massaging made assemble furthermore massaging done way make program still acceptable old behemoth assembler version  many compatibility feature present earlier version among feature added since first released general forward reference double quote string   synonym equ radix directive comment directive tried feeding old source file previous dismayed number error message got try thing might manageable conversion masm program following list thing watch converting masm need determine whether program coded com program exe program com program coded masm contain org h directive somewhere start code exe program contain org often contain statement load named segment register program coded exe must either assemble using option obj file fed link must eliminate instruction load segment register  com program often nt necessary anyway since com program started segment register already pointing value good general rule doubt try assembling obj file need determine whether program executing segment register pointing value simple com program fit k typically fall category exe program program use huge amount memory program memoryresident program take interrupt typically different value segment register  different value segment register may instruction program old assembler generates segment override prefix  behind back  need find reference generate explicit override data table within program csoverride needed data structure stack segment accessed via bpindex ssoverride needed e point segment esoverride needed access stos movs destination segment interrupt handler memoryresident program  normal  handler often invoked via indirect call jmp instruction fetch doubleword address normal handler memory stored initialization code call jmp often requires csoverride  watch want remain compatible old assembler code override placing segment register name colon memoryaccess operand instruction need compatibility place segment register name instruction mnemonic example mov al c table si want compatibility c mov al table si way use couple switch maximize compatibility masm already mentioned switch produce obj file also assemble switch disables unique parsing constant leading zero hexidecimal radix command program also use l switch disables feature might reduced compatibility see chapter detailed explanation switch bit restrictive respect forward reference masm much used youll probably need resolve ambiguous reference appending  b   w  forward reference name one common reference need bit recoding difference two forward reference often used refer size block allocated memory handle defining new symbol representing size using equ right block declared replacing forwardreference difference size symbol macro definition conditional assembly language different masm macro translated replacing named parameter old macro dedicated name n macro language replacing endm em construct straightforward translation illustrated following example note example involving macro parameter double pound sign since condition tested macro expanded defined  masm construct equivalent construct ife expr expr ifb parm ifnb parm ifidn parm cx   eq  cx  ifdif parm si   ne  si  err undefined symbol errcond true equ ffff true equ cond exitm ex irp  endm rxl  er rept  endm rx  er irpc  endm cx  ec last three construct irp rept irpc usually occur within macro masm nt equivalent valid within macro  occur masm program outside macro duplicate defining enclosing macro spot calling macro right defined retain compatibility isolate old macro definition include file ignore include directive isolate macro definition separate file used masm assembly program support struc directive named structure element like masm one exception save initial value declared struc definition allow assembly instance structure element example masm construct payrec struc pname db name given pkey dw end payrec dup payrec eric cause accept struc definition define structure element pname pkey correctly payrec initialization need recoded nt vital initialize memory specific definition value could recode first payrec db type payrec dup must initialize value line line db eric dw many initialization could define macro initpayrec containing db dw line  support couple exotic feature masm assembly language record directive associated operator width mask usage anglebrackets initialize structure record feature would added much complication internal structure symbol table degrading speed reliability assembler felt use sufficiently rare worth including compatibility old program use feature rework area use macro used duplicate record structure initialization explicit symbol declaration replace usage width mask operator compatibility symbol recognized programmed ignore variety line meaning intelibmmasm assembler nothing include line beginning period except radix acted upon percent sign dollar sign line beginning assume include page subttl title porting program wish retain option returning assembler may leave line program decide stay remove line leisure addition class symbol recognized obj mode still ignored com mode includes name end public named segment end directive written assembler course recognized obj mode nonobj mode treat code segment directive special exception directive segname segment atvalue treated following sequence segname equ atvalue struc accomplish usually intended segment used program intended com file  conversion program intelibmmasm consider section bit blasphemy since little silly port program superior assembler run inferior one however motivated upon occasion programming client familiar whose computer nt run therefore want final version assemble intel assembler since assemblerdebugger environment vastly superior environment develop program using assembler port client environment end main key success following scenario exercise supreme power use wonderful language feature exist masm often easy devised method porting feature assembler hate giving long sequence push pop separate line program ported lesser assembler put following line file see push equ push push equ push pop equ pop pop equ pop define macro push push pop pop lesser assembler push pop appropriate number operand everywhere program would ordinarily use multiple pushpop feature use one pushnpopn mnemonic instead refrain using feature whereby constant leading zero defaulthexadecimal hex constant end h usually go ahead use local label l l last minute convert long set label sequence z z z etc take care remove   forward reference specifier make conversion  z  used isolate local label end lesser assembler symbol table listing improves quality final program much worth extra effort needed convert l  l z  zxxx place declaration b equ d byte ptr w equ d word ptr top program recall  duplicate definition  feature whereby equ alreadyexisting symbol long equated value already feature extends built symbol b w look equates essentially ignore old assembler effect declaration add notation old language example  b equ d byte ptr w equ d word ptr mov ax w replaces mov ax d word ptr mov al b bx replaces mov al d byte ptr bx 
vol num amatuer crackist tutorial version  specular vision special thanks mr transistor ironman grand elusion banzai buckaroo another fine ptl production call myth inc bb table content          page number aprox final version finished table content ii introduction crack debugging do cracking ibm pc part cracking ibm pc part ii example crack mean accolade submarine eypx space station oblivion eypx iii removing doc check question f strike eagle microprose battlehawks lucasfilms yeager aft electronic art iv cracking self booters disk basic victory road data east msflight simulator ver x v creating title screen vi appendix interrupt table addon file introduction       due current lack cracker also keeping mind time took learn basic cracking de cided put tutorial together include many file found helpful many cracking endeav or also comment included make easier understand comment key       comment following material made one following line enclose comment show made comment specular vision       mr transistor  ironman  special thanks mr transistor coming  retire ment  help compose document chapter crack                               let start simple introduction patching program using do debug program following article troduce basic idea concept looking certain area program making patch                               charles petzold specular vision title case study colorful cl article originally appeared oct  issue pc magazine vol num  written charles petzold hardest part patching existing program determin ing patch go really make intelligent guess functioning program example let attempt modify commandcom color screen cl command type patch try copy original first think look cl differ ent do internal command internal command something screen write simple teletype output cl blank screen home cursor since ca nt do call unless ansisys loaded probably calling bios directly bios interrupt h call control video cl command probably us several int h instruction machine code int h cd method work version pcdos version  later address using pcdos  version pcdos msdos different address absolutely certain using correct address load commandcom debug debug commandcom r register command size commandcom register cx do  commandcom value aaa search command look cd byte l aaa cd get list six address clustered close gether first one pick address little see first call start disassembling u b first int ah set f current video state call code check returned value al video mode le equal text mode branch c reset video mode another int ad dress c code first set border black int another current video state call get screen width register ah us infor mation call set dx equal bottom right row column clear screen scrolling en tire screen another int set cursor zeroth row zeroth column final int scroll whole screen zero value al ac tually mean blank screen value bh tribute used blanked area unmodified commandcom bh set white black following statement address mov bx prefer yellowonblue attribute e change line going assemble mode entering entering mov bxe exiting assemble mode entering blank line save modified file w quit debug q load new version commandcom without rebooting entering command do command level cl turn screen blue display character yellow nt anything type show white black probably mean ansisys loaded use ansisys nt make patch stead use prompt command coloring screen end                               one section large article helped get started next look two article written buckaroo banzi two article crack crack give introduction different copy protection scheme used ibm pc find pas                               buckaroo banzai title cracking ibm pc part introduction       year seen cracking tutorial apple computer never seen one pc de cided try write series help pirate move level crackest part cover happens int copy protection scheme use strongly suggest knowledge assembler ml use debug important figure cracking anything int overview           many copy protection scheme use disk interrupt int int often use either try read il legally formatted tracksector writeformat tracksector damaged way int called like normal interrupt assem bler command int cd ah used select command used register used data int cracking college            although int used almost protection scheme easiest crack do file protected pro gram might use int load data normal tracksector disk important determine trackssectors important protection scheme found best way use locksmithpc nt l contact local pirate use l analyze diskette write tracksector seems abnormal track must likely part protection routine must enter debug load file execute search cd record address show address picked mean thing program copy protected right  check part program yet loaded latter real hassle find cover part ii another choice cd might hidden self changing code sector hidden code might look like u c b db xor bx bx b edb mov d bx b bbd mov bxd b mov al bx b xor al bb mov bx al bd df fist word  section code al set df location b xor df would get cd hex int opcode placed right next ie giving cd int type code ca nt found using debug earch command finding hidden ints            way find best find hidden ints use program called pcwatch trap work well also pro gram trap interrupt print called running disassemble around address find code look like setting disk interrupt way decode int use debug g command set breakpoint address give pcwatch program give return address ie g csf see code debug stop encoded int anything else leading find int                find int hard part part left fool computer thinking protection found find computer looking examine code right int look branch carryflag cmp ah register jne jc etc occurs u nassembe address listed jump cmp read must decide program looking pro tected track normal track cmp ah read protected track assumed looking see program successfully com plete readformat track disk copied thus jmping back do usually case nop byte cmp correspond ing jmp program checked carry flag set nt program usually assumes disk copied examine following code int  read sector jc b  protection found int  reboot b rest program program carry int find error il legally formatted sector carry flag set com puter next instruction see carry flag set know protection breached case fool computer change  jc b   jmp b  thus defeating protection scheme note protection routine might found part program handling exe file          know debug read exe file write get around load go cracking program usual protection scheme found tested record use debug ump command save byte code around int exit back do rename file zap extension exe reloading debug search program  byte surrounding code record address found load section edit like normal save file exit back do rename back exe file cracked note sometimes play around make work disk io int         interrupt us ah resister select function used chart describing interrupt ah reset disk ah read status disk system al al error               successful bad command given int  address mark found write attempted write protected disk  request sector found dma overrun attempt cross dma boundary  bad crc disk read controller failed seek operation failed attachment failed denotes used copy protection ah read sector input dl drive number  dh head number ch track number cl sector number al sector read e bx load address output ah error number see carry flag set al sector read ah write params ah verify params e bx ah format params cl al e bx point format table                               information int refer appendix                               end                               part ii buck cover call int int located different overlay program method used often                               cracking tutorial ii buckaroo banzai title cracking ibm pc part ii introduction       ok guy passed copy class do file great new game overlay crack one scanned entire exe file cd nowhere ask part ii cover cracking overlay use locksmith cracking nt read part suggest file go together looking overlay           cant find cd exe file well mean thing exe though mostly com file loader main file exe file load overlay cd encrypted hidden exe file looking wrong file wo nt discus case least many unp file devoted prolock softguard ca nt figure stupid case use technique part restart beginning case shoot self know program us overlay nt see disk try looking disk good old norton hidden file probably overlay one still ca nt find use pcwatch program must crackists trap terrupts using pcwatch find overlay                start pcwatch exclude everything left col search right col find do opnfile select run program cracked play game protection checked examine pcwatch output see file loaded right probably one holding check go file found overlay              great crack overlay do file nt need worry exe file debug write overlay file part explains basic cracking suggest keep backup copy overlay mess recover quickly ah thought cracking overlay going hard locksmith cracking            copydisk utility program locksmith alphalogic great tool cracking analyzing ability great determining protection find useful even start cracking analyze protected disk find id protection help way first help know order fake protection second help find program looking suggest get locksmith nt already check local pirate board program also suggest getting pcwatch norton utility   program many us cracking world end chapter ii example crack                               ok let put information practice examining crack common program first well look crack mean golf accolade accolade one company fervent belief copy protection                               title mean unprotect cgaega version crack work eliminating code test known bad sector original diskette see genuine article illegal copy code begin int cd hex do bios disk service routine followed byte later another int instruction program check returned value bit configuration signifies bad sector expected contin ues program execution code need patched golfexe file archexe file identical file lie near end file following step locate start test code patch replacing nop instruction hex method described us do debug utility norton utility nu work copy file mean disk onto fresh floppy using do copy command place original diskette harm way assuming debug drive floppy containing file unlocked b drive proceed fol low first rename golfexe file different extension exe ren golfexe golfdeb next load file golfdeb debug display   debug prompt debug b golfexe search beginning code patched typing c ffff cd search file two byte int instruction go well two address appear screen xxxxc xxxxa xxxx indicates number preceeding   vary system system number following   system next step use  u  command indicated unassemble byte order verify position file u csc unassembles byte code verify following se quence instruction int jb e mov al bxff push ax mov ax int pop ax jb e cmp al f jnz b instruction patching fol lowing step csc command assembles new instruction enter keyboard address shown beginning csc next byte ending including csb en ter op command  nop  h followed return enter hit enter address xxxxb end assemble command xxxxc nop enter xxxxd nop enter xxxxae nop enter xxxxaf nop enter xxxxb nop enter xxxxb enter wipe section code containing int check hex dump verify byte c b set hex csc write patched file disk follows w writes patched file back disk run typing golf run drive including hard drive q uit exit back do command ex ecuted   debug prompt get lost modifica tion made file disk issue  w  command q process archexe file different length segment address xxxx part address different find first int instruction address xxxxc second one xxxxa patching byte start c end b hex dump starting address c write file back disk  w  command  q  uit norton utility also used make patch gin searcing golfexe archexe file two byte combination cd remember enter hex byte located change byte starting first  cd  byte nop instruction check right place byte sequence file cd ff b cd c c f modifying byte write modified file back disk run drive end                               first tutorial crack another crack based idea using norton utility instead following unprotect method eypx submarine eypx another one company bent protecting world                               assembler magic title epyx submarine unprotect need make one modification main executable program submarine subexe assume computer hard disk path do time fire debug follows debug subexe cr computer respond   prompt look register make sure everything came okay type letter  r  immediately prompt com puter respond line info follows ax bx cx dx sp bp si di dsce esce ssb csfc ip nv ei pl nz na po nc fc cc mov ax e note value c  fc  hexadecimal segment address beginning program code computer memory highly probable value see c differ mine whatever write also value see d e s almost certainly differ mine cause concern register show value mine flag start value next search interrupt bios do interrupt built program used ensure original disk used run program whole key unprotect scheme pas interrupt program code tricky part unprotect find seg ment program code starting value c equal  fc  closer beginning program memory easy enough reset value c equal value d follows type immediately debug   prompt rcs cr debug prompt new value c csfc respond typing value d saw dumped register first time example typed  ce cr  value type different debug respond   prompt mean ready search type following   prompt c ffff cd cr computer respond three line information address three interrupt call built program first four digit segment ad dress equal value c set second four digit following colon offset ad dress primary interest u machine came back follows ce cef ce segment address identical three set address relatively close together look first offset address see mine   write bit unassembly type  u cr  letter  u  followed immedi ately blank space whatever first offset address turned followed carriage return familiar unassembled machine code look like line gibberish follows ce cd int ce f dec di cea c jz cef cd int ce f dec di ce bf mov di ce b mov ax computer unassemble automatically output line code screen may differ note abbreviated list shown address ginning two line contain interrupt int correspond first two address found search continue unassemble come another tricky part type  u cr    prompt get sixteen line code third inter rupt line begin address c  version submarine terribly important exercise least show thing proceeding okay type  u cr  prompt looking three key line code program appear fol low ce pop e ce pop bp ce cb retf true key instruction  pop e  instruction begin normal return sequence program ex ecuted interrupt instruction accompanying check debug machine print fewer line code shot may type  u  twice   find instruction nt found stuff either get help use debug go back using diskette version write offset address  pop e  instruction four digit following colon example   well way please persevere next step modify program jump around code executes interrupt go immediately instruction begin normal return sequence  pop e  type following instruc tions carefully cr first bit tell debug new assembler code inserted address first interrupt first interrupt address   use correct address mine computer prompt address ce immediately type jmp cr instruction jump program immediately normal return code instruction risk redun dant  pop e  instruction different address use address   computer prompt address next struction went well make sure hit carriage return point debug return familiar   prompt time examine handiwork let unassemble starting address first interrupt instruction jump struction type  u cr   u  followed appro priate address carriage return first line begin ning address appear follows ce ebb jmp key four byte immediately following ad dress example  ebb  may important represent ac tual machine code jump instruction write four byte make sure correct want fun go reset register c original value first typing  rcs cr    prompt type original value c asked write using example typed  fc cr  next type  g cr    prompt mean go went well sub run point least put submarine file onto diskette hard disk subdirectory youre working nt run may made error check done nt give point run version debug may simply tolerated shenanigan done playing quit submarine  altq cr  type  q cr  debug prompt   appears come tough part ca nt walk phase complete detail may using one several program available modify content subexe debug way go ca nt write exe file com file                               note another method rename subexe file different extension exe enter debug way made change w rite change file right debug one drawback ca nt run program debug changed name                               get sector modification package norton work good work subexe file new diskette hard disk remember warned hard disk dangerous fully aware mess fault looking first occurrence interrupt  cd  using search facility program nt ability search twobyte hexa decimal code  cd  directly manually search                               note norton x search utility get point typing search text press tab key type actual hexadecimal code  cd                                start beginning subexe proceed want find first three first beginning program give hint found norton location hexadecimal location  decimal subexe program file do standard sector decimal byte replace two byte  cd   eb b  whatever jump instruction turned write save modified file modifying subexe go ahead execute program followed instruc tions run fine get help nt set load onto hard disk nt already run ram disk using bat file really want hum fa cilities copy   floppy   dis kette run machine accept medium upgrade new computer end                               let take look newer crack program space station oblivion eypx first earch debug norton utility cd could found yet using  different approach taken                                ptl title space station oblivion crack first must determine file int case file oblivionexe since main program probably contained int rename different extension load de bug earch int ffff cd promptly turned nothing hmmm  next might decide maybe code modifying self quit debug load pcwatch include int call familiar pcwatch memory resident program set look type bios call call made pcwatch print screen content regis ters current memory location call made pcwatch initialized run oblivionexe file hard disk leaving floppy drive door open sure enough red light come diskette drive pcwatch report address int call write quit game reboot dump pcwatch memory load oblivionexe debug issue g command breakpoint address use breakpoint guessed address pcwatch give well locked didnt quite common line work nt let discourage next loaded debug time u nassemble address got pcwatch instead finding int find harmless int hmm  could program converting cd cd run well test idea semble int program terminate right first int run program yes immediately red light come drive program terminate mally u nassemble area memory low hold int magically turned int clever  matter locating address routine jumped jmp correct disk found drive address go start nonsense ssemble jmp xxxx command xxxx address jump original disk drive w rite file back disk q uit debug rename file back oblivionexe afterwhich work fine end chapter iii removing doc check question                               new fad recently started software vendor involves use  password  either stored documentation actually documentation reach certain part program usually beginning program ask password look doc allowed con tinue wrong password entered usually drop do take demo version program new form copy protection annoying usually cracked without much effort file disk usually standard do format take look cracking doc check question first crack startup question f strike eagle microprose                               jp asp title f unprotect make copy original disk using do diskcopy pro gram diskcopy b insert copy disk drive invoke do de bug debug f ill area memory nothing f c l feff next l oad address c data disk sector sector l c let earch data loaded area copy protection routine c l feff fa eb fd occurences listed use address debug returned e nter command e xxxx                               part interested change autorization code space notice use earch command look ascii text                               c l feff  chip  occurance  chip  use address debug turned f ill command f xxxx l f write modified data w c quit debug q able diskcopy boot copy also press space bar ask authority code press  enter  need remember look code finely tucked away manual end                               similar method used break password program battlehawks lucasfilms however norton utility used search password change                               ptl title battlehawks doc check crack keeping line previous program lucasfilms released yet another program us doc check mean copy protection battlehawks run program first go series graphic display go series question asking type mission want fly train ing active duty side war want right simulation begin show pic ture japanese zero ask password supposed get looking picture zero user manual typing corresponding password enters simulation event enter wrong password put training mi sion removing doc check program like usually pretty easy ideal way remove doc check routine nt day debug trace around code might best way instance lunch hour work like need use standard qdcrs quick doc check removal system qdcrs well first play around program find accept password program accept anything like battlehawks accept alpha character learned like make educated guess program doc check routine load program norton utility nu point take look password write unusual one find explain later type password search string let nu search file find password couple thing happen find one occurrence find one occurrence nt find occurrence event case determine password stored opening eye looking event case go kitchen start pot coffee tell wife go bed without  special project  finish tonight way good luck need hopefully case occur take look data ask question password length set number space pas word next password always start certain number character first character previ ous password answer yes question luck change password space program allows battlehawks nt change favorite character letter x work good easy type easy remember ca nt answer yes question ei ther need bypass doc check routine need adventurous experiment battlehawks follow pattern quickly running time try something fast  wiped data area x password associated  garbage  saved change drop nu bh ask password filed area x next thing know escorting bombing run japanese carrier one turned fairly simple may run trouble doc check use graphic system gunship microprose come type doc check almost bypass routine good way setting break point using trace option debug end                               easy version doc check crack however  better  way crack doc check bypass routine completely user press enter worry space let take lot method looking crack program yeager advanced flight trainer electronic art                               ptl title yeager advanced flight trainer chapter cracking self booters                               take look cracking self booters compa ny found best copy protection scheme one dataeast maker ikari warrior victory road lockon karnov etc  posse special problem amateur cracker since seldom use stan dard do format let jump right                               area  higher normal  knowledge assembly language do diskette structure first basic disk physical structure data recorded disk series concentric circle called track track divided segment called sector standard doubledensity drive record track data new quaddensity drive record track however location size number sector within track software control pc diskette known softsectored characteristic diskette sector size number per track set track formatted disk formatting done either operating system rombios format service lot self booters almost form copy protection create unusual format via rombios diskette service inch diskette supported standard pc bios may sector   byte size do version   consistently used sector byte quite possible continue table displaying common disk format  type side sector track size byte  k k k k qd k qd k  single density double density qd quad density basic format two widespread use newer quad density format     high density diskette disk logical structure already mentioned inch diskette format track numbered outside track inside track closest center double sided diskette two side numbered two recording head doublesided disk drive also numbered bios locates sector disk threedimensional coordinate composed track number also referred cylinder number side number also called head number sector number do hand lo cates information sector number number sector sequentially outside inside refer particular sector either threedimensional coordinate sequential order rombios operation use threedimensional coordinate locate sector do operation tool de bug use do sequential notation basic formula convert threedimensional coordi nates used rombios sequential sector number used do follows dossectornumber biossector diosside sectorsperside biostrack sectorsperside sidesperdisk formula converting sequential sector number threedimensional coordinate biossector dossectornumber mod sectorsperside biosside dossectornumber sectorsperside mod sideperdisk biostrack dossectornumber sectorsperside sidesperdisk note doublesided ninesector diskette pc common disk format value sectorsperside value sidesperdisk also note side track numbered differently rombios numbering system side track num bered sector numbered diskette space allocation formatting process divide sector disk four section four different us section order stored boot record file alloca tion table fat directory data space size section varies format struc ture order section nt vary boot record section always single sector located sector track side boot record contains among thing short program start process loading operating system diskette boot record even nt operating system asisde startup program exact content boot record vary format format file allocation table fat follows boot record usually starting sector track side fat contains official record disk format map location sector used disk file do us fat keep record dataspace usage entry table con tains specific code indicate space used space available space unusable due defect disk file directory file directory next item disk used table content identifying file disk directory entry contains several piece information including file name size one part entry number point first group sec tor used file number also first entry file fat data space occupies bulk diskette directory last sector used store data three section used support data space sector data space allocated file asneeded basis unit known cluster cluster one sector long doublesided diskette pair adjacent sector continue describe basic do disk structure assembly language addressing technics                               simple routine make backup copy flight simulator version  microsoft know latest version x version serve purpose demonstrating access data program file selfbooter                               ptl title microsoft flight simulator  unprotect procedure convert flight simulator disk file loaded hard drive  read data original put onto another floppy give idea read data directly disk write back another disk first take unformatted disk place drive b target disk place do disk debug drive load debug hard disk debug going enter manually little program load f file disk e c b ba bb e f e f aa c ff c f b cd fe c fd c e cd e c next r eset ip register typing r ip typing four zero address prefix xxxx next insert original flight simulator disk drive run little loader g c c csa enter new address load e c e e c run loader g c c csa new address e c e c run loader g c c csa l oading directly disk self l d turn write back b drive w d etc  l d w d l d w d l d w d q uit debug backup copy flight simulator q end 
partition resizer v   c zeleps   program manual technical information file contains important information working usage partition resizer please read carefully using partition resizer must read readmest running partition resizer disclaimer program freeware may freely copy distribute long remains unchanged distributed original document file author responsible damage caused use program using program completely responsibility  partition resizer  need partition resizer  work  safe  change made previous version  working partition resizer  safety precaution  running program  technical matter  partition system  do partition structure  easy  partitioning technique  deciding want  collecting many small partition larger one  splitting partition two  playing partition size position  credit address         partition resizer  need partition resizer last year people search power new operating system like o window nt linux freebsd unices trying escape black white world do nt always easy since existing interesting software still running do user try keep do partition along new o partition always easy since repartitioning mean loss data leading need backup streamer worse floppy backup many user prefer loose data backing valuable order repartition hard drive situation thought  make resizing program would save time money  made little program exactly change fat partition size move partition empty disk space make space create new partition get many small partition grow one larger well read carefully instruction use program section included many technical information help understand program work get basic knowledge partitioning fat file system remember program intend replace fdisk rather complementary need fdisk soon make empty disk space order create new partition partition resizer remove partition create new one  work well tricky part detail described section try make start assume everybody understands importance partitioning also assume understand partitioning achieved nt partitioning marking territory physical disk surface first sector disk sector head cylinder resides executable code block look bootable partition run boot sector code sector contains information needed divide disk space partition later boot sector created o format utility load o kernel do case load iosys msdossys continues job loading information partition structure memory partition resizer two thing moving apart moving data change information contained partition structure resizing change file system data contained boot sector fat area partition fat f structure explained section  safe previous version  program worked flawlessly normal configuration crashed though case geoffrey coram gjcor mitedu happened configuration never tested three primary do partition disk version work fine understand even program tested hundred partition partition combination even program worked great till might still incompatibility even bug case find problem please inform asap order avoid trouble backup valuable data disk replaced something happens reinstall lost partition combination program tested combination created do fdisk compliant created partition structure compatible do program might cause damage disk never tell  typical partition structure described later document section reliability nt everything stability also great factor program stable restore work even sudden power shutdown normally program interrupted resizing moving process would impossible access partition data program store every single step always know last action speed safety reason use cmos byte  alarm byte store step counter number content cmos preserved even power program always find last step continue work like nothing happened nt believe test one thing could nt prevent bad sector case disk bad sector program run order protect data make surface scan start certain disk free defect may skip would better disk surface scanned commercial program like norton disk doctor pc tool diskfix run partition resizer note program really dangerous nt follow precaution described readmest file please read carefully using program  change made previous version fixed major bug one primary do partition changed disk recognition routine documentation update  working partition resizer  safety precaution every program mess data extra careful difficult make mistake cost valuable data must follow carefully instruction contained file readmest order ensure data safety would good idea print troubledoc file order available something wrong happens  running program program first look disk characteristic scan partition information identify check do partition disk basic check continue main menu program choice first resizing do partition extended partition option resize partition order make free space new partition created also grow partition unallocated space available cluster size big enough also resize extended partition resize partition may use second option move partition move partition empty space way able change order partition disk third option used change partition cluster size help make small new partition able grow size want option used empty formatted partition since deletes data inside partition fourth option show detailed information every partition disk may sometimes help find partition want move resize last option exit program made change partition structure immediately reboot machine new information loaded disk every choice lead menu asked choose partition modified enter partition number press enter every partition description four flag first flag either p l e letter stand primary logical extended partition respectively flag show specified partition resized partition resized flag show partition moved flag show partition incompatible program therefore moved resized partition moved always safe tried moving fat hpfs partition successfully sure every partition type decide move partition type fat proceeding risk choosing partition want asked change new partition size move done cylinder map key always press esc quit main menu decide new setting satisfy may press enter asked confirm action press key get back main menu screen clear asked whether want perform surface test necessary know disk free defect performed surface test recently since take time several second minute depending size partition uncertain perform surface test since bad sector dangerous data program find bad sector quit immediately surface test concludes normally program start performing requested change may take second hour prepared program terminated abnormally pe case power shutdown nt worry always reboot run program continue exactly point stopped worry finish may proceed change exit program boot machine sound easy well confused better check next section get idea whole partitioning system still question get help friend contact via internet address see end document nt access internet send letter postcard preferred try help much nt forget tell detail system partition send copy presizerlog file  technical matter  partition system partition system one important thing disk subsystem standard beyond file system operating system partition structure look much like do directory structure root directory root sector first sector disk machine boot bios load sector address c jump understand code written beginning sector code search primary partition list see one bootable load first sector boot sector address c jump operating system take control let see detail detailed map root partition sector sector head cylinder may often see mbr master boot record offset description xxda boot code xbexcd first primary partition descriptor xcexdd second primary partition descriptor xdexed third primary partition descriptor xeexfd fourth primary partition descriptor xfexff system marking word xaa boot code executable code described partition descriptor following form offset description x boot marking x side x sector cylinder  starting location x cylinder  x system description x side x sector cylinder  ending location x cylinder  xxb relative sector xcxf number sector partition boot marking byte value either drive number x x partition active partition disk boot partition system boot next byte contain side cylinder sector partition begin sector cylinder stored two byte bit  cylinder value stored second byte bit  stored high bit first byte sector value stored bit  first byte word bitmapped like fedcba cccccccc cc c cylinder bit number show cylinder bit sector bit right system byte identification byte partition value mean partition used value depend file system do us value  fat fat bigdos partition respectively value mean extended partition explained later next ending location sector partition later relative sector value number show position partition relative present sector primary partition starting sector partition primary partition partition described root partition structure see later partition descriptor place disk well called logical drive last item descriptor partition length sector root sector space descriptor right word value xaa mark sector system sector value exists every sector partition structure including boot sector nt exist structure may probably damaged concerning extended partition described partition root sector treatment different partition specifically treated operating system point sector contains partition descriptor partition extended partition partition disk let see small graphic example mbr st ext nd ext rd ext                           p l l l p e       e       e   p                           example see map partition structure mbr stand master boot record root sector st nd rd ext stand st nd rd extended partition node p stand primary partition e stand extended partition l stand logical drive e partition mbr called main root primary extended partition whole extended partition structure depending partition starting location primary extended partition point st extended partition space primary extended partition allocates reserved logical drive st extended partition rest well contain information respective logical drive way identical mbr described without boot code part every extended partition descriptor well may contain logical drive extended partition well partition structure linked list structure long like every extended partition description sector xaa mark end identify system sector course specification partition partition must start beginning cylinder end cylinder end starting location must always cyl xxxx head sector ending location must cyl yyyy head k sector l k number head physical disk l number sector per track physical disk also delete one middle logical drive pe nd ext previous extended partition connected directly next replacing link want see whole thing make primary do partition smaller create new logical drive play get much help commercial disk editor course play partition resizer  do partition structure mbr executable code load boot partition boot record second step booting procedure whole thing differs o o look do proceeding since rest o le documented complicated although next version partition resizer manage resize o partition get lucky enough ntfs  do partition rather simple first sector boot sector right two copy fat file allocation table right sector root directory finally cluster unused later rest cluster boot record executable code block loaded mbr make preparation order load iosys file do kernel call kernel  useless u since processor understand machine code boot sector also contains useful information information begin offset sector contains following offset description xxa oem id small string written formatter xbxc byte per sector always depends physical disk characteristic disk different value please nt hesitate inform partition resizer wo nt work disk sector size xd sector per cluster cluster basic block information fat drive fat drive cluster size limit maximum size partition reach resizing xexf reserved sector beginning normally boot sector sector begin fat area x fat copy many fat copy normally two copy fat xx root directory entry normally show maximum number file directory root directory hold root directory constant length entry bytesentry bytessector sector xx total sector disk small le sector partition value contains number number stored byte xx entry left old do version partition could sector x medium descriptor byte byte always f hard disk xx sector per fat show many sector fat take depends many cluster partition fat type bitbit sector xx sector per track physical disk sector per track value xaxb side physical disk head number xcxf special hidden sector many sector exist partition description sector boot sector usually one track xx big total number sector sector partition number written xx physical drive number physical drive number cx dx etc x extended boot record signature mark extended boot record disk formatted do  later xxa volume serial number partition serial number xbx volume label partition label string xxd f id string identifies partition bit fat bit fat detailed description boot record information help understand fat file system boot sector first sector do partition number reserved sector normally show many sector fat area case first fat sector sector partition every sector number taken relatively beginning partition first fat length given boot sector contains entry mark partition space allocation every file small descriptor byte resides directory area fat directory area file described parent directory reach root directory constant area partition see later word value file descriptor tell do file first cluster fat consists word value bit value bit fat system begin first sector continue last one every value represents cluster one depending value offset fat beginning rd word fat stand rd cluster partition do know file first cluster looking find value stored fat respective position value point next cluster file eof marking xffff found xfff bit fat empty cluster marked bad cluster xfff fat work first two position fat reserved identification code xfffffff xfffff bit fat rest fat nd rd etc identical first one exact copy first fat begin right end first fat right last fat resides root directory normally sector long contains byte entry describe root directory file directory right root directory begin first cluster cluster unused cluster right two cluster begin user space file stored whole story do file system file system designed fast easy find unallocated space certain disadvantage one large amount unused space caused use cluster example mb disk use byte cluster size sector mean write file several byte long consume space k could resolved could use cluster do partition could mean bit fat order cluster sector since possible another solution one partition k cluster size partition k cluster size loss lowered dramatically would save many meg though always possible since changing cluster size without loosing existing data extremely complicated know wait till see next version partition resizer   easy well actually nt do partition designed remain unchanged faced lot problem trying successfully resize worst fat fat vice versa conversion needed designed fat file system thought would smart determine fat type partition cluster number  runtime mean boot machine do calculates number cluster partition le assuming fat bit greater equal take bit well could nt find good reason technique caused much trouble since grow partition cluster shrink le change fat vice versa another thing troubled fact pc tool diskfix found error partition structure everything seemed ok later discovered pc tool give false alarm empty space extended partition first logical drive mean two logical drive extended partition delete first one pc tool warn without reason program since thing happens fdisk still problem appeared fixed since pc tool consider cluster limit cluster do chkdsk found partition ok cluster bit fat pc tool diskfix considered bit appeared messed avoid make partition cluster number avoid similar problem program normally partition resized correctly case diagnostics program find fat error anything nt jump conclusion try good old chkdsk still doubt partition integrity try third diagnostics program get rid doubt  partitioning technique  deciding want well ok got program happens create proper space new partition partition one want shrink grow place partition empty space order like grow partition refuse grow first decide want take look partition list fdisk partition resizer provide decide partition need resize may recognise size serial number think new size nt forget resizing logical drive nt make space primary partition logical drive move partition inside extended partition resize extended partition order make space new primary partition logical drive think extended partition like balloon box get space box nt deflate balloon inflate balloon nt empty space box remember inside extended partition get outside get inside either useful technique use certain situation take look see meet need  collecting many small partition larger one sometimes get disk divided three four partition useful thing solution backup data delete whole partition structure create large partition put data inside partition resizer resolve problem without backing much faster easier following decide partition one remain normally choose primary partition problem grow enough decide size partition finally grow check primary partition grow size ca nt go step b otherwise read step c b want create partition grow enough need empty primary partition shrink minimum growing logical drive done shrinking primary partition expanding downwards extended partition moving first logical drive beginning extended partition growing max exit program move much file primary partition grown logical drive defrag primary partition repeat step b primary partition empty empty use program change cluster size match need provide program desired size size want partition finish whole process partition resizer suggest cluster size apply partition optimum size given desired partition size boot partition make system partition run sys c primary partition able grow enough start moving data try get data small partition finish early get rid filled primary partition still data partition emptying move data emptying partition partition order empty faster partition empty delete fdisk empty defrag shrink minimum move end empty space created grow previous partition reclaim empty space created exit program move rest data remaining grown partition repeat empty partition delete fdisk one small partition deleted move logical drive end empty space resize extended partition order make space grow primary partition choose another partition repeat step c empty delete logical drive last one delete extended partition presto grow primary partition fill empty space disk  splitting partition two technique much alike previous one suppose one primary partition want split two partition faster easier previous procedure following defrag primary partition shrink minimum way create empty space new partition b using fdisk create extended partition logical drive format logical drive run partition resizer decide final size new partition order change cluster size still empty decide final size choose third option partition resizer main menu give desired size size decided program suggest cluster size optimum partition apply size c finish creating modifying new partition exit program move data want new partition shrink primary partition defraging necessary extend extended partition starting position towards beginning disk move logical drive beginning extended partition grow logical drive maximum repeat step reach desired size  playing partition size position general advice partition resizing shrinking partition always defrag first leave space end partition freed program le space end partition le shrinking defraging take special care unmovable file must moved change attribute defraging disk system file special case unmovable file must extra careful check troubledoc see info system file b although partition resizer move primary partition rarely need always leave do primary partition original place unless absolutely need move harm partition might leave unused space primary partition never used do fdisk warning move primary do partition might able boot partition c want install new operating system may delete much data do partition since move data new partition shrink do partition always follow safety rule described readmest playing data really dangerous sometimes careful  credit address first would like thank everyone believed project absolutely nobody would like thank laertis billy anagnostou sharing work since first disassemble mbr code boot record code gave basic knowledge partitioning would also like thank raymond skevakis testing program disk even finish special thanks go dr han michael kvasnicka akl rsrrzunikoelnde additional scsi testing advice scsi support special thanks also go jorge george anastassakis beta testing version  ruined system nodens takis kalogeratos letting run program scsi disk helped lot many thanks go daniel pun dpun directca gave first hint problem osfat installation special thanks appologies geoffrey  tough luck  coram gjcoram mitedu discovering multiple primary do partition bug also thank spending time read document using program hope technical info included seriously help many create program find program useful always send postcard following address john lagonikas lycourgou str glyfada athens greece send message internet address zeleps holgr course question like ask program technical info nt hesitate send message glad help course anyway used program liked please send message opinion suggestion program request anyone info file system fat please contact thank        